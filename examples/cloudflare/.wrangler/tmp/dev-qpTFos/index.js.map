{
  "version": 3,
  "sources": ["../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/tslib/tslib.es6.mjs", "../../../node_modules/rxjs/src/internal/util/isFunction.ts", "../../../node_modules/rxjs/src/internal/util/createErrorClass.ts", "../../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts", "../../../node_modules/rxjs/src/internal/util/arrRemove.ts", "../../../node_modules/rxjs/src/internal/Subscription.ts", "../../../node_modules/rxjs/src/internal/config.ts", "../../../node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts", "../../../node_modules/rxjs/src/internal/util/reportUnhandledError.ts", "../../../node_modules/rxjs/src/internal/util/noop.ts", "../../../node_modules/rxjs/src/internal/NotificationFactories.ts", "../../../node_modules/rxjs/src/internal/util/errorContext.ts", "../../../node_modules/rxjs/src/internal/Subscriber.ts", "../../../node_modules/rxjs/src/internal/symbol/observable.ts", "../../../node_modules/rxjs/src/internal/util/identity.ts", "../../../node_modules/rxjs/src/internal/util/pipe.ts", "../../../node_modules/rxjs/src/internal/Observable.ts", "../../../node_modules/rxjs/src/internal/util/lift.ts", "../../../node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts", "../../../node_modules/rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../../node_modules/rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../../node_modules/rxjs/src/internal/Subject.ts", "../../../node_modules/rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../../node_modules/rxjs/src/internal/scheduler/Action.ts", "../../../node_modules/rxjs/src/internal/scheduler/intervalProvider.ts", "../../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts", "../../../node_modules/rxjs/src/internal/util/Immediate.ts", "../../../node_modules/rxjs/src/internal/scheduler/immediateProvider.ts", "../../../node_modules/rxjs/src/internal/Scheduler.ts", "../../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../../node_modules/rxjs/src/internal/scheduler/async.ts", "../../../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../../node_modules/rxjs/src/internal/observable/empty.ts", "../../../node_modules/rxjs/src/internal/util/isScheduler.ts", "../../../node_modules/rxjs/src/internal/util/args.ts", "../../../node_modules/rxjs/src/internal/util/isArrayLike.ts", "../../../node_modules/rxjs/src/internal/util/isPromise.ts", "../../../node_modules/rxjs/src/internal/util/isInteropObservable.ts", "../../../node_modules/rxjs/src/internal/util/isAsyncIterable.ts", "../../../node_modules/rxjs/src/internal/util/throwUnobservableError.ts", "../../../node_modules/rxjs/src/internal/symbol/iterator.ts", "../../../node_modules/rxjs/src/internal/util/isIterable.ts", "../../../node_modules/rxjs/src/internal/util/isReadableStreamLike.ts", "../../../node_modules/rxjs/src/internal/observable/innerFrom.ts", "../../../node_modules/rxjs/src/internal/util/executeSchedule.ts", "../../../node_modules/rxjs/src/internal/operators/observeOn.ts", "../../../node_modules/rxjs/src/internal/operators/subscribeOn.ts", "../../../node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts", "../../../node_modules/rxjs/src/internal/scheduled/schedulePromise.ts", "../../../node_modules/rxjs/src/internal/scheduled/scheduleArray.ts", "../../../node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts", "../../../node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../../node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../../node_modules/rxjs/src/internal/scheduled/scheduled.ts", "../../../node_modules/rxjs/src/internal/observable/from.ts", "../../../node_modules/rxjs/src/internal/observable/of.ts", "../../../node_modules/rxjs/src/internal/observable/throwError.ts", "../../../node_modules/rxjs/src/internal/Notification.ts", "../../../node_modules/rxjs/src/internal/util/isDate.ts", "../../../node_modules/rxjs/src/internal/operators/map.ts", "../../../node_modules/rxjs/src/internal/operators/mergeInternals.ts", "../../../node_modules/rxjs/src/internal/operators/mergeMap.ts", "../../../node_modules/rxjs/src/internal/operators/mergeAll.ts", "../../../node_modules/rxjs/src/internal/operators/concatAll.ts", "../../../node_modules/rxjs/src/internal/observable/concat.ts", "../../../node_modules/rxjs/src/internal/observable/timer.ts", "../../../node_modules/rxjs/src/internal/observable/merge.ts", "../../../node_modules/rxjs/src/internal/operators/filter.ts", "../../../node_modules/rxjs/src/internal/operators/take.ts", "../../../node_modules/rxjs/src/internal/operators/ignoreElements.ts", "../../../node_modules/rxjs/src/internal/operators/mapTo.ts", "../../../node_modules/rxjs/src/internal/operators/delayWhen.ts", "../../../node_modules/rxjs/src/internal/operators/delay.ts", "../../../node_modules/hono/dist/helper/html/index.js", "../../../node_modules/svg-marbles/src/marble-parser.ts", "../../../node_modules/svg-marbles/src/svg-renderer.ts", "../../../node_modules/rxjs/src/internal/testing/SubscriptionLog.ts", "../../../node_modules/rxjs/src/internal/testing/SubscriptionLoggable.ts", "../../../node_modules/rxjs/src/internal/util/applyMixins.ts", "../../../node_modules/rxjs/src/internal/testing/ColdObservable.ts", "../../../node_modules/rxjs/src/internal/testing/HotObservable.ts", "../../../node_modules/rxjs/src/internal/testing/TestScheduler.ts", "../../../node_modules/svg-marbles/src/capture-observable.ts", "../../../node_modules/svg-marbles/src/index.ts", "../../../src/utils.ts", "../../../node_modules/hono/dist/jsx/constants.js", "../../../node_modules/hono/dist/jsx/dom/utils.js", "../../../node_modules/hono/dist/jsx/dom/context.js", "../../../node_modules/hono/dist/jsx/context.js", "../../../node_modules/hono/dist/jsx/intrinsic-element/common.js", "../../../node_modules/hono/dist/jsx/intrinsic-element/components.js", "../../../node_modules/hono/dist/jsx/children.js", "../../../node_modules/hono/dist/jsx/utils.js", "../../../node_modules/hono/dist/jsx/base.js", "../../../node_modules/hono/dist/jsx/jsx-dev-runtime.js", "../../../src/examples.tsx", "../../../node_modules/hono/dist/jsx/dom/intrinsic-element/components.js", "../../../node_modules/hono/dist/jsx/dom/render.js", "../../../node_modules/hono/dist/jsx/hooks/index.js", "../../../node_modules/hono/dist/jsx/dom/hooks/index.js", "../../../node_modules/hono/dist/jsx/dom/jsx-dev-runtime.js", "../../../node_modules/hono/dist/jsx/dom/components.js", "../../../node_modules/hono/dist/jsx/streaming.js", "../../../node_modules/hono/dist/jsx/components.js", "../../../node_modules/hono/dist/middleware/jsx-renderer/index.js", "../../../src/layout.tsx", "../../../src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-gbMxYW/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-gbMxYW/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/.wrangler/tmp/dev-qpTFos",
  "sourcesContent": ["// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (!part) {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n */\nexport class Subscription implements SubscriptionLike {\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param value The `next` value.\n   */\n  next(value: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param err The `error` exception.\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as ((value: T) => void) | undefined,\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent.\n * @param subscriber The stopped subscriber.\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @param subscribe The function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @param subscribe the subscriber function to be passed to the Observable constructor\n   * @return A new observable.\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @param operator the operator defining the operation to take on the observable\n   * @return A new observable with the Operator applied.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param observerOrNext Either an {@link Observer} with some or all callback methods,\n   * or the `next` handler that is called for each value emitted from the subscribed Observable.\n   * @param error A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param complete A handler for a terminal event resulting from successful completion.\n   * @return A subscription reference to the registered handlers.\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next A handler for each value emitted by the observable.\n   * @return A promise that either resolves on observable completion or\n   * rejects with the handled error.\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @return This instance of the observable.\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   *\n   * @return The Observable result of all the operators having been called\n   * in the order they were passed in.\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return Observable that this Subject casts to.\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param state Some contextual data that the `work` function uses when called by the\n   * Scheduler.\n   * @param delay Time to wait before executing the work, where the time unit is implicit\n   * and defined by the Scheduler.\n   * @return A subscription in order to be able to unsubscribe the scheduled work.\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param work A function representing a task, or some unit of work to be\n   * executed by the Scheduler.\n   * @param delay Time to wait before executing the work, where the time unit is\n   * implicit and defined by the Scheduler itself.\n   * @param state Some contextual data that the `work` function uses when called\n   * by the Scheduler.\n   * @return A subscription in order to be able to unsubscribe the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param input A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param scheduler An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return An Observable converted from {@link ObservableInput}.\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param args A comma separated list of arguments you want to be emitted.\n * @return An Observable that synchronously emits the arguments described\n * above and then immediately completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param value The `next` value.\n   * @return The \"next\" Notification representing the argument.\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param err The `error` error.\n   * @return The \"error\" Notification representing the argument.\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return The valueless \"complete\" Notification.\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param project The function to apply to each `value` emitted by the source\n * Observable. The `index` parameter is the number `i` for the i-th emission\n * that has happened since the subscription, starting from the number `0`.\n * @param thisArg An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param project A function that, when applied to an item emitted by the source\n * Observable, returns an Observable.\n * @param concurrent Maximum number of `ObservableInput`s being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param concurrent Maximum number of inner Observables being subscribed to\n * concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args `ObservableInput`s to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param args `ObservableInput`s to merge together. If the last parameter\n * is of type number, `merge` will use it to limit number of concurrently\n * subscribed `ObservableInput`s. If the last parameter is {@link SchedulerLike},\n * it will be used for scheduling the emission of values.\n * @return An Observable that emits items that are the result of every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers\u2019 `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n", "import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param due The delay duration in milliseconds (a `number`) or a `Date` until\n * which the emission of the source items is delayed.\n * @param scheduler The {@link SchedulerLike} to use for managing the timers\n * that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n", "// src/helper/html/index.ts\nimport { escapeToBuffer, raw, resolveCallbackSync, stringBufferToString } from \"../../utils/html.js\";\nvar html = (strings, ...values) => {\n  const buffer = [\"\"];\n  for (let i = 0, len = strings.length - 1; i < len; i++) {\n    buffer[0] += strings[i];\n    const children = Array.isArray(values[i]) ? values[i].flat(Infinity) : [values[i]];\n    for (let i2 = 0, len2 = children.length; i2 < len2; i2++) {\n      const child = children[i2];\n      if (typeof child === \"string\") {\n        escapeToBuffer(child, buffer);\n      } else if (typeof child === \"number\") {\n        ;\n        buffer[0] += child;\n      } else if (typeof child === \"boolean\" || child === null || child === void 0) {\n        continue;\n      } else if (typeof child === \"object\" && child.isEscaped) {\n        if (child.callbacks) {\n          buffer.unshift(\"\", child);\n        } else {\n          const tmp = child.toString();\n          if (tmp instanceof Promise) {\n            buffer.unshift(\"\", tmp);\n          } else {\n            buffer[0] += tmp;\n          }\n        }\n      } else if (child instanceof Promise) {\n        buffer.unshift(\"\", child);\n      } else {\n        escapeToBuffer(child.toString(), buffer);\n      }\n    }\n  }\n  buffer[0] += strings.at(-1);\n  return buffer.length === 1 ? \"callbacks\" in buffer ? raw(resolveCallbackSync(raw(buffer[0], buffer.callbacks))) : raw(buffer[0]) : stringBufferToString(buffer, buffer.callbacks);\n};\nexport {\n  html,\n  raw\n};\n", "export interface MarbleEvent {\n  time: number;\n  value?: string;\n  type: 'next' | 'error' | 'complete';\n}\n\nexport interface ParsedMarbleDiagram {\n  events: MarbleEvent[];\n  duration: number;\n}\n\nexport function parseMarbleDiagram(marble: string, frameTime: number = 10): ParsedMarbleDiagram {\n  const events: MarbleEvent[] = [];\n  let currentTime = 0;\n\n  for (let i = 0; i < marble.length; i++) {\n    const char = marble[i];\n\n    switch (char) {\n      case '-':\n        currentTime += frameTime;\n        break;\n\n      case '|':\n        events.push({ time: currentTime, type: 'complete' });\n        break;\n\n      case '#':\n        events.push({ time: currentTime, type: 'error' });\n        break;\n\n      case '(':\n        const closeIndex = marble.indexOf(')', i);\n        if (closeIndex === -1) {\n          throw new Error('Unclosed group in marble diagram');\n        }\n        const groupContent = marble.substring(i + 1, closeIndex);\n        for (const groupChar of groupContent) {\n          if (groupChar !== '-') {\n            events.push({ time: currentTime, value: groupChar, type: 'next' });\n          }\n        }\n        i = closeIndex;\n        currentTime += frameTime;\n        break;\n\n      case ')':\n        throw new Error('Unexpected closing parenthesis');\n\n      case ' ':\n        break;\n\n      default:\n        events.push({ time: currentTime, value: char, type: 'next' });\n        currentTime += frameTime;\n        break;\n    }\n  }\n\n  return {\n    events,\n    duration: currentTime\n  };\n}\n", "import { ParsedMarbleDiagram } from './marble-parser';\n\nexport interface SVGTheme {\n  backgroundColor: string;\n  lineColor: string;\n  valueColor: string;\n  errorColor: string;\n  completeColor: string;\n  textColor: string;\n  fontSize: number;\n  lineWidth: number;\n  circleRadius: number;\n  circleStrokeColor?: string;\n  circleStrokeWidth?: number;\n  padding: number; // Vertical padding only - horizontal padding is calculated automatically\n  rowHeight: number;\n  timeScale: number;\n}\n\nexport const defaultTheme: SVGTheme = {\n  backgroundColor: '#ffffff',\n  lineColor: '#333333',\n  valueColor: '#4CAF50',\n  errorColor: '#f44336',\n  completeColor: '#2196F3',\n  textColor: '#000000',\n  fontSize: 14,\n  lineWidth: 2,\n  circleRadius: 8,\n  padding: 25, // Increased to provide better default spacing\n  rowHeight: 60,\n  timeScale: 3\n};\n\nexport interface RenderOptions {\n  theme?: Partial<SVGTheme>;\n  name?: string;\n}\n\nexport function renderMarbleDiagramToSVG(diagram: ParsedMarbleDiagram, options: RenderOptions = {}): string {\n  const theme = { ...defaultTheme, ...options.theme };\n  const { padding, rowHeight, timeScale, lineWidth, circleRadius, fontSize } = theme;\n\n  // Calculate horizontal padding automatically to prevent marble truncation\n  const strokeWidth = theme.circleStrokeWidth || lineWidth;\n  const maxMarbleRadius = circleRadius + strokeWidth;\n  const textWidth = fontSize * 0.6; // Approximate width of single character\n  const horizontalPadding = maxMarbleRadius + textWidth + 5; // Add 5px buffer for safety\n\n  const width = diagram.duration * timeScale + horizontalPadding * 2;\n  const height = rowHeight + padding * 2;\n\n  let svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\">`;\n  svg += `<rect width=\"${width}\" height=\"${height}\" fill=\"${theme.backgroundColor}\"/>`;\n\n  const y = padding + rowHeight / 2;\n  const startX = horizontalPadding;\n  const endX = startX + diagram.duration * timeScale;\n\n  svg += `<line x1=\"${startX}\" y1=\"${y}\" x2=\"${endX}\" y2=\"${y}\" stroke=\"${theme.lineColor}\" stroke-width=\"${lineWidth}\"/>`;\n\n  if (options.name) {\n    svg += `<text x=\"${horizontalPadding}\" y=\"${padding - 5}\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" fill=\"${theme.textColor}\">${options.name}</text>`;\n  }\n\n  diagram.events.forEach((event) => {\n    const x = startX + event.time * timeScale;\n\n    switch (event.type) {\n      case 'next':\n        const strokeColor = theme.circleStrokeColor || theme.lineColor;\n        const strokeWidth = theme.circleStrokeWidth || lineWidth;\n        svg += `<circle cx=\"${x}\" cy=\"${y}\" r=\"${circleRadius}\" fill=\"${theme.valueColor}\" stroke=\"${strokeColor}\" stroke-width=\"${strokeWidth}\" />`;\n        if (event.value) {\n          svg += `<text x=\"${x}\" y=\"${y + 5}\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"${fontSize}\" fill=\"${theme.textColor}\">${event.value}</text>`;\n        }\n        break;\n\n      case 'error':\n        svg += `<line x1=\"${x - circleRadius}\" y1=\"${y - circleRadius}\" x2=\"${x + circleRadius}\" y2=\"${y + circleRadius}\" stroke=\"${theme.errorColor}\" stroke-width=\"${\n          lineWidth * 1.5\n        }\"/>`;\n        svg += `<line x1=\"${x - circleRadius}\" y1=\"${y + circleRadius}\" x2=\"${x + circleRadius}\" y2=\"${y - circleRadius}\" stroke=\"${theme.errorColor}\" stroke-width=\"${\n          lineWidth * 1.5\n        }\"/>`;\n        break;\n\n      case 'complete':\n        svg += `<line x1=\"${x}\" y1=\"${y - circleRadius * 1.5}\" x2=\"${x}\" y2=\"${y + circleRadius * 1.5}\" stroke=\"${theme.completeColor}\" stroke-width=\"${lineWidth * 2}\"/>`;\n        break;\n    }\n  });\n\n  svg += '</svg>';\n\n  return svg;\n}\n", "export class SubscriptionLog {\n  constructor(public subscribedFrame: number,\n              public unsubscribedFrame: number = Infinity) {\n  }\n}", "import { Scheduler } from '../Scheduler';\nimport { SubscriptionLog } from './SubscriptionLog';\n\nexport class SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  scheduler: Scheduler;\n\n  logSubscribedFrame(): number {\n    this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));\n    return this.subscriptions.length - 1;\n  }\n\n  logUnsubscribedFrame(index: number) {\n    const subscriptionLogs = this.subscriptions;\n    const oldSubscriptionLog = subscriptionLogs[index];\n    subscriptionLogs[index] = new SubscriptionLog(\n      oldSubscriptionLog.subscribedFrame,\n      this.scheduler.now()\n    );\n  }\n}\n", "export function applyMixins(derivedCtor: any, baseCtors: any[]) {\n  for (let i = 0, len = baseCtors.length; i < len; i++) {\n    const baseCtor = baseCtors[i];\n    const propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\n    for (let j = 0, len2 = propertyKeys.length; j < len2; j++) {\n      const name = propertyKeys[j];\n      derivedCtor.prototype[name] = baseCtor.prototype[name];\n    }\n  }\n}", "import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { Subscriber } from '../Subscriber';\nimport { observeNotification } from '../Notification';\n\nexport class ColdObservable<T> extends Observable<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  logSubscribedFrame: () => number;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[], scheduler: Scheduler) {\n    super(function (this: Observable<T>, subscriber: Subscriber<any>) {\n      const observable: ColdObservable<T> = this as any;\n      const index = observable.logSubscribedFrame();\n      const subscription = new Subscription();\n      subscription.add(\n        new Subscription(() => {\n          observable.logUnsubscribedFrame(index);\n        })\n      );\n      observable.scheduleMessages(subscriber);\n      return subscription;\n    });\n    this.scheduler = scheduler;\n  }\n\n  scheduleMessages(subscriber: Subscriber<any>) {\n    const messagesLength = this.messages.length;\n    for (let i = 0; i < messagesLength; i++) {\n      const message = this.messages[i];\n      subscriber.add(\n        this.scheduler.schedule(\n          (state) => {\n            const { message: { notification }, subscriber: destination } = state!;\n            observeNotification(notification, destination);\n          },\n          message.frame,\n          { message, subscriber }\n        )\n      );\n    }\n  }\n}\napplyMixins(ColdObservable, [SubscriptionLoggable]);\n", "import { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Scheduler } from '../Scheduler';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nimport { observeNotification } from '../Notification';\n\nexport class HotObservable<T> extends Subject<T> implements SubscriptionLoggable {\n  public subscriptions: SubscriptionLog[] = [];\n  scheduler: Scheduler;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  logSubscribedFrame: () => number;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  logUnsubscribedFrame: (index: number) => void;\n\n  constructor(public messages: TestMessage[], scheduler: Scheduler) {\n    super();\n    this.scheduler = scheduler;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): Subscription {\n    const subject: HotObservable<T> = this;\n    const index = subject.logSubscribedFrame();\n    const subscription = new Subscription();\n    subscription.add(\n      new Subscription(() => {\n        subject.logUnsubscribedFrame(index);\n      })\n    );\n    subscription.add(super._subscribe(subscriber));\n    return subscription;\n  }\n\n  setup() {\n    const subject = this;\n    const messagesLength = subject.messages.length;\n    /* tslint:disable:no-var-keyword */\n    for (let i = 0; i < messagesLength; i++) {\n      (() => {\n        const { notification, frame } = subject.messages[i];\n        /* tslint:enable */\n        subject.scheduler.schedule(() => {\n          observeNotification(notification, subject);\n        }, frame);\n      })();\n    }\n  }\n}\napplyMixins(HotObservable, [SubscriptionLoggable]);\n", "import { Observable } from '../Observable';\nimport { ColdObservable } from './ColdObservable';\nimport { HotObservable } from './HotObservable';\nimport { TestMessage } from './TestMessage';\nimport { SubscriptionLog } from './SubscriptionLog';\nimport { Subscription } from '../Subscription';\nimport { VirtualTimeScheduler, VirtualAction } from '../scheduler/VirtualTimeScheduler';\nimport { ObservableNotification } from '../types';\nimport { COMPLETE_NOTIFICATION, errorNotification, nextNotification } from '../NotificationFactories';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { performanceTimestampProvider } from '../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../scheduler/animationFrameProvider';\nimport type { TimerHandle } from '../scheduler/timerHandle';\nimport { immediateProvider } from '../scheduler/immediateProvider';\nimport { intervalProvider } from '../scheduler/intervalProvider';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\nconst defaultMaxFrame: number = 750;\n\nexport interface RunHelpers {\n  cold: typeof TestScheduler.prototype.createColdObservable;\n  hot: typeof TestScheduler.prototype.createHotObservable;\n  flush: typeof TestScheduler.prototype.flush;\n  time: typeof TestScheduler.prototype.createTime;\n  expectObservable: typeof TestScheduler.prototype.expectObservable;\n  expectSubscriptions: typeof TestScheduler.prototype.expectSubscriptions;\n  animate: (marbles: string) => void;\n}\n\ninterface FlushableTest {\n  ready: boolean;\n  actual?: any[];\n  expected?: any[];\n}\n\nexport type observableToBeFn = (marbles: string, values?: any, errorValue?: any) => void;\nexport type subscriptionLogsToBeFn = (marbles: string | string[]) => void;\n\nexport class TestScheduler extends VirtualTimeScheduler {\n  /**\n   * The number of virtual time units each character in a marble diagram represents. If\n   * the test scheduler is being used in \"run mode\", via the `run` method, this is temporarily\n   * set to `1` for the duration of the `run` block, then set back to whatever value it was.\n   */\n  static frameTimeFactor = 10;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public readonly hotObservables: HotObservable<any>[] = [];\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public readonly coldObservables: ColdObservable<any>[] = [];\n\n  /**\n   * Test meta data to be processed during `flush()`\n   */\n  private flushTests: FlushableTest[] = [];\n\n  /**\n   * Indicates whether the TestScheduler instance is operating in \"run mode\",\n   * meaning it's processing a call to `run()`\n   */\n  private runMode = false;\n\n  /**\n   *\n   * @param assertDeepEqual A function to set up your assertion for your test harness\n   */\n  constructor(public assertDeepEqual: (actual: any, expected: any) => boolean | void) {\n    super(VirtualAction, defaultMaxFrame);\n  }\n\n  createTime(marbles: string): number {\n    const indexOf = this.runMode ? marbles.trim().indexOf('|') : marbles.indexOf('|');\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n    return indexOf * TestScheduler.frameTimeFactor;\n  }\n\n  /**\n   * @param marbles A diagram in the marble DSL. Letters map to keys in `values` if provided.\n   * @param values Values to use for the letters in `marbles`. If omitted, the letters themselves are used.\n   * @param error The error to use for the `#` marble (if present).\n   */\n  createColdObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): ColdObservable<T> {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n    const cold = new ColdObservable<T>(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  }\n\n  /**\n   * @param marbles A diagram in the marble DSL. Letters map to keys in `values` if provided.\n   * @param values Values to use for the letters in `marbles`. If omitted, the letters themselves are used.\n   * @param error The error to use for the `#` marble (if present).\n   */\n  createHotObservable<T = string>(marbles: string, values?: { [marble: string]: T }, error?: any): HotObservable<T> {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n    const messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);\n    const subject = new HotObservable<T>(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  }\n\n  private materializeInnerObservable(observable: Observable<any>, outerFrame: number): TestMessage[] {\n    const messages: TestMessage[] = [];\n    observable.subscribe({\n      next: (value) => {\n        messages.push({ frame: this.frame - outerFrame, notification: nextNotification(value) });\n      },\n      error: (error) => {\n        messages.push({ frame: this.frame - outerFrame, notification: errorNotification(error) });\n      },\n      complete: () => {\n        messages.push({ frame: this.frame - outerFrame, notification: COMPLETE_NOTIFICATION });\n      },\n    });\n    return messages;\n  }\n\n  expectObservable<T>(observable: Observable<T>, subscriptionMarbles: string | null = null) {\n    const actual: TestMessage[] = [];\n    const flushTest: FlushableTest = { actual, ready: false };\n    const subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);\n    const subscriptionFrame = subscriptionParsed.subscribedFrame === Infinity ? 0 : subscriptionParsed.subscribedFrame;\n    const unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;\n    let subscription: Subscription;\n\n    this.schedule(() => {\n      subscription = observable.subscribe({\n        next: (x) => {\n          // Support Observable-of-Observables\n          const value = x instanceof Observable ? this.materializeInnerObservable(x, this.frame) : x;\n          actual.push({ frame: this.frame, notification: nextNotification(value) });\n        },\n        error: (error) => {\n          actual.push({ frame: this.frame, notification: errorNotification(error) });\n        },\n        complete: () => {\n          actual.push({ frame: this.frame, notification: COMPLETE_NOTIFICATION });\n        },\n      });\n    }, subscriptionFrame);\n\n    if (unsubscriptionFrame !== Infinity) {\n      this.schedule(() => subscription.unsubscribe(), unsubscriptionFrame);\n    }\n\n    this.flushTests.push(flushTest);\n    const { runMode } = this;\n\n    return {\n      toBe(marbles: string, values?: any, errorValue?: any) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);\n      },\n      toEqual: (other: Observable<T>) => {\n        flushTest.ready = true;\n        flushTest.expected = [];\n        this.schedule(() => {\n          subscription = other.subscribe({\n            next: (x) => {\n              // Support Observable-of-Observables\n              const value = x instanceof Observable ? this.materializeInnerObservable(x, this.frame) : x;\n              flushTest.expected!.push({ frame: this.frame, notification: nextNotification(value) });\n            },\n            error: (error) => {\n              flushTest.expected!.push({ frame: this.frame, notification: errorNotification(error) });\n            },\n            complete: () => {\n              flushTest.expected!.push({ frame: this.frame, notification: COMPLETE_NOTIFICATION });\n            },\n          });\n        }, subscriptionFrame);\n      },\n    };\n  }\n\n  expectSubscriptions(actualSubscriptionLogs: SubscriptionLog[]): { toBe: subscriptionLogsToBeFn } {\n    const flushTest: FlushableTest = { actual: actualSubscriptionLogs, ready: false };\n    this.flushTests.push(flushTest);\n    const { runMode } = this;\n    return {\n      toBe(marblesOrMarblesArray: string | string[]) {\n        const marblesArray: string[] = typeof marblesOrMarblesArray === 'string' ? [marblesOrMarblesArray] : marblesOrMarblesArray;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray\n          .map((marbles) => TestScheduler.parseMarblesAsSubscriptions(marbles, runMode))\n          .filter((marbles) => marbles.subscribedFrame !== Infinity);\n      },\n    };\n  }\n\n  flush() {\n    const hotObservables = this.hotObservables;\n    while (hotObservables.length > 0) {\n      hotObservables.shift()!.setup();\n    }\n\n    super.flush();\n\n    this.flushTests = this.flushTests.filter((test) => {\n      if (test.ready) {\n        this.assertDeepEqual(test.actual, test.expected);\n        return false;\n      }\n      return true;\n    });\n  }\n\n  static parseMarblesAsSubscriptions(marbles: string | null, runMode = false): SubscriptionLog {\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog(Infinity);\n    }\n    // Spreading the marbles into an array leverages ES2015's support for emoji\n    // characters when iterating strings.\n    const characters = [...marbles];\n    const len = characters.length;\n    let groupStart = -1;\n    let subscriptionFrame = Infinity;\n    let unsubscriptionFrame = Infinity;\n    let frame = 0;\n\n    for (let i = 0; i < len; i++) {\n      let nextFrame = frame;\n      const advanceFrameBy = (count: number) => {\n        nextFrame += count * this.frameTimeFactor;\n      };\n      const c = characters[i];\n      switch (c) {\n        case ' ':\n          // Whitespace no longer advances time\n          if (!runMode) {\n            advanceFrameBy(1);\n          }\n          break;\n        case '-':\n          advanceFrameBy(1);\n          break;\n        case '(':\n          groupStart = frame;\n          advanceFrameBy(1);\n          break;\n        case ')':\n          groupStart = -1;\n          advanceFrameBy(1);\n          break;\n        case '^':\n          if (subscriptionFrame !== Infinity) {\n            throw new Error(\"found a second subscription point '^' in a \" + 'subscription marble diagram. There can only be one.');\n          }\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          advanceFrameBy(1);\n          break;\n        case '!':\n          if (unsubscriptionFrame !== Infinity) {\n            throw new Error(\"found a second unsubscription point '!' in a \" + 'subscription marble diagram. There can only be one.');\n          }\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n        default:\n          // time progression syntax\n          if (runMode && c.match(/^[0-9]$/)) {\n            // Time progression must be preceded by at least one space\n            // if it's not at the beginning of the diagram\n            if (i === 0 || characters[i - 1] === ' ') {\n              const buffer = characters.slice(i).join('');\n              const match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n              if (match) {\n                i += match[0].length - 1;\n                const duration = parseFloat(match[1]);\n                const unit = match[2];\n                let durationInMs: number;\n\n                switch (unit) {\n                  case 'ms':\n                    durationInMs = duration;\n                    break;\n                  case 's':\n                    durationInMs = duration * 1000;\n                    break;\n                  case 'm':\n                    durationInMs = duration * 1000 * 60;\n                    break;\n                  default:\n                    break;\n                }\n\n                advanceFrameBy(durationInMs! / this.frameTimeFactor);\n                break;\n              }\n            }\n          }\n\n          throw new Error(\"there can only be '^' and '!' markers in a \" + \"subscription marble diagram. Found instead '\" + c + \"'.\");\n      }\n\n      frame = nextFrame;\n    }\n\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  }\n\n  static parseMarbles(\n    marbles: string,\n    values?: any,\n    errorValue?: any,\n    materializeInnerObservables: boolean = false,\n    runMode = false\n  ): TestMessage[] {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' + 'unsubscription marker \"!\"');\n    }\n    // Spreading the marbles into an array leverages ES2015's support for emoji\n    // characters when iterating strings.\n    const characters = [...marbles];\n    const len = characters.length;\n    const testMessages: TestMessage[] = [];\n    const subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');\n    let frame = subIndex === -1 ? 0 : subIndex * -this.frameTimeFactor;\n    const getValue =\n      typeof values !== 'object'\n        ? (x: any) => x\n        : (x: any) => {\n            // Support Observable-of-Observables\n            if (materializeInnerObservables && values[x] instanceof ColdObservable) {\n              return values[x].messages;\n            }\n            return values[x];\n          };\n    let groupStart = -1;\n\n    for (let i = 0; i < len; i++) {\n      let nextFrame = frame;\n      const advanceFrameBy = (count: number) => {\n        nextFrame += count * this.frameTimeFactor;\n      };\n\n      let notification: ObservableNotification<any> | undefined;\n      const c = characters[i];\n      switch (c) {\n        case ' ':\n          // Whitespace no longer advances time\n          if (!runMode) {\n            advanceFrameBy(1);\n          }\n          break;\n        case '-':\n          advanceFrameBy(1);\n          break;\n        case '(':\n          groupStart = frame;\n          advanceFrameBy(1);\n          break;\n        case ')':\n          groupStart = -1;\n          advanceFrameBy(1);\n          break;\n        case '|':\n          notification = COMPLETE_NOTIFICATION;\n          advanceFrameBy(1);\n          break;\n        case '^':\n          advanceFrameBy(1);\n          break;\n        case '#':\n          notification = errorNotification(errorValue || 'error');\n          advanceFrameBy(1);\n          break;\n        default:\n          // Might be time progression syntax, or a value literal\n          if (runMode && c.match(/^[0-9]$/)) {\n            // Time progression must be preceded by at least one space\n            // if it's not at the beginning of the diagram\n            if (i === 0 || characters[i - 1] === ' ') {\n              const buffer = characters.slice(i).join('');\n              const match = buffer.match(/^([0-9]+(?:\\.[0-9]+)?)(ms|s|m) /);\n              if (match) {\n                i += match[0].length - 1;\n                const duration = parseFloat(match[1]);\n                const unit = match[2];\n                let durationInMs: number;\n\n                switch (unit) {\n                  case 'ms':\n                    durationInMs = duration;\n                    break;\n                  case 's':\n                    durationInMs = duration * 1000;\n                    break;\n                  case 'm':\n                    durationInMs = duration * 1000 * 60;\n                    break;\n                  default:\n                    break;\n                }\n\n                advanceFrameBy(durationInMs! / this.frameTimeFactor);\n                break;\n              }\n            }\n          }\n\n          notification = nextNotification(getValue(c));\n          advanceFrameBy(1);\n          break;\n      }\n\n      if (notification) {\n        testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification });\n      }\n\n      frame = nextFrame;\n    }\n    return testMessages;\n  }\n\n  private createAnimator() {\n    if (!this.runMode) {\n      throw new Error('animate() must only be used in run mode');\n    }\n\n    // The TestScheduler assigns a delegate to the provider that's used for\n    // requestAnimationFrame (rAF). The delegate works in conjunction with the\n    // animate run helper to coordinate the invocation of any rAF callbacks,\n    // that are effected within tests, with the animation frames specified by\n    // the test's author - in the marbles that are passed to the animate run\n    // helper. This allows the test's author to write deterministic tests and\n    // gives the author full control over when - or if - animation frames are\n    // 'painted'.\n\n    let lastHandle = 0;\n    let map: Map<number, FrameRequestCallback> | undefined;\n\n    const delegate = {\n      requestAnimationFrame(callback: FrameRequestCallback) {\n        if (!map) {\n          throw new Error('animate() was not called within run()');\n        }\n        const handle = ++lastHandle;\n        map.set(handle, callback);\n        return handle;\n      },\n      cancelAnimationFrame(handle: number) {\n        if (!map) {\n          throw new Error('animate() was not called within run()');\n        }\n        map.delete(handle);\n      },\n    };\n\n    const animate = (marbles: string) => {\n      if (map) {\n        throw new Error('animate() must not be called more than once within run()');\n      }\n      if (/[|#]/.test(marbles)) {\n        throw new Error('animate() must not complete or error');\n      }\n      map = new Map<number, FrameRequestCallback>();\n      const messages = TestScheduler.parseMarbles(marbles, undefined, undefined, undefined, true);\n      for (const message of messages) {\n        this.schedule(() => {\n          const now = this.now();\n          // Capture the callbacks within the queue and clear the queue\n          // before enumerating the callbacks, as callbacks might\n          // reschedule themselves. (And, yeah, we're using a Map to represent\n          // the queue, but the values are guaranteed to be returned in\n          // insertion order, so it's all good. Trust me, I've read the docs.)\n          const callbacks = Array.from(map!.values());\n          map!.clear();\n          for (const callback of callbacks) {\n            callback(now);\n          }\n        }, message.frame);\n      }\n    };\n\n    return { animate, delegate };\n  }\n\n  private createDelegates() {\n    // When in run mode, the TestScheduler provides alternate implementations\n    // of set/clearImmediate and set/clearInterval. These implementations are\n    // consumed by the scheduler implementations via the providers. This is\n    // done to effect deterministic asap and async scheduler behavior so that\n    // all of the schedulers are testable in 'run mode'. Prior to v7,\n    // delegation occurred at the scheduler level. That is, the asap and\n    // animation frame schedulers were identical in behavior to the async\n    // scheduler. Now, when in run mode, asap actions are prioritized over\n    // async actions and animation frame actions are coordinated using the\n    // animate run helper.\n\n    let lastHandle = 0;\n    const scheduleLookup = new Map<\n      TimerHandle,\n      {\n        due: number;\n        duration: number;\n        handle: TimerHandle;\n        handler: () => void;\n        subscription: Subscription;\n        type: 'immediate' | 'interval' | 'timeout';\n      }\n    >();\n\n    const run = () => {\n      // Whenever a scheduled run is executed, it must run a single immediate\n      // or interval action - with immediate actions being prioritized over\n      // interval and timeout actions.\n      const now = this.now();\n      const scheduledRecords = Array.from(scheduleLookup.values());\n      const scheduledRecordsDue = scheduledRecords.filter(({ due }) => due <= now);\n      const dueImmediates = scheduledRecordsDue.filter(({ type }) => type === 'immediate');\n      if (dueImmediates.length > 0) {\n        const { handle, handler } = dueImmediates[0];\n        scheduleLookup.delete(handle);\n        handler();\n        return;\n      }\n      const dueIntervals = scheduledRecordsDue.filter(({ type }) => type === 'interval');\n      if (dueIntervals.length > 0) {\n        const firstDueInterval = dueIntervals[0];\n        const { duration, handler } = firstDueInterval;\n        firstDueInterval.due = now + duration;\n        // The interval delegate must behave like setInterval, so run needs to\n        // be rescheduled. This will continue until the clearInterval delegate\n        // unsubscribes and deletes the handle from the map.\n        firstDueInterval.subscription = this.schedule(run, duration);\n        handler();\n        return;\n      }\n      const dueTimeouts = scheduledRecordsDue.filter(({ type }) => type === 'timeout');\n      if (dueTimeouts.length > 0) {\n        const { handle, handler } = dueTimeouts[0];\n        scheduleLookup.delete(handle);\n        handler();\n        return;\n      }\n      throw new Error('Expected a due immediate or interval');\n    };\n\n    // The following objects are the delegates that replace conventional\n    // runtime implementations with TestScheduler implementations.\n    //\n    // The immediate delegate is depended upon by the asapScheduler.\n    //\n    // The interval delegate is depended upon by the asyncScheduler.\n    //\n    // The timeout delegate is not depended upon by any scheduler, but it's\n    // included here because the onUnhandledError and onStoppedNotification\n    // configuration points use setTimeout to avoid producer interference. It's\n    // inclusion allows for the testing of these configuration points.\n\n    const immediate = {\n      setImmediate: (handler: () => void) => {\n        const handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: this.now(),\n          duration: 0,\n          handle,\n          handler,\n          subscription: this.schedule(run, 0),\n          type: 'immediate',\n        });\n        return handle;\n      },\n      clearImmediate: (handle: TimerHandle) => {\n        const value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      },\n    };\n\n    const interval = {\n      setInterval: (handler: () => void, duration = 0) => {\n        const handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: this.now() + duration,\n          duration,\n          handle,\n          handler,\n          subscription: this.schedule(run, duration),\n          type: 'interval',\n        });\n        return handle;\n      },\n      clearInterval: (handle: TimerHandle) => {\n        const value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      },\n    };\n\n    const timeout = {\n      setTimeout: (handler: () => void, duration = 0) => {\n        const handle = ++lastHandle;\n        scheduleLookup.set(handle, {\n          due: this.now() + duration,\n          duration,\n          handle,\n          handler,\n          subscription: this.schedule(run, duration),\n          type: 'timeout',\n        });\n        return handle;\n      },\n      clearTimeout: (handle: TimerHandle) => {\n        const value = scheduleLookup.get(handle);\n        if (value) {\n          value.subscription.unsubscribe();\n          scheduleLookup.delete(handle);\n        }\n      },\n    };\n\n    return { immediate, interval, timeout };\n  }\n\n  /**\n   * The `run` method performs the test in 'run mode' - in which schedulers\n   * used within the test automatically delegate to the `TestScheduler`. That\n   * is, in 'run mode' there is no need to explicitly pass a `TestScheduler`\n   * instance to observable creators or operators.\n   *\n   * @see {@link /guide/testing/marble-testing}\n   */\n  run<T>(callback: (helpers: RunHelpers) => T): T {\n    const prevFrameTimeFactor = TestScheduler.frameTimeFactor;\n    const prevMaxFrames = this.maxFrames;\n\n    TestScheduler.frameTimeFactor = 1;\n    this.maxFrames = Infinity;\n    this.runMode = true;\n\n    const animator = this.createAnimator();\n    const delegates = this.createDelegates();\n\n    animationFrameProvider.delegate = animator.delegate;\n    dateTimestampProvider.delegate = this;\n    immediateProvider.delegate = delegates.immediate;\n    intervalProvider.delegate = delegates.interval;\n    timeoutProvider.delegate = delegates.timeout;\n    performanceTimestampProvider.delegate = this;\n\n    const helpers: RunHelpers = {\n      cold: this.createColdObservable.bind(this),\n      hot: this.createHotObservable.bind(this),\n      flush: this.flush.bind(this),\n      time: this.createTime.bind(this),\n      expectObservable: this.expectObservable.bind(this),\n      expectSubscriptions: this.expectSubscriptions.bind(this),\n      animate: animator.animate,\n    };\n    try {\n      const ret = callback(helpers);\n      this.flush();\n      return ret;\n    } finally {\n      TestScheduler.frameTimeFactor = prevFrameTimeFactor;\n      this.maxFrames = prevMaxFrames;\n      this.runMode = false;\n      animationFrameProvider.delegate = undefined;\n      dateTimestampProvider.delegate = undefined;\n      immediateProvider.delegate = undefined;\n      intervalProvider.delegate = undefined;\n      timeoutProvider.delegate = undefined;\n      performanceTimestampProvider.delegate = undefined;\n    }\n  }\n}\n", "import { TestScheduler } from 'rxjs/testing';\nimport { Observable } from 'rxjs';\n\ninterface MarbleCapture {\n  marble: string;\n  values: Record<string, any>;\n}\n\n/**\n * Captures the actual marble output of an observable within TestScheduler\n */\nexport function captureMarbles(\n  scheduler: TestScheduler,\n  setup: (helpers: { cold: TestScheduler['createColdObservable']; hot: TestScheduler['createHotObservable'] }) => Observable<any>\n): MarbleCapture {\n  let capturedMarble = '';\n  let capturedValues: Record<string, any> = {};\n\n  scheduler.run((helpers) => {\n    const observable = setup(helpers);\n\n    // Create a subscriber to capture emissions\n    const messages: any[] = [];\n    let subscription: any;\n\n    scheduler.schedule(() => {\n      subscription = observable.subscribe({\n        next: (value) => {\n          messages.push({\n            frame: scheduler.frame,\n            notification: { kind: 'N', value, hasValue: true }\n          });\n        },\n        error: (error) => {\n          messages.push({\n            frame: scheduler.frame,\n            notification: {\n              kind: 'E',\n              value: undefined,\n              error,\n              hasValue: false\n            }\n          });\n        },\n        complete: () => {\n          messages.push({\n            frame: scheduler.frame,\n            notification: { kind: 'C', value: undefined, hasValue: false }\n          });\n        }\n      });\n    }, 0);\n\n    // Run the scheduler\n    scheduler.flush();\n\n    // Convert messages to marble notation\n    const result = messagesToMarbles(messages);\n    capturedMarble = result.marble;\n    capturedValues = result.values;\n  });\n\n  return { marble: capturedMarble, values: capturedValues };\n}\n\nfunction messagesToMarbles(messages: any[]): MarbleCapture {\n  if (messages.length === 0) {\n    return { marble: '', values: {} };\n  }\n\n  let marble = '';\n  const values: Record<string, any> = {};\n  let currentFrame = 0;\n  const alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  const valueToChar = new Map<string, string>();\n  const usedChars = new Set<string>();\n  let charIndex = 0;\n\n  // Sort messages by frame\n  messages.sort((a, b) => a.frame - b.frame);\n\n  for (const message of messages) {\n    // Add dashes for time gaps\n    while (currentFrame < message.frame) {\n      marble += '-';\n      currentFrame++;\n    }\n\n    const { notification } = message;\n\n    if (notification.kind === 'N') {\n      // Next value\n      const value = notification.value;\n      const valueStr = JSON.stringify(value);\n      let char = valueToChar.get(valueStr);\n\n      if (!char) {\n        // If the value is already a single letter/digit, use it directly\n        if (typeof value === 'string' && value.length === 1 && /^[a-zA-Z0-9]$/.test(value)) {\n          char = value;\n          // If this char is already used for a different value, find a new one\n          if (usedChars.has(char) && !valueToChar.has(valueStr)) {\n            char = getNextAvailableChar(alphabet, charIndex, usedChars);\n            charIndex++;\n          }\n        } else {\n          // For non-single-char values, assign a letter\n          char = getNextAvailableChar(alphabet, charIndex, usedChars);\n          charIndex++;\n        }\n\n        valueToChar.set(valueStr, char);\n        usedChars.add(char);\n        values[char] = value;\n      }\n\n      marble += char;\n    } else if (notification.kind === 'E') {\n      // Error\n      marble += '#';\n    } else if (notification.kind === 'C') {\n      // Complete\n      marble += '|';\n    }\n\n    currentFrame++;\n  }\n\n  return { marble, values };\n}\n\nfunction getNextAvailableChar(alphabet: string, startIndex: number, usedChars: Set<string>): string {\n  let index = startIndex;\n  let char = '';\n\n  do {\n    if (index < alphabet.length) {\n      char = alphabet[index];\n    } else {\n      // Use double letters: aa, ab, ac...\n      const letterIndex = index % alphabet.length;\n      const suffix = Math.floor(index / alphabet.length);\n      char = alphabet[letterIndex] + suffix;\n    }\n    index++;\n  } while (usedChars.has(char));\n\n  return char;\n}\n\n/**\n * Helper to capture marbles from a test scenario\n */\nexport function testWithCapture(setup: (helpers: { cold: TestScheduler['createColdObservable']; hot: TestScheduler['createHotObservable'] }) => Observable<any>): MarbleCapture {\n  const scheduler = new TestScheduler(() => true);\n  return captureMarbles(scheduler, setup);\n}\n", "import { parseMarbleDiagram } from './marble-parser';\nimport { renderMarbleDiagramToSVG, SVGTheme } from './svg-renderer';\n\nexport interface MarbleDiagram {\n  name?: string;\n  diagram: string;\n  frameTime?: number;\n}\n\nexport interface MarbleToSVGOptions {\n  theme?: Partial<SVGTheme>;\n  frameTime?: number;\n}\n\nexport function render(diagram: string | MarbleDiagram, options: MarbleToSVGOptions = {}): string {\n  let marbleString: string;\n  let name: string | undefined;\n  let frameTime: number;\n\n  if (typeof diagram === 'string') {\n    marbleString = diagram;\n    frameTime = options.frameTime || 10;\n  } else {\n    marbleString = diagram.diagram;\n    name = diagram.name;\n    frameTime = diagram.frameTime || options.frameTime || 10;\n  }\n\n  const parsed = parseMarbleDiagram(marbleString, frameTime);\n\n  return renderMarbleDiagramToSVG(parsed, {\n    theme: options.theme,\n    name\n  });\n}\n\nexport { parseMarbleDiagram, ParsedMarbleDiagram, MarbleEvent } from './marble-parser';\nexport { SVGTheme, defaultTheme } from './svg-renderer';\nexport { testWithCapture, captureMarbles } from './capture-observable';\n", "import { raw } from \"hono/html\";\nimport { render } from \"svg-marbles\";\nimport { MarbleDiagram, SVGTheme } from \"svg-marbles\";\n\nexport function MarbleSVG({\n  diagram,\n  theme,\n  color\n}: {\n  diagram: string | MarbleDiagram;\n  theme?: Partial<SVGTheme>;\n  color?: string;\n}) {\n  return raw(render(diagram, { theme: { ...theme, valueColor: color } }));\n}\n", "// src/jsx/constants.ts\nvar DOM_RENDERER = Symbol(\"RENDERER\");\nvar DOM_ERROR_HANDLER = Symbol(\"ERROR_HANDLER\");\nvar DOM_STASH = Symbol(\"STASH\");\nvar DOM_INTERNAL_TAG = Symbol(\"INTERNAL\");\nvar DOM_MEMO = Symbol(\"MEMO\");\nvar PERMALINK = Symbol(\"PERMALINK\");\nexport {\n  DOM_ERROR_HANDLER,\n  DOM_INTERNAL_TAG,\n  DOM_MEMO,\n  DOM_RENDERER,\n  DOM_STASH,\n  PERMALINK\n};\n", "// src/jsx/dom/utils.ts\nimport { DOM_INTERNAL_TAG } from \"../constants.js\";\nvar setInternalTagFlag = (fn) => {\n  ;\n  fn[DOM_INTERNAL_TAG] = true;\n  return fn;\n};\nexport {\n  setInternalTagFlag\n};\n", "// src/jsx/dom/context.ts\nimport { DOM_ERROR_HANDLER } from \"../constants.js\";\nimport { globalContexts } from \"../context.js\";\nimport { setInternalTagFlag } from \"./utils.js\";\nvar createContextProviderFunction = (values) => ({ value, children }) => {\n  if (!children) {\n    return void 0;\n  }\n  const props = {\n    children: [\n      {\n        tag: setInternalTagFlag(() => {\n          values.push(value);\n        }),\n        props: {}\n      }\n    ]\n  };\n  if (Array.isArray(children)) {\n    props.children.push(...children.flat());\n  } else {\n    props.children.push(children);\n  }\n  props.children.push({\n    tag: setInternalTagFlag(() => {\n      values.pop();\n    }),\n    props: {}\n  });\n  const res = { tag: \"\", props, type: \"\" };\n  res[DOM_ERROR_HANDLER] = (err) => {\n    values.pop();\n    throw err;\n  };\n  return res;\n};\nvar createContext = (defaultValue) => {\n  const values = [defaultValue];\n  const context = createContextProviderFunction(values);\n  context.values = values;\n  context.Provider = context;\n  globalContexts.push(context);\n  return context;\n};\nexport {\n  createContext,\n  createContextProviderFunction\n};\n", "// src/jsx/context.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { JSXFragmentNode } from \"./base.js\";\nimport { DOM_RENDERER } from \"./constants.js\";\nimport { createContextProviderFunction } from \"./dom/context.js\";\nvar globalContexts = [];\nvar createContext = (defaultValue) => {\n  const values = [defaultValue];\n  const context = (props) => {\n    values.push(props.value);\n    let string;\n    try {\n      string = props.children ? (Array.isArray(props.children) ? new JSXFragmentNode(\"\", {}, props.children) : props.children).toString() : \"\";\n    } finally {\n      values.pop();\n    }\n    if (string instanceof Promise) {\n      return string.then((resString) => raw(resString, resString.callbacks));\n    } else {\n      return raw(string);\n    }\n  };\n  context.values = values;\n  context.Provider = context;\n  context[DOM_RENDERER] = createContextProviderFunction(values);\n  globalContexts.push(context);\n  return context;\n};\nvar useContext = (context) => {\n  return context.values.at(-1);\n};\nexport {\n  createContext,\n  globalContexts,\n  useContext\n};\n", "// src/jsx/intrinsic-element/common.ts\nvar deDupeKeyMap = {\n  title: [],\n  script: [\"src\"],\n  style: [\"data-href\"],\n  link: [\"href\"],\n  meta: [\"name\", \"httpEquiv\", \"charset\", \"itemProp\"]\n};\nvar domRenderers = {};\nvar dataPrecedenceAttr = \"data-precedence\";\nexport {\n  dataPrecedenceAttr,\n  deDupeKeyMap,\n  domRenderers\n};\n", "// src/jsx/intrinsic-element/components.ts\nimport { raw } from \"../../helper/html/index.js\";\nimport { JSXNode, getNameSpaceContext } from \"../base.js\";\nimport { toArray } from \"../children.js\";\nimport { PERMALINK } from \"../constants.js\";\nimport { useContext } from \"../context.js\";\nimport { dataPrecedenceAttr, deDupeKeyMap } from \"./common.js\";\nvar metaTagMap = /* @__PURE__ */ new WeakMap();\nvar insertIntoHead = (tagName, tag, props, precedence) => ({ buffer, context }) => {\n  if (!buffer) {\n    return;\n  }\n  const map = metaTagMap.get(context) || {};\n  metaTagMap.set(context, map);\n  const tags = map[tagName] ||= [];\n  let duped = false;\n  const deDupeKeys = deDupeKeyMap[tagName];\n  if (deDupeKeys.length > 0) {\n    LOOP:\n      for (const [, tagProps] of tags) {\n        for (const key of deDupeKeys) {\n          if ((tagProps?.[key] ?? null) === props?.[key]) {\n            duped = true;\n            break LOOP;\n          }\n        }\n      }\n  }\n  if (duped) {\n    buffer[0] = buffer[0].replaceAll(tag, \"\");\n  } else if (deDupeKeys.length > 0) {\n    tags.push([tag, props, precedence]);\n  } else {\n    tags.unshift([tag, props, precedence]);\n  }\n  if (buffer[0].indexOf(\"</head>\") !== -1) {\n    let insertTags;\n    if (precedence === void 0) {\n      insertTags = tags.map(([tag2]) => tag2);\n    } else {\n      const precedences = [];\n      insertTags = tags.map(([tag2, , precedence2]) => {\n        let order = precedences.indexOf(precedence2);\n        if (order === -1) {\n          precedences.push(precedence2);\n          order = precedences.length - 1;\n        }\n        return [tag2, order];\n      }).sort((a, b) => a[1] - b[1]).map(([tag2]) => tag2);\n    }\n    insertTags.forEach((tag2) => {\n      buffer[0] = buffer[0].replaceAll(tag2, \"\");\n    });\n    buffer[0] = buffer[0].replace(/(?=<\\/head>)/, insertTags.join(\"\"));\n  }\n};\nvar returnWithoutSpecialBehavior = (tag, children, props) => raw(new JSXNode(tag, props, toArray(children ?? [])).toString());\nvar documentMetadataTag = (tag, children, props, sort) => {\n  if (\"itemProp\" in props) {\n    return returnWithoutSpecialBehavior(tag, children, props);\n  }\n  let { precedence, blocking, ...restProps } = props;\n  precedence = sort ? precedence ?? \"\" : void 0;\n  if (sort) {\n    restProps[dataPrecedenceAttr] = precedence;\n  }\n  const string = new JSXNode(tag, restProps, toArray(children || [])).toString();\n  if (string instanceof Promise) {\n    return string.then(\n      (resString) => raw(string, [\n        ...resString.callbacks || [],\n        insertIntoHead(tag, resString, restProps, precedence)\n      ])\n    );\n  } else {\n    return raw(string, [insertIntoHead(tag, string, restProps, precedence)]);\n  }\n};\nvar title = ({ children, ...props }) => {\n  const nameSpaceContext = getNameSpaceContext();\n  if (nameSpaceContext) {\n    const context = useContext(nameSpaceContext);\n    if (context === \"svg\" || context === \"head\") {\n      return new JSXNode(\n        \"title\",\n        props,\n        toArray(children ?? [])\n      );\n    }\n  }\n  return documentMetadataTag(\"title\", children, props, false);\n};\nvar script = ({\n  children,\n  ...props\n}) => {\n  const nameSpaceContext = getNameSpaceContext();\n  if ([\"src\", \"async\"].some((k) => !props[k]) || nameSpaceContext && useContext(nameSpaceContext) === \"head\") {\n    return returnWithoutSpecialBehavior(\"script\", children, props);\n  }\n  return documentMetadataTag(\"script\", children, props, false);\n};\nvar style = ({\n  children,\n  ...props\n}) => {\n  if (![\"href\", \"precedence\"].every((k) => k in props)) {\n    return returnWithoutSpecialBehavior(\"style\", children, props);\n  }\n  props[\"data-href\"] = props.href;\n  delete props.href;\n  return documentMetadataTag(\"style\", children, props, true);\n};\nvar link = ({ children, ...props }) => {\n  if ([\"onLoad\", \"onError\"].some((k) => k in props) || props.rel === \"stylesheet\" && (!(\"precedence\" in props) || \"disabled\" in props)) {\n    return returnWithoutSpecialBehavior(\"link\", children, props);\n  }\n  return documentMetadataTag(\"link\", children, props, \"precedence\" in props);\n};\nvar meta = ({ children, ...props }) => {\n  const nameSpaceContext = getNameSpaceContext();\n  if (nameSpaceContext && useContext(nameSpaceContext) === \"head\") {\n    return returnWithoutSpecialBehavior(\"meta\", children, props);\n  }\n  return documentMetadataTag(\"meta\", children, props, false);\n};\nvar newJSXNode = (tag, { children, ...props }) => new JSXNode(tag, props, toArray(children ?? []));\nvar form = (props) => {\n  if (typeof props.action === \"function\") {\n    props.action = PERMALINK in props.action ? props.action[PERMALINK] : void 0;\n  }\n  return newJSXNode(\"form\", props);\n};\nvar formActionableElement = (tag, props) => {\n  if (typeof props.formAction === \"function\") {\n    props.formAction = PERMALINK in props.formAction ? props.formAction[PERMALINK] : void 0;\n  }\n  return newJSXNode(tag, props);\n};\nvar input = (props) => formActionableElement(\"input\", props);\nvar button = (props) => formActionableElement(\"button\", props);\nexport {\n  button,\n  form,\n  input,\n  link,\n  meta,\n  script,\n  style,\n  title\n};\n", "// src/jsx/children.ts\nvar toArray = (children) => Array.isArray(children) ? children : [children];\nvar Children = {\n  map: (children, fn) => toArray(children).map(fn),\n  forEach: (children, fn) => {\n    toArray(children).forEach(fn);\n  },\n  count: (children) => toArray(children).length,\n  only: (_children) => {\n    const children = toArray(_children);\n    if (children.length !== 1) {\n      throw new Error(\"Children.only() expects only one child\");\n    }\n    return children[0];\n  },\n  toArray\n};\nexport {\n  Children,\n  toArray\n};\n", "// src/jsx/utils.ts\nvar normalizeElementKeyMap = /* @__PURE__ */ new Map([\n  [\"className\", \"class\"],\n  [\"htmlFor\", \"for\"],\n  [\"crossOrigin\", \"crossorigin\"],\n  [\"httpEquiv\", \"http-equiv\"],\n  [\"itemProp\", \"itemprop\"],\n  [\"fetchPriority\", \"fetchpriority\"],\n  [\"noModule\", \"nomodule\"],\n  [\"formAction\", \"formaction\"]\n]);\nvar normalizeIntrinsicElementKey = (key) => normalizeElementKeyMap.get(key) || key;\nvar styleObjectForEach = (style, fn) => {\n  for (const [k, v] of Object.entries(style)) {\n    const key = k[0] === \"-\" || !/[A-Z]/.test(k) ? k : k.replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`);\n    fn(\n      key,\n      v == null ? null : typeof v === \"number\" ? !key.match(\n        /^(?:a|border-im|column(?:-c|s)|flex(?:$|-[^b])|grid-(?:ar|[^a])|font-w|li|or|sca|st|ta|wido|z)|ty$/\n      ) ? `${v}px` : `${v}` : v\n    );\n  }\n};\nexport {\n  normalizeIntrinsicElementKey,\n  styleObjectForEach\n};\n", "// src/jsx/base.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { escapeToBuffer, resolveCallbackSync, stringBufferToString } from \"../utils/html.js\";\nimport { DOM_RENDERER, DOM_MEMO } from \"./constants.js\";\nimport { createContext, globalContexts, useContext } from \"./context.js\";\nimport { domRenderers } from \"./intrinsic-element/common.js\";\nimport * as intrinsicElementTags from \"./intrinsic-element/components.js\";\nimport { normalizeIntrinsicElementKey, styleObjectForEach } from \"./utils.js\";\nvar nameSpaceContext = void 0;\nvar getNameSpaceContext = () => nameSpaceContext;\nvar toSVGAttributeName = (key) => /[A-Z]/.test(key) && key.match(\n  /^(?:al|basel|clip(?:Path|Rule)$|co|do|fill|fl|fo|gl|let|lig|i|marker[EMS]|o|pai|pointe|sh|st[or]|text[^L]|tr|u|ve|w)/\n) ? key.replace(/([A-Z])/g, \"-$1\").toLowerCase() : key;\nvar emptyTags = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar booleanAttributes = [\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"defer\",\n  \"disabled\",\n  \"download\",\n  \"formnovalidate\",\n  \"hidden\",\n  \"inert\",\n  \"ismap\",\n  \"itemscope\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"selected\"\n];\nvar childrenToStringToBuffer = (children, buffer) => {\n  for (let i = 0, len = children.length; i < len; i++) {\n    const child = children[i];\n    if (typeof child === \"string\") {\n      escapeToBuffer(child, buffer);\n    } else if (typeof child === \"boolean\" || child === null || child === void 0) {\n      continue;\n    } else if (child instanceof JSXNode) {\n      child.toStringToBuffer(buffer);\n    } else if (typeof child === \"number\" || child.isEscaped) {\n      ;\n      buffer[0] += child;\n    } else if (child instanceof Promise) {\n      buffer.unshift(\"\", child);\n    } else {\n      childrenToStringToBuffer(child, buffer);\n    }\n  }\n};\nvar JSXNode = class {\n  tag;\n  props;\n  key;\n  children;\n  isEscaped = true;\n  localContexts;\n  constructor(tag, props, children) {\n    this.tag = tag;\n    this.props = props;\n    this.children = children;\n  }\n  get type() {\n    return this.tag;\n  }\n  get ref() {\n    return this.props.ref || null;\n  }\n  toString() {\n    const buffer = [\"\"];\n    this.localContexts?.forEach(([context, value]) => {\n      context.values.push(value);\n    });\n    try {\n      this.toStringToBuffer(buffer);\n    } finally {\n      this.localContexts?.forEach(([context]) => {\n        context.values.pop();\n      });\n    }\n    return buffer.length === 1 ? \"callbacks\" in buffer ? resolveCallbackSync(raw(buffer[0], buffer.callbacks)).toString() : buffer[0] : stringBufferToString(buffer, buffer.callbacks);\n  }\n  toStringToBuffer(buffer) {\n    const tag = this.tag;\n    const props = this.props;\n    let { children } = this;\n    buffer[0] += `<${tag}`;\n    const normalizeKey = nameSpaceContext && useContext(nameSpaceContext) === \"svg\" ? (key) => toSVGAttributeName(normalizeIntrinsicElementKey(key)) : (key) => normalizeIntrinsicElementKey(key);\n    for (let [key, v] of Object.entries(props)) {\n      key = normalizeKey(key);\n      if (key === \"children\") {\n      } else if (key === \"style\" && typeof v === \"object\") {\n        let styleStr = \"\";\n        styleObjectForEach(v, (property, value) => {\n          if (value != null) {\n            styleStr += `${styleStr ? \";\" : \"\"}${property}:${value}`;\n          }\n        });\n        buffer[0] += ' style=\"';\n        escapeToBuffer(styleStr, buffer);\n        buffer[0] += '\"';\n      } else if (typeof v === \"string\") {\n        buffer[0] += ` ${key}=\"`;\n        escapeToBuffer(v, buffer);\n        buffer[0] += '\"';\n      } else if (v === null || v === void 0) {\n      } else if (typeof v === \"number\" || v.isEscaped) {\n        buffer[0] += ` ${key}=\"${v}\"`;\n      } else if (typeof v === \"boolean\" && booleanAttributes.includes(key)) {\n        if (v) {\n          buffer[0] += ` ${key}=\"\"`;\n        }\n      } else if (key === \"dangerouslySetInnerHTML\") {\n        if (children.length > 0) {\n          throw new Error(\"Can only set one of `children` or `props.dangerouslySetInnerHTML`.\");\n        }\n        children = [raw(v.__html)];\n      } else if (v instanceof Promise) {\n        buffer[0] += ` ${key}=\"`;\n        buffer.unshift('\"', v);\n      } else if (typeof v === \"function\") {\n        if (!key.startsWith(\"on\") && key !== \"ref\") {\n          throw new Error(`Invalid prop '${key}' of type 'function' supplied to '${tag}'.`);\n        }\n      } else {\n        buffer[0] += ` ${key}=\"`;\n        escapeToBuffer(v.toString(), buffer);\n        buffer[0] += '\"';\n      }\n    }\n    if (emptyTags.includes(tag) && children.length === 0) {\n      buffer[0] += \"/>\";\n      return;\n    }\n    buffer[0] += \">\";\n    childrenToStringToBuffer(children, buffer);\n    buffer[0] += `</${tag}>`;\n  }\n};\nvar JSXFunctionNode = class extends JSXNode {\n  toStringToBuffer(buffer) {\n    const { children } = this;\n    const res = this.tag.call(null, {\n      ...this.props,\n      children: children.length <= 1 ? children[0] : children\n    });\n    if (typeof res === \"boolean\" || res == null) {\n      return;\n    } else if (res instanceof Promise) {\n      if (globalContexts.length === 0) {\n        buffer.unshift(\"\", res);\n      } else {\n        const currentContexts = globalContexts.map((c) => [c, c.values.at(-1)]);\n        buffer.unshift(\n          \"\",\n          res.then((childRes) => {\n            if (childRes instanceof JSXNode) {\n              childRes.localContexts = currentContexts;\n            }\n            return childRes;\n          })\n        );\n      }\n    } else if (res instanceof JSXNode) {\n      res.toStringToBuffer(buffer);\n    } else if (typeof res === \"number\" || res.isEscaped) {\n      buffer[0] += res;\n      if (res.callbacks) {\n        buffer.callbacks ||= [];\n        buffer.callbacks.push(...res.callbacks);\n      }\n    } else {\n      escapeToBuffer(res, buffer);\n    }\n  }\n};\nvar JSXFragmentNode = class extends JSXNode {\n  toStringToBuffer(buffer) {\n    childrenToStringToBuffer(this.children, buffer);\n  }\n};\nvar jsx = (tag, props, ...children) => {\n  props ??= {};\n  if (children.length) {\n    props.children = children.length === 1 ? children[0] : children;\n  }\n  const key = props.key;\n  delete props[\"key\"];\n  const node = jsxFn(tag, props, children);\n  node.key = key;\n  return node;\n};\nvar initDomRenderer = false;\nvar jsxFn = (tag, props, children) => {\n  if (!initDomRenderer) {\n    for (const k in domRenderers) {\n      ;\n      intrinsicElementTags[k][DOM_RENDERER] = domRenderers[k];\n    }\n    initDomRenderer = true;\n  }\n  if (typeof tag === \"function\") {\n    return new JSXFunctionNode(tag, props, children);\n  } else if (intrinsicElementTags[tag]) {\n    return new JSXFunctionNode(\n      intrinsicElementTags[tag],\n      props,\n      children\n    );\n  } else if (tag === \"svg\" || tag === \"head\") {\n    nameSpaceContext ||= createContext(\"\");\n    return new JSXNode(tag, props, [\n      new JSXFunctionNode(\n        nameSpaceContext,\n        {\n          value: tag\n        },\n        children\n      )\n    ]);\n  } else {\n    return new JSXNode(tag, props, children);\n  }\n};\nvar shallowEqual = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  const aKeys = Object.keys(a).sort();\n  const bKeys = Object.keys(b).sort();\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n  for (let i = 0, len = aKeys.length; i < len; i++) {\n    if (aKeys[i] === \"children\" && bKeys[i] === \"children\" && !a.children?.length && !b.children?.length) {\n      continue;\n    } else if (a[aKeys[i]] !== b[aKeys[i]]) {\n      return false;\n    }\n  }\n  return true;\n};\nvar memo = (component, propsAreEqual = shallowEqual) => {\n  let computed = null;\n  let prevProps = void 0;\n  const wrapper = (props) => {\n    if (prevProps && !propsAreEqual(prevProps, props)) {\n      computed = null;\n    }\n    prevProps = props;\n    return computed ||= component(props);\n  };\n  wrapper[DOM_MEMO] = propsAreEqual;\n  wrapper[DOM_RENDERER] = component;\n  return wrapper;\n};\nvar Fragment = ({\n  children\n}) => {\n  return new JSXFragmentNode(\n    \"\",\n    {\n      children\n    },\n    Array.isArray(children) ? children : children ? [children] : []\n  );\n};\nvar isValidElement = (element) => {\n  return !!(element && typeof element === \"object\" && \"tag\" in element && \"props\" in element);\n};\nvar cloneElement = (element, props, ...children) => {\n  let childrenToClone;\n  if (children.length > 0) {\n    childrenToClone = children;\n  } else {\n    const c = element.props.children;\n    childrenToClone = Array.isArray(c) ? c : [c];\n  }\n  return jsx(\n    element.tag,\n    { ...element.props, ...props },\n    ...childrenToClone\n  );\n};\nvar reactAPICompatVersion = \"19.0.0-hono-jsx\";\nexport {\n  Fragment,\n  JSXFragmentNode,\n  JSXNode,\n  booleanAttributes,\n  cloneElement,\n  getNameSpaceContext,\n  isValidElement,\n  jsx,\n  jsxFn,\n  memo,\n  reactAPICompatVersion,\n  shallowEqual\n};\n", "// src/jsx/jsx-dev-runtime.ts\nimport { jsxFn } from \"./base.js\";\nimport { Fragment } from \"./base.js\";\nfunction jsxDEV(tag, props, key) {\n  let node;\n  if (!props || !(\"children\" in props)) {\n    node = jsxFn(tag, props, []);\n  } else {\n    const children = props.children;\n    node = Array.isArray(children) ? jsxFn(tag, props, children) : jsxFn(tag, props, [children]);\n  }\n  node.key = key;\n  return node;\n}\nexport {\n  Fragment,\n  jsxDEV\n};\n", "import { Context } from 'hono';\nimport { map, filter, delay, merge } from 'rxjs';\nimport { MarbleSVG } from './utils';\nimport { SVGTheme } from 'svg-marbles';\nimport { testWithCapture } from 'svg-marbles';\n\nconst darkTheme: Partial<SVGTheme> = {\n  backgroundColor: 'transparent',\n  lineColor: '#fff',\n  valueColor: '#ff5722',\n  textColor: '#fff',\n  circleStrokeColor: '#fff',\n  circleStrokeWidth: 3,\n  circleRadius: 18,\n  padding: 8\n};\n\nexport const onRequestGet = (c: Context) => {\n  // Simple input stream\n  const inputStream = 'a--b--c--d--|';\n\n  // Map operation: multiply each value by 2\n  const mappedStream = testWithCapture(({ cold }) => cold(inputStream, { a: 1, b: 2, c: 3, d: 4 }).pipe(map((x) => x * 2)));\n\n  // Filter operation: only even numbers\n  const filteredStream = testWithCapture(({ cold }) => cold(inputStream, { a: 1, b: 2, c: 3, d: 4 }).pipe(filter((x) => x % 2 === 0)));\n\n  // Delay operation: add 2 frame delay\n  const delayedStream = testWithCapture(({ cold }) => cold(inputStream, { a: 1, b: 2, c: 3, d: 4 }).pipe(delay(2)));\n\n  // Merge operation: combine two streams\n  const stream1 = 'a--b--|';\n  const stream2 = '--c--d--|';\n\n  const mergedStream = testWithCapture(({ cold }) => merge(cold(stream1, { a: 1, b: 2 }), cold(stream2, { c: 3, d: 4 })));\n\n  // Error handling example\n  const errorStream = testWithCapture(({ cold }) => cold('a--#', { a: 1 }, new Error('Something went wrong')));\n\n  return c.render(\n    <div class=\"flex justify-center items-center pt-4\">\n      <div class=\"flex flex-col gap-4\">\n        <div class=\"px-6 py-4 bg-gray-800 rounded-lg\">\n          <h1 class=\"text-white font-bold text-3xl mb-4\">RxJS Marble Diagrams</h1>\n          <p class=\"text-gray-300 mb-4\">Simple examples of RxJS operations visualized with marble diagrams.</p>\n\n          <div class=\"grid grid-cols-1 gap-4\">\n            <div class=\"flex flex-col\">\n              <h2 class=\"text-white font-bold text-xl mb-2\">Input Stream</h2>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Original: [1, 2, 3, 4]</span>\n                <MarbleSVG diagram={inputStream} theme={darkTheme} color=\"#00bcd4\" />\n              </div>\n            </div>\n\n            <div class=\"flex flex-col gap-2\">\n              <h2 class=\"text-white font-bold text-xl mb-2\">Transformations</h2>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Map (\u00D72): [2, 4, 6, 8]</span>\n                <MarbleSVG diagram={mappedStream.marble} theme={darkTheme} color=\"#66bb6a\" />\n              </div>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Filter (even only): [2, 4]</span>\n                <MarbleSVG diagram={filteredStream.marble} theme={darkTheme} color=\"#9c27b0\" />\n              </div>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Delay (2 frames)</span>\n                <MarbleSVG diagram={delayedStream.marble} theme={darkTheme} color=\"#ff9800\" />\n              </div>\n            </div>\n\n            <div class=\"flex flex-col gap-2\">\n              <h2 class=\"text-white font-bold text-xl mb-2\">Combination</h2>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Stream 1: [1, 2]</span>\n                <MarbleSVG diagram={stream1} theme={darkTheme} color=\"#e91e63\" />\n              </div>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Stream 2: [3, 4]</span>\n                <MarbleSVG diagram={stream2} theme={darkTheme} color=\"#3f51b5\" />\n              </div>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Merged: [1, 3, 2, 4]</span>\n                <MarbleSVG diagram={mergedStream.marble} theme={darkTheme} color=\"#00bcd4\" />\n              </div>\n            </div>\n\n            <div class=\"flex flex-col gap-2\">\n              <h2 class=\"text-white font-bold text-xl mb-2\">Error Handling</h2>\n              <div class=\"flex flex-col\">\n                <span class=\"text-white\">Error Stream</span>\n                <MarbleSVG diagram={errorStream.marble} theme={darkTheme} color=\"#f44336\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n", "// src/jsx/dom/intrinsic-element/components.ts\nimport { useContext } from \"../../context.js\";\nimport { use, useCallback, useMemo, useState } from \"../../hooks/index.js\";\nimport { dataPrecedenceAttr, deDupeKeyMap, domRenderers } from \"../../intrinsic-element/common.js\";\nimport { FormContext, registerAction } from \"../hooks/index.js\";\nimport { createPortal, getNameSpaceContext } from \"../render.js\";\nvar clearCache = () => {\n  blockingPromiseMap = /* @__PURE__ */ Object.create(null);\n  createdElements = /* @__PURE__ */ Object.create(null);\n};\nvar composeRef = (ref, cb) => {\n  return useMemo(\n    () => (e) => {\n      let refCleanup;\n      if (ref) {\n        if (typeof ref === \"function\") {\n          refCleanup = ref(e) || (() => {\n            ref(null);\n          });\n        } else if (ref && \"current\" in ref) {\n          ref.current = e;\n          refCleanup = () => {\n            ref.current = null;\n          };\n        }\n      }\n      const cbCleanup = cb(e);\n      return () => {\n        cbCleanup?.();\n        refCleanup?.();\n      };\n    },\n    [ref]\n  );\n};\nvar blockingPromiseMap = /* @__PURE__ */ Object.create(null);\nvar createdElements = /* @__PURE__ */ Object.create(null);\nvar documentMetadataTag = (tag, props, preserveNodeType, supportSort, supportBlocking) => {\n  if (props?.itemProp) {\n    return {\n      tag,\n      props,\n      type: tag,\n      ref: props.ref\n    };\n  }\n  const head = document.head;\n  let { onLoad, onError, precedence, blocking, ...restProps } = props;\n  let element = null;\n  let created = false;\n  const deDupeKeys = deDupeKeyMap[tag];\n  let existingElements = void 0;\n  if (deDupeKeys.length > 0) {\n    const tags = head.querySelectorAll(tag);\n    LOOP:\n      for (const e of tags) {\n        for (const key of deDupeKeyMap[tag]) {\n          if (e.getAttribute(key) === props[key]) {\n            element = e;\n            break LOOP;\n          }\n        }\n      }\n    if (!element) {\n      const cacheKey = deDupeKeys.reduce(\n        (acc, key) => props[key] === void 0 ? acc : `${acc}-${key}-${props[key]}`,\n        tag\n      );\n      created = !createdElements[cacheKey];\n      element = createdElements[cacheKey] ||= (() => {\n        const e = document.createElement(tag);\n        for (const key of deDupeKeys) {\n          if (props[key] !== void 0) {\n            e.setAttribute(key, props[key]);\n          }\n          if (props.rel) {\n            e.setAttribute(\"rel\", props.rel);\n          }\n        }\n        return e;\n      })();\n    }\n  } else {\n    existingElements = head.querySelectorAll(tag);\n  }\n  precedence = supportSort ? precedence ?? \"\" : void 0;\n  if (supportSort) {\n    restProps[dataPrecedenceAttr] = precedence;\n  }\n  const insert = useCallback(\n    (e) => {\n      if (deDupeKeys.length > 0) {\n        let found = false;\n        for (const existingElement of head.querySelectorAll(tag)) {\n          if (found && existingElement.getAttribute(dataPrecedenceAttr) !== precedence) {\n            head.insertBefore(e, existingElement);\n            return;\n          }\n          if (existingElement.getAttribute(dataPrecedenceAttr) === precedence) {\n            found = true;\n          }\n        }\n        head.appendChild(e);\n      } else if (existingElements) {\n        let found = false;\n        for (const existingElement of existingElements) {\n          if (existingElement === e) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          head.insertBefore(\n            e,\n            head.contains(existingElements[0]) ? existingElements[0] : head.querySelector(tag)\n          );\n        }\n        existingElements = void 0;\n      }\n    },\n    [precedence]\n  );\n  const ref = composeRef(props.ref, (e) => {\n    const key = deDupeKeys[0];\n    if (preserveNodeType === 2) {\n      e.innerHTML = \"\";\n    }\n    if (created || existingElements) {\n      insert(e);\n    }\n    if (!onError && !onLoad) {\n      return;\n    }\n    let promise = blockingPromiseMap[e.getAttribute(key)] ||= new Promise(\n      (resolve, reject) => {\n        e.addEventListener(\"load\", resolve);\n        e.addEventListener(\"error\", reject);\n      }\n    );\n    if (onLoad) {\n      promise = promise.then(onLoad);\n    }\n    if (onError) {\n      promise = promise.catch(onError);\n    }\n    promise.catch(() => {\n    });\n  });\n  if (supportBlocking && blocking === \"render\") {\n    const key = deDupeKeyMap[tag][0];\n    if (props[key]) {\n      const value = props[key];\n      const promise = blockingPromiseMap[value] ||= new Promise((resolve, reject) => {\n        insert(element);\n        element.addEventListener(\"load\", resolve);\n        element.addEventListener(\"error\", reject);\n      });\n      use(promise);\n    }\n  }\n  const jsxNode = {\n    tag,\n    type: tag,\n    props: {\n      ...restProps,\n      ref\n    },\n    ref\n  };\n  jsxNode.p = preserveNodeType;\n  if (element) {\n    jsxNode.e = element;\n  }\n  return createPortal(\n    jsxNode,\n    head\n  );\n};\nvar title = (props) => {\n  const nameSpaceContext = getNameSpaceContext();\n  const ns = nameSpaceContext && useContext(nameSpaceContext);\n  if (ns?.endsWith(\"svg\")) {\n    return {\n      tag: \"title\",\n      props,\n      type: \"title\",\n      ref: props.ref\n    };\n  }\n  return documentMetadataTag(\"title\", props, void 0, false, false);\n};\nvar script = (props) => {\n  if (!props || [\"src\", \"async\"].some((k) => !props[k])) {\n    return {\n      tag: \"script\",\n      props,\n      type: \"script\",\n      ref: props.ref\n    };\n  }\n  return documentMetadataTag(\"script\", props, 1, false, true);\n};\nvar style = (props) => {\n  if (!props || ![\"href\", \"precedence\"].every((k) => k in props)) {\n    return {\n      tag: \"style\",\n      props,\n      type: \"style\",\n      ref: props.ref\n    };\n  }\n  props[\"data-href\"] = props.href;\n  delete props.href;\n  return documentMetadataTag(\"style\", props, 2, true, true);\n};\nvar link = (props) => {\n  if (!props || [\"onLoad\", \"onError\"].some((k) => k in props) || props.rel === \"stylesheet\" && (!(\"precedence\" in props) || \"disabled\" in props)) {\n    return {\n      tag: \"link\",\n      props,\n      type: \"link\",\n      ref: props.ref\n    };\n  }\n  return documentMetadataTag(\"link\", props, 1, \"precedence\" in props, true);\n};\nvar meta = (props) => {\n  return documentMetadataTag(\"meta\", props, void 0, false, false);\n};\nvar customEventFormAction = Symbol();\nvar form = (props) => {\n  const { action, ...restProps } = props;\n  if (typeof action !== \"function\") {\n    ;\n    restProps.action = action;\n  }\n  const [state, setState] = useState([null, false]);\n  const onSubmit = useCallback(\n    async (ev) => {\n      const currentAction = ev.isTrusted ? action : ev.detail[customEventFormAction];\n      if (typeof currentAction !== \"function\") {\n        return;\n      }\n      ev.preventDefault();\n      const formData = new FormData(ev.target);\n      setState([formData, true]);\n      const actionRes = currentAction(formData);\n      if (actionRes instanceof Promise) {\n        registerAction(actionRes);\n        await actionRes;\n      }\n      setState([null, true]);\n    },\n    []\n  );\n  const ref = composeRef(props.ref, (el) => {\n    el.addEventListener(\"submit\", onSubmit);\n    return () => {\n      el.removeEventListener(\"submit\", onSubmit);\n    };\n  });\n  const [data, isDirty] = state;\n  state[1] = false;\n  return {\n    tag: FormContext,\n    props: {\n      value: {\n        pending: data !== null,\n        data,\n        method: data ? \"post\" : null,\n        action: data ? action : null\n      },\n      children: {\n        tag: \"form\",\n        props: {\n          ...restProps,\n          ref\n        },\n        type: \"form\",\n        ref\n      }\n    },\n    f: isDirty\n  };\n};\nvar formActionableElement = (tag, {\n  formAction,\n  ...props\n}) => {\n  if (typeof formAction === \"function\") {\n    const onClick = useCallback((ev) => {\n      ev.preventDefault();\n      ev.currentTarget.form.dispatchEvent(\n        new CustomEvent(\"submit\", { detail: { [customEventFormAction]: formAction } })\n      );\n    }, []);\n    props.ref = composeRef(props.ref, (el) => {\n      el.addEventListener(\"click\", onClick);\n      return () => {\n        el.removeEventListener(\"click\", onClick);\n      };\n    });\n  }\n  return {\n    tag,\n    props,\n    type: tag,\n    ref: props.ref\n  };\n};\nvar input = (props) => formActionableElement(\"input\", props);\nvar button = (props) => formActionableElement(\"button\", props);\nObject.assign(domRenderers, {\n  title,\n  script,\n  style,\n  link,\n  meta,\n  form,\n  input,\n  button\n});\nexport {\n  button,\n  clearCache,\n  composeRef,\n  form,\n  input,\n  link,\n  meta,\n  script,\n  style,\n  title\n};\n", "// src/jsx/dom/render.ts\nimport { toArray } from \"../children.js\";\nimport {\n  DOM_ERROR_HANDLER,\n  DOM_INTERNAL_TAG,\n  DOM_MEMO,\n  DOM_RENDERER,\n  DOM_STASH\n} from \"../constants.js\";\nimport { globalContexts as globalJSXContexts, useContext } from \"../context.js\";\nimport { STASH_EFFECT } from \"../hooks/index.js\";\nimport { normalizeIntrinsicElementKey, styleObjectForEach } from \"../utils.js\";\nimport { createContext } from \"./context.js\";\nvar HONO_PORTAL_ELEMENT = \"_hp\";\nvar eventAliasMap = {\n  Change: \"Input\",\n  DoubleClick: \"DblClick\"\n};\nvar nameSpaceMap = {\n  svg: \"2000/svg\",\n  math: \"1998/Math/MathML\"\n};\nvar buildDataStack = [];\nvar refCleanupMap = /* @__PURE__ */ new WeakMap();\nvar nameSpaceContext = void 0;\nvar getNameSpaceContext = () => nameSpaceContext;\nvar isNodeString = (node) => \"t\" in node;\nvar eventCache = {\n  onClick: [\"click\", false]\n};\nvar getEventSpec = (key) => {\n  if (!key.startsWith(\"on\")) {\n    return void 0;\n  }\n  if (eventCache[key]) {\n    return eventCache[key];\n  }\n  const match = key.match(/^on([A-Z][a-zA-Z]+?(?:PointerCapture)?)(Capture)?$/);\n  if (match) {\n    const [, eventName, capture] = match;\n    return eventCache[key] = [(eventAliasMap[eventName] || eventName).toLowerCase(), !!capture];\n  }\n  return void 0;\n};\nvar toAttributeName = (element, key) => nameSpaceContext && element instanceof SVGElement && /[A-Z]/.test(key) && (key in element.style || key.match(/^(?:o|pai|str|u|ve)/)) ? key.replace(/([A-Z])/g, \"-$1\").toLowerCase() : key;\nvar applyProps = (container, attributes, oldAttributes) => {\n  attributes ||= {};\n  for (let key in attributes) {\n    const value = attributes[key];\n    if (key !== \"children\" && (!oldAttributes || oldAttributes[key] !== value)) {\n      key = normalizeIntrinsicElementKey(key);\n      const eventSpec = getEventSpec(key);\n      if (eventSpec) {\n        if (oldAttributes?.[key] !== value) {\n          if (oldAttributes) {\n            container.removeEventListener(eventSpec[0], oldAttributes[key], eventSpec[1]);\n          }\n          if (value != null) {\n            if (typeof value !== \"function\") {\n              throw new Error(`Event handler for \"${key}\" is not a function`);\n            }\n            container.addEventListener(eventSpec[0], value, eventSpec[1]);\n          }\n        }\n      } else if (key === \"dangerouslySetInnerHTML\" && value) {\n        container.innerHTML = value.__html;\n      } else if (key === \"ref\") {\n        let cleanup;\n        if (typeof value === \"function\") {\n          cleanup = value(container) || (() => value(null));\n        } else if (value && \"current\" in value) {\n          value.current = container;\n          cleanup = () => value.current = null;\n        }\n        refCleanupMap.set(container, cleanup);\n      } else if (key === \"style\") {\n        const style = container.style;\n        if (typeof value === \"string\") {\n          style.cssText = value;\n        } else {\n          style.cssText = \"\";\n          if (value != null) {\n            styleObjectForEach(value, style.setProperty.bind(style));\n          }\n        }\n      } else {\n        if (key === \"value\") {\n          const nodeName = container.nodeName;\n          if (nodeName === \"INPUT\" || nodeName === \"TEXTAREA\" || nodeName === \"SELECT\") {\n            ;\n            container.value = value === null || value === void 0 || value === false ? null : value;\n            if (nodeName === \"TEXTAREA\") {\n              container.textContent = value;\n              continue;\n            } else if (nodeName === \"SELECT\") {\n              if (container.selectedIndex === -1) {\n                ;\n                container.selectedIndex = 0;\n              }\n              continue;\n            }\n          }\n        } else if (key === \"checked\" && container.nodeName === \"INPUT\" || key === \"selected\" && container.nodeName === \"OPTION\") {\n          ;\n          container[key] = value;\n        }\n        const k = toAttributeName(container, key);\n        if (value === null || value === void 0 || value === false) {\n          container.removeAttribute(k);\n        } else if (value === true) {\n          container.setAttribute(k, \"\");\n        } else if (typeof value === \"string\" || typeof value === \"number\") {\n          container.setAttribute(k, value);\n        } else {\n          container.setAttribute(k, value.toString());\n        }\n      }\n    }\n  }\n  if (oldAttributes) {\n    for (let key in oldAttributes) {\n      const value = oldAttributes[key];\n      if (key !== \"children\" && !(key in attributes)) {\n        key = normalizeIntrinsicElementKey(key);\n        const eventSpec = getEventSpec(key);\n        if (eventSpec) {\n          container.removeEventListener(eventSpec[0], value, eventSpec[1]);\n        } else if (key === \"ref\") {\n          refCleanupMap.get(container)?.();\n        } else {\n          container.removeAttribute(toAttributeName(container, key));\n        }\n      }\n    }\n  }\n};\nvar invokeTag = (context, node) => {\n  node[DOM_STASH][0] = 0;\n  buildDataStack.push([context, node]);\n  const func = node.tag[DOM_RENDERER] || node.tag;\n  const props = func.defaultProps ? {\n    ...func.defaultProps,\n    ...node.props\n  } : node.props;\n  try {\n    return [func.call(null, props)];\n  } finally {\n    buildDataStack.pop();\n  }\n};\nvar getNextChildren = (node, container, nextChildren, childrenToRemove, callbacks) => {\n  if (node.vR?.length) {\n    childrenToRemove.push(...node.vR);\n    delete node.vR;\n  }\n  if (typeof node.tag === \"function\") {\n    node[DOM_STASH][1][STASH_EFFECT]?.forEach((data) => callbacks.push(data));\n  }\n  node.vC.forEach((child) => {\n    if (isNodeString(child)) {\n      nextChildren.push(child);\n    } else {\n      if (typeof child.tag === \"function\" || child.tag === \"\") {\n        child.c = container;\n        const currentNextChildrenIndex = nextChildren.length;\n        getNextChildren(child, container, nextChildren, childrenToRemove, callbacks);\n        if (child.s) {\n          for (let i = currentNextChildrenIndex; i < nextChildren.length; i++) {\n            nextChildren[i].s = true;\n          }\n          child.s = false;\n        }\n      } else {\n        nextChildren.push(child);\n        if (child.vR?.length) {\n          childrenToRemove.push(...child.vR);\n          delete child.vR;\n        }\n      }\n    }\n  });\n};\nvar findInsertBefore = (node) => {\n  for (; ; node = node.tag === HONO_PORTAL_ELEMENT || !node.vC || !node.pP ? node.nN : node.vC[0]) {\n    if (!node) {\n      return null;\n    }\n    if (node.tag !== HONO_PORTAL_ELEMENT && node.e) {\n      return node.e;\n    }\n  }\n};\nvar removeNode = (node) => {\n  if (!isNodeString(node)) {\n    node[DOM_STASH]?.[1][STASH_EFFECT]?.forEach((data) => data[2]?.());\n    refCleanupMap.get(node.e)?.();\n    if (node.p === 2) {\n      node.vC?.forEach((n) => n.p = 2);\n    }\n    node.vC?.forEach(removeNode);\n  }\n  if (!node.p) {\n    node.e?.remove();\n    delete node.e;\n  }\n  if (typeof node.tag === \"function\") {\n    updateMap.delete(node);\n    fallbackUpdateFnArrayMap.delete(node);\n    delete node[DOM_STASH][3];\n    node.a = true;\n  }\n};\nvar apply = (node, container, isNew) => {\n  node.c = container;\n  applyNodeObject(node, container, isNew);\n};\nvar findChildNodeIndex = (childNodes, child) => {\n  if (!child) {\n    return;\n  }\n  for (let i = 0, len = childNodes.length; i < len; i++) {\n    if (childNodes[i] === child) {\n      return i;\n    }\n  }\n  return;\n};\nvar cancelBuild = Symbol();\nvar applyNodeObject = (node, container, isNew) => {\n  const next = [];\n  const remove = [];\n  const callbacks = [];\n  getNextChildren(node, container, next, remove, callbacks);\n  remove.forEach(removeNode);\n  const childNodes = isNew ? void 0 : container.childNodes;\n  let offset;\n  let insertBeforeNode = null;\n  if (isNew) {\n    offset = -1;\n  } else if (!childNodes.length) {\n    offset = 0;\n  } else {\n    const offsetByNextNode = findChildNodeIndex(childNodes, findInsertBefore(node.nN));\n    if (offsetByNextNode !== void 0) {\n      insertBeforeNode = childNodes[offsetByNextNode];\n      offset = offsetByNextNode;\n    } else {\n      offset = findChildNodeIndex(childNodes, next.find((n) => n.tag !== HONO_PORTAL_ELEMENT && n.e)?.e) ?? -1;\n    }\n    if (offset === -1) {\n      isNew = true;\n    }\n  }\n  for (let i = 0, len = next.length; i < len; i++, offset++) {\n    const child = next[i];\n    let el;\n    if (child.s && child.e) {\n      el = child.e;\n      child.s = false;\n    } else {\n      const isNewLocal = isNew || !child.e;\n      if (isNodeString(child)) {\n        if (child.e && child.d) {\n          child.e.textContent = child.t;\n        }\n        child.d = false;\n        el = child.e ||= document.createTextNode(child.t);\n      } else {\n        el = child.e ||= child.n ? document.createElementNS(child.n, child.tag) : document.createElement(child.tag);\n        applyProps(el, child.props, child.pP);\n        applyNodeObject(child, el, isNewLocal);\n      }\n    }\n    if (child.tag === HONO_PORTAL_ELEMENT) {\n      offset--;\n    } else if (isNew) {\n      if (!el.parentNode) {\n        container.appendChild(el);\n      }\n    } else if (childNodes[offset] !== el && childNodes[offset - 1] !== el) {\n      if (childNodes[offset + 1] === el) {\n        container.appendChild(childNodes[offset]);\n      } else {\n        container.insertBefore(el, insertBeforeNode || childNodes[offset] || null);\n      }\n    }\n  }\n  if (node.pP) {\n    delete node.pP;\n  }\n  if (callbacks.length) {\n    const useLayoutEffectCbs = [];\n    const useEffectCbs = [];\n    callbacks.forEach(([, useLayoutEffectCb, , useEffectCb, useInsertionEffectCb]) => {\n      if (useLayoutEffectCb) {\n        useLayoutEffectCbs.push(useLayoutEffectCb);\n      }\n      if (useEffectCb) {\n        useEffectCbs.push(useEffectCb);\n      }\n      useInsertionEffectCb?.();\n    });\n    useLayoutEffectCbs.forEach((cb) => cb());\n    if (useEffectCbs.length) {\n      requestAnimationFrame(() => {\n        useEffectCbs.forEach((cb) => cb());\n      });\n    }\n  }\n};\nvar isSameContext = (oldContexts, newContexts) => !!(oldContexts && oldContexts.length === newContexts.length && oldContexts.every((ctx, i) => ctx[1] === newContexts[i][1]));\nvar fallbackUpdateFnArrayMap = /* @__PURE__ */ new WeakMap();\nvar build = (context, node, children) => {\n  const buildWithPreviousChildren = !children && node.pC;\n  if (children) {\n    node.pC ||= node.vC;\n  }\n  let foundErrorHandler;\n  try {\n    children ||= typeof node.tag == \"function\" ? invokeTag(context, node) : toArray(node.props.children);\n    if (children[0]?.tag === \"\" && children[0][DOM_ERROR_HANDLER]) {\n      foundErrorHandler = children[0][DOM_ERROR_HANDLER];\n      context[5].push([context, foundErrorHandler, node]);\n    }\n    const oldVChildren = buildWithPreviousChildren ? [...node.pC] : node.vC ? [...node.vC] : void 0;\n    const vChildren = [];\n    let prevNode;\n    for (let i = 0; i < children.length; i++) {\n      if (Array.isArray(children[i])) {\n        children.splice(i, 1, ...children[i].flat());\n      }\n      let child = buildNode(children[i]);\n      if (child) {\n        if (typeof child.tag === \"function\" && !child.tag[DOM_INTERNAL_TAG]) {\n          if (globalJSXContexts.length > 0) {\n            child[DOM_STASH][2] = globalJSXContexts.map((c) => [c, c.values.at(-1)]);\n          }\n          if (context[5]?.length) {\n            child[DOM_STASH][3] = context[5].at(-1);\n          }\n        }\n        let oldChild;\n        if (oldVChildren && oldVChildren.length) {\n          const i2 = oldVChildren.findIndex(\n            isNodeString(child) ? (c) => isNodeString(c) : child.key !== void 0 ? (c) => c.key === child.key && c.tag === child.tag : (c) => c.tag === child.tag\n          );\n          if (i2 !== -1) {\n            oldChild = oldVChildren[i2];\n            oldVChildren.splice(i2, 1);\n          }\n        }\n        if (oldChild) {\n          if (isNodeString(child)) {\n            if (oldChild.t !== child.t) {\n              ;\n              oldChild.t = child.t;\n              oldChild.d = true;\n            }\n            child = oldChild;\n          } else {\n            const pP = oldChild.pP = oldChild.props;\n            oldChild.props = child.props;\n            oldChild.f ||= child.f || node.f;\n            if (typeof child.tag === \"function\") {\n              const oldContexts = oldChild[DOM_STASH][2];\n              oldChild[DOM_STASH][2] = child[DOM_STASH][2] || [];\n              oldChild[DOM_STASH][3] = child[DOM_STASH][3];\n              if (!oldChild.f && ((oldChild.o || oldChild) === child.o || oldChild.tag[DOM_MEMO]?.(pP, oldChild.props)) && isSameContext(oldContexts, oldChild[DOM_STASH][2])) {\n                oldChild.s = true;\n              }\n            }\n            child = oldChild;\n          }\n        } else if (!isNodeString(child) && nameSpaceContext) {\n          const ns = useContext(nameSpaceContext);\n          if (ns) {\n            child.n = ns;\n          }\n        }\n        if (!isNodeString(child) && !child.s) {\n          build(context, child);\n          delete child.f;\n        }\n        vChildren.push(child);\n        if (prevNode && !prevNode.s && !child.s) {\n          for (let p = prevNode; p && !isNodeString(p); p = p.vC?.at(-1)) {\n            p.nN = child;\n          }\n        }\n        prevNode = child;\n      }\n    }\n    node.vR = buildWithPreviousChildren ? [...node.vC, ...oldVChildren || []] : oldVChildren || [];\n    node.vC = vChildren;\n    if (buildWithPreviousChildren) {\n      delete node.pC;\n    }\n  } catch (e) {\n    node.f = true;\n    if (e === cancelBuild) {\n      if (foundErrorHandler) {\n        return;\n      } else {\n        throw e;\n      }\n    }\n    const [errorHandlerContext, errorHandler, errorHandlerNode] = node[DOM_STASH]?.[3] || [];\n    if (errorHandler) {\n      const fallbackUpdateFn = () => update([0, false, context[2]], errorHandlerNode);\n      const fallbackUpdateFnArray = fallbackUpdateFnArrayMap.get(errorHandlerNode) || [];\n      fallbackUpdateFnArray.push(fallbackUpdateFn);\n      fallbackUpdateFnArrayMap.set(errorHandlerNode, fallbackUpdateFnArray);\n      const fallback = errorHandler(e, () => {\n        const fnArray = fallbackUpdateFnArrayMap.get(errorHandlerNode);\n        if (fnArray) {\n          const i = fnArray.indexOf(fallbackUpdateFn);\n          if (i !== -1) {\n            fnArray.splice(i, 1);\n            return fallbackUpdateFn();\n          }\n        }\n      });\n      if (fallback) {\n        if (context[0] === 1) {\n          context[1] = true;\n        } else {\n          build(context, errorHandlerNode, [fallback]);\n          if ((errorHandler.length === 1 || context !== errorHandlerContext) && errorHandlerNode.c) {\n            apply(errorHandlerNode, errorHandlerNode.c, false);\n            return;\n          }\n        }\n        throw cancelBuild;\n      }\n    }\n    throw e;\n  } finally {\n    if (foundErrorHandler) {\n      context[5].pop();\n    }\n  }\n};\nvar buildNode = (node) => {\n  if (node === void 0 || node === null || typeof node === \"boolean\") {\n    return void 0;\n  } else if (typeof node === \"string\" || typeof node === \"number\") {\n    return { t: node.toString(), d: true };\n  } else {\n    if (\"vR\" in node) {\n      node = {\n        tag: node.tag,\n        props: node.props,\n        key: node.key,\n        f: node.f,\n        type: node.tag,\n        ref: node.props.ref,\n        o: node.o || node\n      };\n    }\n    if (typeof node.tag === \"function\") {\n      ;\n      node[DOM_STASH] = [0, []];\n    } else {\n      const ns = nameSpaceMap[node.tag];\n      if (ns) {\n        nameSpaceContext ||= createContext(\"\");\n        node.props.children = [\n          {\n            tag: nameSpaceContext,\n            props: {\n              value: node.n = `http://www.w3.org/${ns}`,\n              children: node.props.children\n            }\n          }\n        ];\n      }\n    }\n    return node;\n  }\n};\nvar replaceContainer = (node, from, to) => {\n  if (node.c === from) {\n    node.c = to;\n    node.vC.forEach((child) => replaceContainer(child, from, to));\n  }\n};\nvar updateSync = (context, node) => {\n  node[DOM_STASH][2]?.forEach(([c, v]) => {\n    c.values.push(v);\n  });\n  try {\n    build(context, node, void 0);\n  } catch {\n    return;\n  }\n  if (node.a) {\n    delete node.a;\n    return;\n  }\n  node[DOM_STASH][2]?.forEach(([c]) => {\n    c.values.pop();\n  });\n  if (context[0] !== 1 || !context[1]) {\n    apply(node, node.c, false);\n  }\n};\nvar updateMap = /* @__PURE__ */ new WeakMap();\nvar currentUpdateSets = [];\nvar update = async (context, node) => {\n  context[5] ||= [];\n  const existing = updateMap.get(node);\n  if (existing) {\n    existing[0](void 0);\n  }\n  let resolve;\n  const promise = new Promise((r) => resolve = r);\n  updateMap.set(node, [\n    resolve,\n    () => {\n      if (context[2]) {\n        context[2](context, node, (context2) => {\n          updateSync(context2, node);\n        }).then(() => resolve(node));\n      } else {\n        updateSync(context, node);\n        resolve(node);\n      }\n    }\n  ]);\n  if (currentUpdateSets.length) {\n    ;\n    currentUpdateSets.at(-1).add(node);\n  } else {\n    await Promise.resolve();\n    const latest = updateMap.get(node);\n    if (latest) {\n      updateMap.delete(node);\n      latest[1]();\n    }\n  }\n  return promise;\n};\nvar renderNode = (node, container) => {\n  const context = [];\n  context[5] = [];\n  context[4] = true;\n  build(context, node, void 0);\n  context[4] = false;\n  const fragment = document.createDocumentFragment();\n  apply(node, fragment, true);\n  replaceContainer(node, fragment, container);\n  container.replaceChildren(fragment);\n};\nvar render = (jsxNode, container) => {\n  renderNode(buildNode({ tag: \"\", props: { children: jsxNode } }), container);\n};\nvar flushSync = (callback) => {\n  const set = /* @__PURE__ */ new Set();\n  currentUpdateSets.push(set);\n  callback();\n  set.forEach((node) => {\n    const latest = updateMap.get(node);\n    if (latest) {\n      updateMap.delete(node);\n      latest[1]();\n    }\n  });\n  currentUpdateSets.pop();\n};\nvar createPortal = (children, container, key) => ({\n  tag: HONO_PORTAL_ELEMENT,\n  props: {\n    children\n  },\n  key,\n  e: container,\n  p: 1\n});\nexport {\n  build,\n  buildDataStack,\n  buildNode,\n  createPortal,\n  flushSync,\n  getNameSpaceContext,\n  render,\n  renderNode,\n  update\n};\n", "// src/jsx/hooks/index.ts\nimport { DOM_STASH } from \"../constants.js\";\nimport { buildDataStack, update } from \"../dom/render.js\";\nvar STASH_SATE = 0;\nvar STASH_EFFECT = 1;\nvar STASH_CALLBACK = 2;\nvar STASH_MEMO = 3;\nvar STASH_REF = 4;\nvar resolvedPromiseValueMap = /* @__PURE__ */ new WeakMap();\nvar isDepsChanged = (prevDeps, deps) => !prevDeps || !deps || prevDeps.length !== deps.length || deps.some((dep, i) => dep !== prevDeps[i]);\nvar viewTransitionState = void 0;\nvar documentStartViewTransition = (cb) => {\n  if (document?.startViewTransition) {\n    return document.startViewTransition(cb);\n  } else {\n    cb();\n    return { finished: Promise.resolve() };\n  }\n};\nvar updateHook = void 0;\nvar viewTransitionHook = (context, node, cb) => {\n  const state = [true, false];\n  let lastVC = node.vC;\n  return documentStartViewTransition(() => {\n    if (lastVC === node.vC) {\n      viewTransitionState = state;\n      cb(context);\n      viewTransitionState = void 0;\n      lastVC = node.vC;\n    }\n  }).finished.then(() => {\n    if (state[1] && lastVC === node.vC) {\n      state[0] = false;\n      viewTransitionState = state;\n      cb(context);\n      viewTransitionState = void 0;\n    }\n  });\n};\nvar startViewTransition = (callback) => {\n  updateHook = viewTransitionHook;\n  try {\n    callback();\n  } finally {\n    updateHook = void 0;\n  }\n};\nvar useViewTransition = () => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return [false, () => {\n    }];\n  }\n  if (viewTransitionState) {\n    viewTransitionState[1] = true;\n  }\n  return [!!viewTransitionState?.[0], startViewTransition];\n};\nvar pendingStack = [];\nvar runCallback = (type, callback) => {\n  let resolve;\n  const promise = new Promise((r) => resolve = r);\n  pendingStack.push([type, promise]);\n  try {\n    const res = callback();\n    if (res instanceof Promise) {\n      res.then(resolve, resolve);\n    } else {\n      resolve();\n    }\n  } finally {\n    pendingStack.pop();\n  }\n};\nvar startTransition = (callback) => {\n  runCallback(1, callback);\n};\nvar startTransitionHook = (callback) => {\n  runCallback(2, callback);\n};\nvar useTransition = () => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return [false, () => {\n    }];\n  }\n  const [error, setError] = useState();\n  const [state, updateState] = useState();\n  if (error) {\n    throw error[0];\n  }\n  const startTransitionLocalHook = useCallback(\n    (callback) => {\n      startTransitionHook(() => {\n        updateState((state2) => !state2);\n        let res = callback();\n        if (res instanceof Promise) {\n          res = res.catch((e) => {\n            setError([e]);\n          });\n        }\n        return res;\n      });\n    },\n    [state]\n  );\n  const [context] = buildData;\n  return [context[0] === 2, startTransitionLocalHook];\n};\nvar useDeferredValue = (value, ...rest) => {\n  const [values, setValues] = useState(\n    rest.length ? [rest[0], rest[0]] : [value, value]\n  );\n  if (Object.is(values[1], value)) {\n    return values[1];\n  }\n  pendingStack.push([3, Promise.resolve()]);\n  updateHook = async (context, _, cb) => {\n    cb(context);\n    values[0] = value;\n  };\n  setValues([values[0], value]);\n  updateHook = void 0;\n  pendingStack.pop();\n  return values[0];\n};\nvar useState = (initialState) => {\n  const resolveInitialState = () => typeof initialState === \"function\" ? initialState() : initialState;\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return [resolveInitialState(), () => {\n    }];\n  }\n  const [, node] = buildData;\n  const stateArray = node[DOM_STASH][1][STASH_SATE] ||= [];\n  const hookIndex = node[DOM_STASH][0]++;\n  return stateArray[hookIndex] ||= [\n    resolveInitialState(),\n    (newState) => {\n      const localUpdateHook = updateHook;\n      const stateData = stateArray[hookIndex];\n      if (typeof newState === \"function\") {\n        newState = newState(stateData[0]);\n      }\n      if (!Object.is(newState, stateData[0])) {\n        stateData[0] = newState;\n        if (pendingStack.length) {\n          const [pendingType, pendingPromise] = pendingStack.at(-1);\n          Promise.all([\n            pendingType === 3 ? node : update([pendingType, false, localUpdateHook], node),\n            pendingPromise\n          ]).then(([node2]) => {\n            if (!node2 || !(pendingType === 2 || pendingType === 3)) {\n              return;\n            }\n            const lastVC = node2.vC;\n            const addUpdateTask = () => {\n              setTimeout(() => {\n                if (lastVC !== node2.vC) {\n                  return;\n                }\n                update([pendingType === 3 ? 1 : 0, false, localUpdateHook], node2);\n              });\n            };\n            requestAnimationFrame(addUpdateTask);\n          });\n        } else {\n          update([0, false, localUpdateHook], node);\n        }\n      }\n    }\n  ];\n};\nvar useReducer = (reducer, initialArg, init) => {\n  const handler = useCallback(\n    (action) => {\n      setState((state2) => reducer(state2, action));\n    },\n    [reducer]\n  );\n  const [state, setState] = useState(() => init ? init(initialArg) : initialArg);\n  return [state, handler];\n};\nvar useEffectCommon = (index, effect, deps) => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return;\n  }\n  const [, node] = buildData;\n  const effectDepsArray = node[DOM_STASH][1][STASH_EFFECT] ||= [];\n  const hookIndex = node[DOM_STASH][0]++;\n  const [prevDeps, , prevCleanup] = effectDepsArray[hookIndex] ||= [];\n  if (isDepsChanged(prevDeps, deps)) {\n    if (prevCleanup) {\n      prevCleanup();\n    }\n    const runner = () => {\n      data[index] = void 0;\n      data[2] = effect();\n    };\n    const data = [deps, void 0, void 0, void 0, void 0];\n    data[index] = runner;\n    effectDepsArray[hookIndex] = data;\n  }\n};\nvar useEffect = (effect, deps) => useEffectCommon(3, effect, deps);\nvar useLayoutEffect = (effect, deps) => useEffectCommon(1, effect, deps);\nvar useInsertionEffect = (effect, deps) => useEffectCommon(4, effect, deps);\nvar useCallback = (callback, deps) => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return callback;\n  }\n  const [, node] = buildData;\n  const callbackArray = node[DOM_STASH][1][STASH_CALLBACK] ||= [];\n  const hookIndex = node[DOM_STASH][0]++;\n  const prevDeps = callbackArray[hookIndex];\n  if (isDepsChanged(prevDeps?.[1], deps)) {\n    callbackArray[hookIndex] = [callback, deps];\n  } else {\n    callback = callbackArray[hookIndex][0];\n  }\n  return callback;\n};\nvar useRef = (initialValue) => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return { current: initialValue };\n  }\n  const [, node] = buildData;\n  const refArray = node[DOM_STASH][1][STASH_REF] ||= [];\n  const hookIndex = node[DOM_STASH][0]++;\n  return refArray[hookIndex] ||= { current: initialValue };\n};\nvar use = (promise) => {\n  const cachedRes = resolvedPromiseValueMap.get(promise);\n  if (cachedRes) {\n    if (cachedRes.length === 2) {\n      throw cachedRes[1];\n    }\n    return cachedRes[0];\n  }\n  promise.then(\n    (res) => resolvedPromiseValueMap.set(promise, [res]),\n    (e) => resolvedPromiseValueMap.set(promise, [void 0, e])\n  );\n  throw promise;\n};\nvar useMemo = (factory, deps) => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    return factory();\n  }\n  const [, node] = buildData;\n  const memoArray = node[DOM_STASH][1][STASH_MEMO] ||= [];\n  const hookIndex = node[DOM_STASH][0]++;\n  const prevDeps = memoArray[hookIndex];\n  if (isDepsChanged(prevDeps?.[1], deps)) {\n    memoArray[hookIndex] = [factory(), deps];\n  }\n  return memoArray[hookIndex][0];\n};\nvar idCounter = 0;\nvar useId = () => useMemo(() => `:r${(idCounter++).toString(32)}:`, []);\nvar useDebugValue = (_value, _formatter) => {\n};\nvar createRef = () => {\n  return { current: null };\n};\nvar forwardRef = (Component) => {\n  return (props) => {\n    const { ref, ...rest } = props;\n    return Component(rest, ref);\n  };\n};\nvar useImperativeHandle = (ref, createHandle, deps) => {\n  useEffect(() => {\n    ref.current = createHandle();\n    return () => {\n      ref.current = null;\n    };\n  }, deps);\n};\nvar useSyncExternalStore = (subscribe, getSnapshot, getServerSnapshot) => {\n  const buildData = buildDataStack.at(-1);\n  if (!buildData) {\n    if (!getServerSnapshot) {\n      throw new Error(\"getServerSnapshot is required for server side rendering\");\n    }\n    return getServerSnapshot();\n  }\n  const [serverSnapshotIsUsed] = useState(!!(buildData[0][4] && getServerSnapshot));\n  const [state, setState] = useState(\n    () => serverSnapshotIsUsed ? getServerSnapshot() : getSnapshot()\n  );\n  useEffect(() => {\n    if (serverSnapshotIsUsed) {\n      setState(getSnapshot());\n    }\n    return subscribe(() => {\n      setState(getSnapshot());\n    });\n  }, []);\n  return state;\n};\nexport {\n  STASH_EFFECT,\n  createRef,\n  forwardRef,\n  startTransition,\n  startViewTransition,\n  use,\n  useCallback,\n  useDebugValue,\n  useDeferredValue,\n  useEffect,\n  useId,\n  useImperativeHandle,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  useTransition,\n  useViewTransition\n};\n", "// src/jsx/dom/hooks/index.ts\nimport { PERMALINK } from \"../../constants.js\";\nimport { useContext } from \"../../context.js\";\nimport { useCallback, useState } from \"../../hooks/index.js\";\nimport { createContext } from \"../context.js\";\nvar FormContext = createContext({\n  pending: false,\n  data: null,\n  method: null,\n  action: null\n});\nvar actions = /* @__PURE__ */ new Set();\nvar registerAction = (action) => {\n  actions.add(action);\n  action.finally(() => actions.delete(action));\n};\nvar useFormStatus = () => {\n  return useContext(FormContext);\n};\nvar useOptimistic = (state, updateState) => {\n  const [optimisticState, setOptimisticState] = useState(state);\n  if (actions.size > 0) {\n    Promise.all(actions).finally(() => {\n      setOptimisticState(state);\n    });\n  } else {\n    setOptimisticState(state);\n  }\n  const cb = useCallback((newData) => {\n    setOptimisticState((currentState) => updateState(currentState, newData));\n  }, []);\n  return [optimisticState, cb];\n};\nvar useActionState = (fn, initialState, permalink) => {\n  const [state, setState] = useState(initialState);\n  const actionState = async (data) => {\n    setState(await fn(state, data));\n  };\n  actionState[PERMALINK] = permalink;\n  return [state, actionState];\n};\nexport {\n  FormContext,\n  registerAction,\n  useActionState,\n  useFormStatus,\n  useOptimistic\n};\n", "// src/jsx/dom/jsx-dev-runtime.ts\nimport * as intrinsicElementTags from \"./intrinsic-element/components.js\";\nvar jsxDEV = (tag, props, key) => {\n  if (typeof tag === \"string\" && intrinsicElementTags[tag]) {\n    tag = intrinsicElementTags[tag];\n  }\n  return {\n    tag,\n    type: tag,\n    props,\n    key,\n    ref: props.ref\n  };\n};\nvar Fragment = (props) => jsxDEV(\"\", props, void 0);\nexport {\n  Fragment,\n  jsxDEV\n};\n", "// src/jsx/dom/components.ts\nimport { DOM_ERROR_HANDLER } from \"../constants.js\";\nimport { Fragment } from \"./jsx-runtime.js\";\nvar ErrorBoundary = ({ children, fallback, fallbackRender, onError }) => {\n  const res = Fragment({ children });\n  res[DOM_ERROR_HANDLER] = (err) => {\n    if (err instanceof Promise) {\n      throw err;\n    }\n    onError?.(err);\n    return fallbackRender?.(err) || fallback;\n  };\n  return res;\n};\nvar Suspense = ({\n  children,\n  fallback\n}) => {\n  const res = Fragment({ children });\n  res[DOM_ERROR_HANDLER] = (err, retry) => {\n    if (!(err instanceof Promise)) {\n      throw err;\n    }\n    err.finally(retry);\n    return fallback;\n  };\n  return res;\n};\nexport {\n  ErrorBoundary,\n  Suspense\n};\n", "// src/jsx/streaming.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"../utils/html.js\";\nimport { JSXNode } from \"./base.js\";\nimport { childrenToString } from \"./components.js\";\nimport { DOM_RENDERER, DOM_STASH } from \"./constants.js\";\nimport { createContext, useContext } from \"./context.js\";\nimport { Suspense as SuspenseDomRenderer } from \"./dom/components.js\";\nimport { buildDataStack } from \"./dom/render.js\";\nvar StreamingContext = createContext(null);\nvar suspenseCounter = 0;\nvar Suspense = async ({\n  children,\n  fallback\n}) => {\n  if (!children) {\n    return fallback.toString();\n  }\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n  const nonce = useContext(StreamingContext)?.scriptNonce;\n  let resArray = [];\n  const stackNode = { [DOM_STASH]: [0, []] };\n  const popNodeStack = (value) => {\n    buildDataStack.pop();\n    return value;\n  };\n  try {\n    stackNode[DOM_STASH][0] = 0;\n    buildDataStack.push([[], stackNode]);\n    resArray = children.map(\n      (c) => c == null || typeof c === \"boolean\" ? \"\" : c.toString()\n    );\n  } catch (e) {\n    if (e instanceof Promise) {\n      resArray = [\n        e.then(() => {\n          stackNode[DOM_STASH][0] = 0;\n          buildDataStack.push([[], stackNode]);\n          return childrenToString(children).then(popNodeStack);\n        })\n      ];\n    } else {\n      throw e;\n    }\n  } finally {\n    popNodeStack();\n  }\n  if (resArray.some((res) => res instanceof Promise)) {\n    const index = suspenseCounter++;\n    const fallbackStr = await fallback.toString();\n    return raw(`<template id=\"H:${index}\"></template>${fallbackStr}<!--/$-->`, [\n      ...fallbackStr.callbacks || [],\n      ({ phase, buffer, context }) => {\n        if (phase === HtmlEscapedCallbackPhase.BeforeStream) {\n          return;\n        }\n        return Promise.all(resArray).then(async (htmlArray) => {\n          htmlArray = htmlArray.flat();\n          const content = htmlArray.join(\"\");\n          if (buffer) {\n            buffer[0] = buffer[0].replace(\n              new RegExp(`<template id=\"H:${index}\"></template>.*?<!--/\\\\$-->`),\n              content\n            );\n          }\n          let html = buffer ? \"\" : `<template data-hono-target=\"H:${index}\">${content}</template><script${nonce ? ` nonce=\"${nonce}\"` : \"\"}>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('H:${index}')\nif(!d)return\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='/$')\nd.replaceWith(c.content)\n})(document)\n<\\/script>`;\n          const callbacks = htmlArray.map((html2) => html2.callbacks || []).flat();\n          if (!callbacks.length) {\n            return html;\n          }\n          if (phase === HtmlEscapedCallbackPhase.Stream) {\n            html = await resolveCallback(html, HtmlEscapedCallbackPhase.BeforeStream, true, context);\n          }\n          return raw(html, callbacks);\n        });\n      }\n    ]);\n  } else {\n    return raw(resArray.join(\"\"));\n  }\n};\nSuspense[DOM_RENDERER] = SuspenseDomRenderer;\nvar textEncoder = new TextEncoder();\nvar renderToReadableStream = (content, onError = console.trace) => {\n  const reader = new ReadableStream({\n    async start(controller) {\n      try {\n        if (content instanceof JSXNode) {\n          content = content.toString();\n        }\n        const context = typeof content === \"object\" ? content : {};\n        const resolved = await resolveCallback(\n          content,\n          HtmlEscapedCallbackPhase.BeforeStream,\n          true,\n          context\n        );\n        controller.enqueue(textEncoder.encode(resolved));\n        let resolvedCount = 0;\n        const callbacks = [];\n        const then = (promise) => {\n          callbacks.push(\n            promise.catch((err) => {\n              console.log(err);\n              onError(err);\n              return \"\";\n            }).then(async (res) => {\n              res = await resolveCallback(\n                res,\n                HtmlEscapedCallbackPhase.BeforeStream,\n                true,\n                context\n              );\n              res.callbacks?.map((c) => c({ phase: HtmlEscapedCallbackPhase.Stream, context })).filter(Boolean).forEach(then);\n              resolvedCount++;\n              controller.enqueue(textEncoder.encode(res));\n            })\n          );\n        };\n        resolved.callbacks?.map((c) => c({ phase: HtmlEscapedCallbackPhase.Stream, context })).filter(Boolean).forEach(then);\n        while (resolvedCount !== callbacks.length) {\n          await Promise.all(callbacks);\n        }\n      } catch (e) {\n        onError(e);\n      }\n      controller.close();\n    }\n  });\n  return reader;\n};\nexport {\n  StreamingContext,\n  Suspense,\n  renderToReadableStream\n};\n", "// src/jsx/components.ts\nimport { raw } from \"../helper/html/index.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"../utils/html.js\";\nimport { DOM_RENDERER } from \"./constants.js\";\nimport { useContext } from \"./context.js\";\nimport { ErrorBoundary as ErrorBoundaryDomRenderer } from \"./dom/components.js\";\nimport { StreamingContext } from \"./streaming.js\";\nvar errorBoundaryCounter = 0;\nvar childrenToString = async (children) => {\n  try {\n    return children.flat().map((c) => c == null || typeof c === \"boolean\" ? \"\" : c.toString());\n  } catch (e) {\n    if (e instanceof Promise) {\n      await e;\n      return childrenToString(children);\n    } else {\n      throw e;\n    }\n  }\n};\nvar ErrorBoundary = async ({ children, fallback, fallbackRender, onError }) => {\n  if (!children) {\n    return raw(\"\");\n  }\n  if (!Array.isArray(children)) {\n    children = [children];\n  }\n  const nonce = useContext(StreamingContext)?.scriptNonce;\n  let fallbackStr;\n  const fallbackRes = (error) => {\n    onError?.(error);\n    return (fallbackStr || fallbackRender?.(error) || \"\").toString();\n  };\n  let resArray = [];\n  try {\n    resArray = children.map(\n      (c) => c == null || typeof c === \"boolean\" ? \"\" : c.toString()\n    );\n  } catch (e) {\n    fallbackStr = await fallback?.toString();\n    if (e instanceof Promise) {\n      resArray = [\n        e.then(() => childrenToString(children)).catch((e2) => fallbackRes(e2))\n      ];\n    } else {\n      resArray = [fallbackRes(e)];\n    }\n  }\n  if (resArray.some((res) => res instanceof Promise)) {\n    fallbackStr ||= await fallback?.toString();\n    const index = errorBoundaryCounter++;\n    const replaceRe = RegExp(`(<template id=\"E:${index}\"></template>.*?)(.*?)(<!--E:${index}-->)`);\n    const caught = false;\n    const catchCallback = ({ error: error2, buffer }) => {\n      if (caught) {\n        return \"\";\n      }\n      const fallbackResString = fallbackRes(error2);\n      if (buffer) {\n        buffer[0] = buffer[0].replace(replaceRe, fallbackResString);\n      }\n      return buffer ? \"\" : `<template data-hono-target=\"E:${index}\">${fallbackResString}</template><script>\n((d,c,n) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('E:${index}')\nif(!d)return\ndo{n=d.nextSibling;n.remove()}while(n.nodeType!=8||n.nodeValue!='E:${index}')\nd.replaceWith(c.content)\n})(document)\n<\\/script>`;\n    };\n    let error;\n    const promiseAll = Promise.all(resArray).catch((e) => error = e);\n    return raw(`<template id=\"E:${index}\"></template><!--E:${index}-->`, [\n      ({ phase, buffer, context }) => {\n        if (phase === HtmlEscapedCallbackPhase.BeforeStream) {\n          return;\n        }\n        return promiseAll.then(async (htmlArray) => {\n          if (error) {\n            throw error;\n          }\n          htmlArray = htmlArray.flat();\n          const content = htmlArray.join(\"\");\n          let html = buffer ? \"\" : `<template data-hono-target=\"E:${index}\">${content}</template><script${nonce ? ` nonce=\"${nonce}\"` : \"\"}>\n((d,c) => {\nc=d.currentScript.previousSibling\nd=d.getElementById('E:${index}')\nif(!d)return\nd.parentElement.insertBefore(c.content,d.nextSibling)\n})(document)\n<\\/script>`;\n          if (htmlArray.every((html2) => !html2.callbacks?.length)) {\n            if (buffer) {\n              buffer[0] = buffer[0].replace(replaceRe, content);\n            }\n            return html;\n          }\n          if (buffer) {\n            buffer[0] = buffer[0].replace(\n              replaceRe,\n              (_all, pre, _, post) => `${pre}${content}${post}`\n            );\n          }\n          const callbacks = htmlArray.map((html2) => html2.callbacks || []).flat();\n          if (phase === HtmlEscapedCallbackPhase.Stream) {\n            html = await resolveCallback(\n              html,\n              HtmlEscapedCallbackPhase.BeforeStream,\n              true,\n              context\n            );\n          }\n          let resolvedCount = 0;\n          const promises = callbacks.map(\n            (c) => (...args) => c(...args)?.then((content2) => {\n              resolvedCount++;\n              if (buffer) {\n                if (resolvedCount === callbacks.length) {\n                  buffer[0] = buffer[0].replace(replaceRe, (_all, _pre, content3) => content3);\n                }\n                buffer[0] += content2;\n                return raw(\"\", content2.callbacks);\n              }\n              return raw(\n                content2 + (resolvedCount !== callbacks.length ? \"\" : `<script>\n((d,c,n) => {\nd=d.getElementById('E:${index}')\nif(!d)return\nn=d.nextSibling\nwhile(n.nodeType!=8||n.nodeValue!='E:${index}'){n=n.nextSibling}\nn.remove()\nd.remove()\n})(document)\n<\\/script>`),\n                content2.callbacks\n              );\n            }).catch((error2) => catchCallback({ error: error2, buffer }))\n          );\n          return raw(html, promises);\n        }).catch((error2) => catchCallback({ error: error2, buffer }));\n      }\n    ]);\n  } else {\n    return raw(resArray.join(\"\"));\n  }\n};\nErrorBoundary[DOM_RENDERER] = ErrorBoundaryDomRenderer;\nexport {\n  ErrorBoundary,\n  childrenToString\n};\n", "// src/middleware/jsx-renderer/index.ts\nimport { html, raw } from \"../../helper/html/index.js\";\nimport { Fragment, createContext, jsx, useContext } from \"../../jsx/index.js\";\nimport { renderToReadableStream } from \"../../jsx/streaming.js\";\nvar RequestContext = createContext(null);\nvar createRenderer = (c, Layout, component, options) => (children, props) => {\n  const docType = typeof options?.docType === \"string\" ? options.docType : options?.docType === false ? \"\" : \"<!DOCTYPE html>\";\n  const currentLayout = component ? jsx(\n    (props2) => component(props2, c),\n    {\n      Layout,\n      ...props\n    },\n    children\n  ) : children;\n  const body = html`${raw(docType)}${jsx(\n    RequestContext.Provider,\n    { value: c },\n    currentLayout\n  )}`;\n  if (options?.stream) {\n    if (options.stream === true) {\n      c.header(\"Transfer-Encoding\", \"chunked\");\n      c.header(\"Content-Type\", \"text/html; charset=UTF-8\");\n      c.header(\"Content-Encoding\", \"Identity\");\n    } else {\n      for (const [key, value] of Object.entries(options.stream)) {\n        c.header(key, value);\n      }\n    }\n    return c.body(renderToReadableStream(body));\n  } else {\n    return c.html(body);\n  }\n};\nvar jsxRenderer = (component, options) => function jsxRenderer2(c, next) {\n  const Layout = c.getLayout() ?? Fragment;\n  if (component) {\n    c.setLayout((props) => {\n      return component({ ...props, Layout }, c);\n    });\n  }\n  c.setRenderer(createRenderer(c, Layout, component, options));\n  return next();\n};\nvar useRequestContext = () => {\n  const c = useContext(RequestContext);\n  if (!c) {\n    throw new Error(\"RequestContext is not provided.\");\n  }\n  return c;\n};\nexport {\n  RequestContext,\n  jsxRenderer,\n  useRequestContext\n};\n", "import { jsxRenderer } from \"hono/jsx-renderer\";\n\nexport default jsxRenderer(({ children }) => (\n  <html>\n    <head>\n      <title>Interactive Marble Diagram Builder</title>\n      <link rel=\"stylesheet\" href=\"/output.css\" />\n    </head>\n    <body className=\"bg-gray-900 text-white\">{children}</body>\n  </html>\n));\n", "import { Hono } from \"hono\";\nimport { onRequestGet } from \"./examples\";\nimport RootLayout from \"./layout\";\n\nconst app = new Hono();\n\napp.use(\"*\", RootLayout);\napp.get(\"/\", onRequestGet);\n\nexport default app;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/.wrangler/tmp/bundle-gbMxYW/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/.wrangler/tmp/bundle-gbMxYW/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/stukennedy/Dev/svg-marbles/examples/cloudflare/.wrangler/tmp/bundle-gbMxYW/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;;;;;AACA,IAAI,UAAU,wBAAC,YAAY,SAAS,eAAe;AACjD,SAAO,CAACA,UAAS,SAAS;AACxB,QAAI,QAAQ;AACZ,WAAO,SAAS,CAAC;AACjB,mBAAe,SAAS,GAAG;AACzB,UAAI,KAAK,OAAO;AACd,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD;AACA,cAAQ;AACR,UAAI;AACJ,UAAI,UAAU;AACd,UAAI;AACJ,UAAI,WAAW,CAAC,GAAG;AACjB,kBAAU,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC;AAC5B,QAAAA,SAAQ,IAAI,aAAa;AAAA,MAC3B,OAAO;AACL,kBAAU,MAAM,WAAW,UAAU,QAAQ;AAAA,MAC/C;AACA,UAAI,SAAS;AACX,YAAI;AACF,gBAAM,MAAM,QAAQA,UAAS,MAAM,SAAS,IAAI,CAAC,CAAC;AAAA,QACpD,SAAS,KAAK;AACZ,cAAI,eAAe,SAAS,SAAS;AACnC,YAAAA,SAAQ,QAAQ;AAChB,kBAAM,MAAM,QAAQ,KAAKA,QAAO;AAChC,sBAAU;AAAA,UACZ,OAAO;AACL,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAIA,SAAQ,cAAc,SAAS,YAAY;AAC7C,gBAAM,MAAM,WAAWA,QAAO;AAAA,QAChC;AAAA,MACF;AACA,UAAI,QAAQA,SAAQ,cAAc,SAAS,UAAU;AACnD,QAAAA,SAAQ,MAAM;AAAA,MAChB;AACA,aAAOA;AAAA,IACT;AAnCe;AAAA,EAoCjB;AACF,GAzCc;;;ACAd,IAAI,mBAAmB,OAAO;;;ACC9B,IAAI,YAAY,8BAAO,SAAS,UAA0B,uBAAO,OAAO,IAAI,MAAM;AAChF,QAAM,EAAE,MAAM,OAAO,MAAM,MAAM,IAAI;AACrC,QAAM,UAAU,mBAAmB,cAAc,QAAQ,IAAI,UAAU,QAAQ;AAC/E,QAAM,cAAc,QAAQ,IAAI,cAAc;AAC9C,MAAI,aAAa,WAAW,qBAAqB,KAAK,aAAa,WAAW,mCAAmC,GAAG;AAClH,WAAO,cAAc,SAAS,EAAE,KAAK,IAAI,CAAC;AAAA,EAC5C;AACA,SAAO,CAAC;AACV,GARgB;AAShB,eAAe,cAAc,SAAS,SAAS;AAC7C,QAAM,WAAW,MAAM,QAAQ,SAAS;AACxC,MAAI,UAAU;AACZ,WAAO,0BAA0B,UAAU,OAAO;AAAA,EACpD;AACA,SAAO,CAAC;AACV;AANe;AAOf,SAAS,0BAA0B,UAAU,SAAS;AACpD,QAAMC,QAAuB,uBAAO,OAAO,IAAI;AAC/C,WAAS,QAAQ,CAAC,OAAO,QAAQ;AAC/B,UAAM,uBAAuB,QAAQ,OAAO,IAAI,SAAS,IAAI;AAC7D,QAAI,CAAC,sBAAsB;AACzB,MAAAA,MAAK,GAAG,IAAI;AAAA,IACd,OAAO;AACL,6BAAuBA,OAAM,KAAK,KAAK;AAAA,IACzC;AAAA,EACF,CAAC;AACD,MAAI,QAAQ,KAAK;AACf,WAAO,QAAQA,KAAI,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AAC7C,YAAM,uBAAuB,IAAI,SAAS,GAAG;AAC7C,UAAI,sBAAsB;AACxB,kCAA0BA,OAAM,KAAK,KAAK;AAC1C,eAAOA,MAAK,GAAG;AAAA,MACjB;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAOA;AACT;AApBS;AAqBT,IAAI,yBAAyB,wBAACA,OAAM,KAAK,UAAU;AACjD,MAAIA,MAAK,GAAG,MAAM,QAAQ;AACxB,QAAI,MAAM,QAAQA,MAAK,GAAG,CAAC,GAAG;AAC5B;AACA,MAAAA,MAAK,GAAG,EAAE,KAAK,KAAK;AAAA,IACtB,OAAO;AACL,MAAAA,MAAK,GAAG,IAAI,CAACA,MAAK,GAAG,GAAG,KAAK;AAAA,IAC/B;AAAA,EACF,OAAO;AACL,QAAI,CAAC,IAAI,SAAS,IAAI,GAAG;AACvB,MAAAA,MAAK,GAAG,IAAI;AAAA,IACd,OAAO;AACL,MAAAA,MAAK,GAAG,IAAI,CAAC,KAAK;AAAA,IACpB;AAAA,EACF;AACF,GAf6B;AAgB7B,IAAI,4BAA4B,wBAACA,OAAM,KAAK,UAAU;AACpD,MAAI,aAAaA;AACjB,QAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,OAAK,QAAQ,CAAC,MAAM,UAAU;AAC5B,QAAI,UAAU,KAAK,SAAS,GAAG;AAC7B,iBAAW,IAAI,IAAI;AAAA,IACrB,OAAO;AACL,UAAI,CAAC,WAAW,IAAI,KAAK,OAAO,WAAW,IAAI,MAAM,YAAY,MAAM,QAAQ,WAAW,IAAI,CAAC,KAAK,WAAW,IAAI,aAAa,MAAM;AACpI,mBAAW,IAAI,IAAoB,uBAAO,OAAO,IAAI;AAAA,MACvD;AACA,mBAAa,WAAW,IAAI;AAAA,IAC9B;AAAA,EACF,CAAC;AACH,GAbgC;;;ACtDhC,IAAI,YAAY,wBAAC,SAAS;AACxB,QAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,MAAI,MAAM,CAAC,MAAM,IAAI;AACnB,UAAM,MAAM;AAAA,EACd;AACA,SAAO;AACT,GANgB;AAOhB,IAAI,mBAAmB,wBAAC,cAAc;AACpC,QAAM,EAAE,QAAQ,KAAK,IAAI,sBAAsB,SAAS;AACxD,QAAM,QAAQ,UAAU,IAAI;AAC5B,SAAO,kBAAkB,OAAO,MAAM;AACxC,GAJuB;AAKvB,IAAI,wBAAwB,wBAAC,SAAS;AACpC,QAAM,SAAS,CAAC;AAChB,SAAO,KAAK,QAAQ,cAAc,CAAC,OAAO,UAAU;AAClD,UAAM,OAAO,IAAI,KAAK;AACtB,WAAO,KAAK,CAAC,MAAM,KAAK,CAAC;AACzB,WAAO;AAAA,EACT,CAAC;AACD,SAAO,EAAE,QAAQ,KAAK;AACxB,GAR4B;AAS5B,IAAI,oBAAoB,wBAAC,OAAO,WAAW;AACzC,WAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,UAAM,CAAC,IAAI,IAAI,OAAO,CAAC;AACvB,aAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,UAAI,MAAM,CAAC,EAAE,SAAS,IAAI,GAAG;AAC3B,cAAM,CAAC,IAAI,MAAM,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAC9C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT,GAXwB;AAYxB,IAAI,eAAe,CAAC;AACpB,IAAI,aAAa,wBAAC,OAAO,SAAS;AAChC,MAAI,UAAU,KAAK;AACjB,WAAO;AAAA,EACT;AACA,QAAM,QAAQ,MAAM,MAAM,6BAA6B;AACvD,MAAI,OAAO;AACT,UAAM,WAAW,GAAG,KAAK,IAAI,IAAI;AACjC,QAAI,CAAC,aAAa,QAAQ,GAAG;AAC3B,UAAI,MAAM,CAAC,GAAG;AACZ,qBAAa,QAAQ,IAAI,QAAQ,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,MAAM,CAAC,UAAU,MAAM,CAAC,GAAG,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,OAAO,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,MAAM,CAAC,GAAG,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC;AAAA,MACpL,OAAO;AACL,qBAAa,QAAQ,IAAI,CAAC,OAAO,MAAM,CAAC,GAAG,IAAI;AAAA,MACjD;AAAA,IACF;AACA,WAAO,aAAa,QAAQ;AAAA,EAC9B;AACA,SAAO;AACT,GAjBiB;AAkBjB,IAAI,YAAY,wBAAC,KAAK,YAAY;AAChC,MAAI;AACF,WAAO,QAAQ,GAAG;AAAA,EACpB,QAAQ;AACN,WAAO,IAAI,QAAQ,yBAAyB,CAAC,UAAU;AACrD,UAAI;AACF,eAAO,QAAQ,KAAK;AAAA,MACtB,QAAQ;AACN,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH;AACF,GAZgB;AAahB,IAAI,eAAe,wBAAC,QAAQ,UAAU,KAAK,SAAS,GAAjC;AACnB,IAAI,UAAU,wBAAC,YAAY;AACzB,QAAM,MAAM,QAAQ;AACpB,QAAM,QAAQ,IAAI;AAAA,IAChB;AAAA,IACA,IAAI,WAAW,CAAC,MAAM,KAAK,KAAK;AAAA,EAClC;AACA,MAAI,IAAI;AACR,SAAO,IAAI,IAAI,QAAQ,KAAK;AAC1B,UAAM,WAAW,IAAI,WAAW,CAAC;AACjC,QAAI,aAAa,IAAI;AACnB,YAAM,aAAa,IAAI,QAAQ,KAAK,CAAC;AACrC,YAAM,OAAO,IAAI,MAAM,OAAO,eAAe,KAAK,SAAS,UAAU;AACrE,aAAO,aAAa,KAAK,SAAS,KAAK,IAAI,KAAK,QAAQ,QAAQ,OAAO,IAAI,IAAI;AAAA,IACjF,WAAW,aAAa,IAAI;AAC1B;AAAA,IACF;AAAA,EACF;AACA,SAAO,IAAI,MAAM,OAAO,CAAC;AAC3B,GAlBc;AAuBd,IAAI,kBAAkB,wBAAC,YAAY;AACjC,QAAM,SAAS,QAAQ,OAAO;AAC9B,SAAO,OAAO,SAAS,KAAK,OAAO,GAAG,EAAE,MAAM,MAAM,OAAO,MAAM,GAAG,EAAE,IAAI;AAC5E,GAHsB;AAItB,IAAI,YAAY,wBAAC,MAAM,QAAQ,SAAS;AACtC,MAAI,KAAK,QAAQ;AACf,UAAM,UAAU,KAAK,GAAG,IAAI;AAAA,EAC9B;AACA,SAAO,GAAG,OAAO,CAAC,MAAM,MAAM,KAAK,GAAG,GAAG,IAAI,GAAG,QAAQ,MAAM,KAAK,GAAG,MAAM,GAAG,EAAE,MAAM,MAAM,KAAK,GAAG,GAAG,MAAM,CAAC,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,EAAE;AACjJ,GALgB;AAMhB,IAAI,yBAAyB,wBAAC,SAAS;AACrC,MAAI,KAAK,WAAW,KAAK,SAAS,CAAC,MAAM,MAAM,CAAC,KAAK,SAAS,GAAG,GAAG;AAClE,WAAO;AAAA,EACT;AACA,QAAM,WAAW,KAAK,MAAM,GAAG;AAC/B,QAAM,UAAU,CAAC;AACjB,MAAI,WAAW;AACf,WAAS,QAAQ,CAAC,YAAY;AAC5B,QAAI,YAAY,MAAM,CAAC,KAAK,KAAK,OAAO,GAAG;AACzC,kBAAY,MAAM;AAAA,IACpB,WAAW,KAAK,KAAK,OAAO,GAAG;AAC7B,UAAI,KAAK,KAAK,OAAO,GAAG;AACtB,YAAI,QAAQ,WAAW,KAAK,aAAa,IAAI;AAC3C,kBAAQ,KAAK,GAAG;AAAA,QAClB,OAAO;AACL,kBAAQ,KAAK,QAAQ;AAAA,QACvB;AACA,cAAM,kBAAkB,QAAQ,QAAQ,KAAK,EAAE;AAC/C,oBAAY,MAAM;AAClB,gBAAQ,KAAK,QAAQ;AAAA,MACvB,OAAO;AACL,oBAAY,MAAM;AAAA,MACpB;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO,QAAQ,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AACvD,GA1B6B;AA2B7B,IAAI,aAAa,wBAAC,UAAU;AAC1B,MAAI,CAAC,OAAO,KAAK,KAAK,GAAG;AACvB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,YAAQ,MAAM,QAAQ,OAAO,GAAG;AAAA,EAClC;AACA,SAAO,MAAM,QAAQ,GAAG,MAAM,KAAK,UAAU,OAAO,mBAAmB,IAAI;AAC7E,GARiB;AASjB,IAAI,iBAAiB,wBAAC,KAAK,KAAK,aAAa;AAC3C,MAAI;AACJ,MAAI,CAAC,YAAY,OAAO,CAAC,OAAO,KAAK,GAAG,GAAG;AACzC,QAAI,YAAY,IAAI,QAAQ,IAAI,GAAG,IAAI,CAAC;AACxC,QAAI,cAAc,IAAI;AACpB,kBAAY,IAAI,QAAQ,IAAI,GAAG,IAAI,CAAC;AAAA,IACtC;AACA,WAAO,cAAc,IAAI;AACvB,YAAM,kBAAkB,IAAI,WAAW,YAAY,IAAI,SAAS,CAAC;AACjE,UAAI,oBAAoB,IAAI;AAC1B,cAAM,aAAa,YAAY,IAAI,SAAS;AAC5C,cAAM,WAAW,IAAI,QAAQ,KAAK,UAAU;AAC5C,eAAO,WAAW,IAAI,MAAM,YAAY,aAAa,KAAK,SAAS,QAAQ,CAAC;AAAA,MAC9E,WAAW,mBAAmB,MAAM,MAAM,eAAe,GAAG;AAC1D,eAAO;AAAA,MACT;AACA,kBAAY,IAAI,QAAQ,IAAI,GAAG,IAAI,YAAY,CAAC;AAAA,IAClD;AACA,cAAU,OAAO,KAAK,GAAG;AACzB,QAAI,CAAC,SAAS;AACZ,aAAO;AAAA,IACT;AAAA,EACF;AACA,QAAM,UAAU,CAAC;AACjB,cAAY,OAAO,KAAK,GAAG;AAC3B,MAAI,WAAW,IAAI,QAAQ,KAAK,CAAC;AACjC,SAAO,aAAa,IAAI;AACtB,UAAM,eAAe,IAAI,QAAQ,KAAK,WAAW,CAAC;AAClD,QAAI,aAAa,IAAI,QAAQ,KAAK,QAAQ;AAC1C,QAAI,aAAa,gBAAgB,iBAAiB,IAAI;AACpD,mBAAa;AAAA,IACf;AACA,QAAI,OAAO,IAAI;AAAA,MACb,WAAW;AAAA,MACX,eAAe,KAAK,iBAAiB,KAAK,SAAS,eAAe;AAAA,IACpE;AACA,QAAI,SAAS;AACX,aAAO,WAAW,IAAI;AAAA,IACxB;AACA,eAAW;AACX,QAAI,SAAS,IAAI;AACf;AAAA,IACF;AACA,QAAI;AACJ,QAAI,eAAe,IAAI;AACrB,cAAQ;AAAA,IACV,OAAO;AACL,cAAQ,IAAI,MAAM,aAAa,GAAG,iBAAiB,KAAK,SAAS,YAAY;AAC7E,UAAI,SAAS;AACX,gBAAQ,WAAW,KAAK;AAAA,MAC1B;AAAA,IACF;AACA,QAAI,UAAU;AACZ,UAAI,EAAE,QAAQ,IAAI,KAAK,MAAM,QAAQ,QAAQ,IAAI,CAAC,IAAI;AACpD,gBAAQ,IAAI,IAAI,CAAC;AAAA,MACnB;AACA;AACA,cAAQ,IAAI,EAAE,KAAK,KAAK;AAAA,IAC1B,OAAO;AACL,cAAQ,IAAI,MAAM;AAAA,IACpB;AAAA,EACF;AACA,SAAO,MAAM,QAAQ,GAAG,IAAI;AAC9B,GA/DqB;AAgErB,IAAI,gBAAgB;AACpB,IAAI,iBAAiB,wBAAC,KAAK,QAAQ;AACjC,SAAO,eAAe,KAAK,KAAK,IAAI;AACtC,GAFqB;AAGrB,IAAI,sBAAsB;;;ACxM1B,IAAI,wBAAwB,wBAAC,QAAQ,UAAU,KAAK,mBAAmB,GAA3C;AAC5B,IAAI,cAAc,MAAM;AAAA,EALxB,OAKwB;AAAA;AAAA;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA,YAAY,CAAC;AAAA,EACb,YAAY,SAAS,OAAO,KAAK,cAAc,CAAC,CAAC,CAAC,GAAG;AACnD,SAAK,MAAM;AACX,SAAK,OAAO;AACZ,SAAK,eAAe;AACpB,SAAK,iBAAiB,CAAC;AAAA,EACzB;AAAA,EACA,MAAM,KAAK;AACT,WAAO,MAAM,KAAK,iBAAiB,GAAG,IAAI,KAAK,qBAAqB;AAAA,EACtE;AAAA,EACA,iBAAiB,KAAK;AACpB,UAAM,WAAW,KAAK,aAAa,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG;AAC7D,UAAM,QAAQ,KAAK,eAAe,QAAQ;AAC1C,WAAO,QAAQ,KAAK,KAAK,KAAK,IAAI,sBAAsB,KAAK,IAAI,QAAQ;AAAA,EAC3E;AAAA,EACA,uBAAuB;AACrB,UAAM,UAAU,CAAC;AACjB,UAAM,OAAO,OAAO,KAAK,KAAK,aAAa,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,CAAC;AACjE,eAAW,OAAO,MAAM;AACtB,YAAM,QAAQ,KAAK,eAAe,KAAK,aAAa,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC,EAAE,GAAG,CAAC;AAC/E,UAAI,SAAS,OAAO,UAAU,UAAU;AACtC,gBAAQ,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,sBAAsB,KAAK,IAAI;AAAA,MACnE;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,eAAe,UAAU;AACvB,WAAO,KAAK,aAAa,CAAC,IAAI,KAAK,aAAa,CAAC,EAAE,QAAQ,IAAI;AAAA,EACjE;AAAA,EACA,MAAM,KAAK;AACT,WAAO,cAAc,KAAK,KAAK,GAAG;AAAA,EACpC;AAAA,EACA,QAAQ,KAAK;AACX,WAAO,eAAe,KAAK,KAAK,GAAG;AAAA,EACrC;AAAA,EACA,OAAO,MAAM;AACX,QAAI,MAAM;AACR,aAAO,KAAK,IAAI,QAAQ,IAAI,IAAI,KAAK;AAAA,IACvC;AACA,UAAM,aAAa,CAAC;AACpB,SAAK,IAAI,QAAQ,QAAQ,CAAC,OAAO,QAAQ;AACvC,iBAAW,GAAG,IAAI;AAAA,IACpB,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,MAAM,UAAU,SAAS;AACvB,WAAO,KAAK,UAAU,eAAe,MAAM,UAAU,MAAM,OAAO;AAAA,EACpE;AAAA,EACA,cAAc,wBAAC,QAAQ;AACrB,UAAM,EAAE,WAAW,KAAAC,KAAI,IAAI;AAC3B,UAAM,aAAa,UAAU,GAAG;AAChC,QAAI,YAAY;AACd,aAAO;AAAA,IACT;AACA,UAAM,eAAe,OAAO,KAAK,SAAS,EAAE,CAAC;AAC7C,QAAI,cAAc;AAChB,aAAO,UAAU,YAAY,EAAE,KAAK,CAAC,SAAS;AAC5C,YAAI,iBAAiB,QAAQ;AAC3B,iBAAO,KAAK,UAAU,IAAI;AAAA,QAC5B;AACA,eAAO,IAAI,SAAS,IAAI,EAAE,GAAG,EAAE;AAAA,MACjC,CAAC;AAAA,IACH;AACA,WAAO,UAAU,GAAG,IAAIA,KAAI,GAAG,EAAE;AAAA,EACnC,GAhBc;AAAA,EAiBd,OAAO;AACL,WAAO,KAAK,YAAY,MAAM,EAAE,KAAK,CAAC,SAAS,KAAK,MAAM,IAAI,CAAC;AAAA,EACjE;AAAA,EACA,OAAO;AACL,WAAO,KAAK,YAAY,MAAM;AAAA,EAChC;AAAA,EACA,cAAc;AACZ,WAAO,KAAK,YAAY,aAAa;AAAA,EACvC;AAAA,EACA,OAAO;AACL,WAAO,KAAK,YAAY,MAAM;AAAA,EAChC;AAAA,EACA,WAAW;AACT,WAAO,KAAK,YAAY,UAAU;AAAA,EACpC;AAAA,EACA,iBAAiB,QAAQ,MAAM;AAC7B,SAAK,eAAe,MAAM,IAAI;AAAA,EAChC;AAAA,EACA,MAAM,QAAQ;AACZ,WAAO,KAAK,eAAe,MAAM;AAAA,EACnC;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK,IAAI;AAAA,EAClB;AAAA,EACA,KAAK,gBAAgB,IAAI;AACvB,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,gBAAgB;AAClB,WAAO,KAAK,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK;AAAA,EACxD;AAAA,EACA,IAAI,YAAY;AACd,WAAO,KAAK,aAAa,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,KAAK,EAAE,KAAK,UAAU,EAAE;AAAA,EAC3E;AACF;;;AC/GA,IAAI,2BAA2B;AAAA,EAC7B,WAAW;AAAA,EACX,cAAc;AAAA,EACd,QAAQ;AACV;AACA,IAAI,MAAM,wBAAC,OAAO,cAAc;AAC9B,QAAM,gBAAgB,IAAI,OAAO,KAAK;AACtC,gBAAc,YAAY;AAC1B,gBAAc,YAAY;AAC1B,SAAO;AACT,GALU;AAMV,IAAI,WAAW;AACf,IAAI,uBAAuB,8BAAO,QAAQ,cAAc;AACtD,MAAI,MAAM;AACV,gBAAc,CAAC;AACf,QAAM,iBAAiB,MAAM,QAAQ,IAAI,MAAM;AAC/C,WAAS,IAAI,eAAe,SAAS,KAAK,KAAK;AAC7C,WAAO,eAAe,CAAC;AACvB;AACA,QAAI,IAAI,GAAG;AACT;AAAA,IACF;AACA,QAAI,IAAI,eAAe,CAAC;AACxB,QAAI,OAAO,MAAM,UAAU;AACzB,gBAAU,KAAK,GAAG,EAAE,aAAa,CAAC,CAAC;AAAA,IACrC;AACA,UAAM,YAAY,EAAE;AACpB,QAAI,OAAO,OAAO,MAAM,WAAW,EAAE,SAAS,IAAI;AAClD,QAAI,OAAO,MAAM,UAAU;AACzB,gBAAU,KAAK,GAAG,EAAE,aAAa,CAAC,CAAC;AAAA,IACrC;AACA,QAAI,EAAE,aAAa,WAAW;AAC5B,aAAO;AAAA,IACT,OAAO;AACL,YAAM,MAAM,CAAC,GAAG;AAChB,qBAAe,GAAG,GAAG;AACrB,YAAM,IAAI,CAAC;AAAA,IACb;AAAA,EACF;AACA,SAAO,IAAI,KAAK,SAAS;AAC3B,GA5B2B;AA6B3B,IAAI,iBAAiB,wBAAC,KAAK,WAAW;AACpC,QAAM,QAAQ,IAAI,OAAO,QAAQ;AACjC,MAAI,UAAU,IAAI;AAChB,WAAO,CAAC,KAAK;AACb;AAAA,EACF;AACA,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY;AAChB,OAAK,QAAQ,OAAO,QAAQ,IAAI,QAAQ,SAAS;AAC/C,YAAQ,IAAI,WAAW,KAAK,GAAG;AAAA,MAC7B,KAAK;AACH,iBAAS;AACT;AAAA,MACF,KAAK;AACH,iBAAS;AACT;AAAA,MACF,KAAK;AACH,iBAAS;AACT;AAAA,MACF,KAAK;AACH,iBAAS;AACT;AAAA,MACF,KAAK;AACH,iBAAS;AACT;AAAA,MACF;AACE;AAAA,IACJ;AACA,WAAO,CAAC,KAAK,IAAI,UAAU,WAAW,KAAK,IAAI;AAC/C,gBAAY,QAAQ;AAAA,EACtB;AACA,SAAO,CAAC,KAAK,IAAI,UAAU,WAAW,KAAK;AAC7C,GAjCqB;AAkCrB,IAAI,sBAAsB,wBAAC,QAAQ;AACjC,QAAM,YAAY,IAAI;AACtB,MAAI,CAAC,WAAW,QAAQ;AACtB,WAAO;AAAA,EACT;AACA,QAAM,SAAS,CAAC,GAAG;AACnB,QAAMC,WAAU,CAAC;AACjB,YAAU,QAAQ,CAAC,MAAM,EAAE,EAAE,OAAO,yBAAyB,WAAW,QAAQ,SAAAA,SAAQ,CAAC,CAAC;AAC1F,SAAO,OAAO,CAAC;AACjB,GAT0B;AAU1B,IAAI,kBAAkB,8BAAO,KAAK,OAAO,mBAAmBA,UAAS,WAAW;AAC9E,MAAI,OAAO,QAAQ,YAAY,EAAE,eAAe,SAAS;AACvD,QAAI,EAAE,eAAe,UAAU;AAC7B,YAAM,IAAI,SAAS;AAAA,IACrB;AACA,QAAI,eAAe,SAAS;AAC1B,YAAM,MAAM;AAAA,IACd;AAAA,EACF;AACA,QAAM,YAAY,IAAI;AACtB,MAAI,CAAC,WAAW,QAAQ;AACtB,WAAO,QAAQ,QAAQ,GAAG;AAAA,EAC5B;AACA,MAAI,QAAQ;AACV,WAAO,CAAC,KAAK;AAAA,EACf,OAAO;AACL,aAAS,CAAC,GAAG;AAAA,EACf;AACA,QAAM,SAAS,QAAQ,IAAI,UAAU,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,QAAQ,SAAAA,SAAQ,CAAC,CAAC,CAAC,EAAE;AAAA,IAC9E,CAAC,QAAQ,QAAQ;AAAA,MACf,IAAI,OAAO,OAAO,EAAE,IAAI,CAAC,SAAS,gBAAgB,MAAM,OAAO,OAAOA,UAAS,MAAM,CAAC;AAAA,IACxF,EAAE,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,EACxB;AACA,MAAI,mBAAmB;AACrB,WAAO,IAAI,MAAM,QAAQ,SAAS;AAAA,EACpC,OAAO;AACL,WAAO;AAAA,EACT;AACF,GA5BsB;;;ACnFtB,IAAI,aAAa;AACjB,IAAI,wBAAwB,wBAAC,aAAa,YAAY;AACpD,SAAO;AAAA,IACL,gBAAgB;AAAA,IAChB,GAAG;AAAA,EACL;AACF,GAL4B;AAM5B,IAAI,UAAU,MAAM;AAAA,EAVpB,OAUoB;AAAA;AAAA;AAAA,EAClB;AAAA,EACA;AAAA,EACA,MAAM,CAAC;AAAA,EACP;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,KAAK,SAAS;AACxB,SAAK,cAAc;AACnB,QAAI,SAAS;AACX,WAAK,gBAAgB,QAAQ;AAC7B,WAAK,MAAM,QAAQ;AACnB,WAAK,mBAAmB,QAAQ;AAChC,WAAK,QAAQ,QAAQ;AACrB,WAAK,eAAe,QAAQ;AAAA,IAC9B;AAAA,EACF;AAAA,EACA,IAAI,MAAM;AACR,SAAK,SAAS,IAAI,YAAY,KAAK,aAAa,KAAK,OAAO,KAAK,YAAY;AAC7E,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,QAAQ;AACV,QAAI,KAAK,iBAAiB,iBAAiB,KAAK,eAAe;AAC7D,aAAO,KAAK;AAAA,IACd,OAAO;AACL,YAAM,MAAM,gCAAgC;AAAA,IAC9C;AAAA,EACF;AAAA,EACA,IAAI,eAAe;AACjB,QAAI,KAAK,eAAe;AACtB,aAAO,KAAK;AAAA,IACd,OAAO;AACL,YAAM,MAAM,sCAAsC;AAAA,IACpD;AAAA,EACF;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,SAAS,IAAI,SAAS,MAAM;AAAA,MACtC,SAAS,KAAK,qBAAqB,IAAI,QAAQ;AAAA,IACjD,CAAC;AAAA,EACH;AAAA,EACA,IAAI,IAAI,MAAM;AACZ,QAAI,KAAK,QAAQ,MAAM;AACrB,aAAO,IAAI,SAAS,KAAK,MAAM,IAAI;AACnC,iBAAW,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,QAAQ,QAAQ,GAAG;AAChD,YAAI,MAAM,gBAAgB;AACxB;AAAA,QACF;AACA,YAAI,MAAM,cAAc;AACtB,gBAAM,UAAU,KAAK,KAAK,QAAQ,aAAa;AAC/C,eAAK,QAAQ,OAAO,YAAY;AAChC,qBAAW,UAAU,SAAS;AAC5B,iBAAK,QAAQ,OAAO,cAAc,MAAM;AAAA,UAC1C;AAAA,QACF,OAAO;AACL,eAAK,QAAQ,IAAI,GAAG,CAAC;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AACA,SAAK,OAAO;AACZ,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,SAAS,2BAAI,SAAS;AACpB,SAAK,cAAc,CAAC,YAAY,KAAK,KAAK,OAAO;AACjD,WAAO,KAAK,UAAU,GAAG,IAAI;AAAA,EAC/B,GAHS;AAAA,EAIT,YAAY,wBAAC,WAAW,KAAK,UAAU,QAA3B;AAAA,EACZ,YAAY,6BAAM,KAAK,SAAX;AAAA,EACZ,cAAc,wBAAC,aAAa;AAC1B,SAAK,YAAY;AAAA,EACnB,GAFc;AAAA,EAGd,SAAS,wBAAC,MAAM,OAAO,YAAY;AACjC,QAAI,KAAK,WAAW;AAClB,WAAK,OAAO,IAAI,SAAS,KAAK,KAAK,MAAM,KAAK,IAAI;AAAA,IACpD;AACA,UAAM,UAAU,KAAK,OAAO,KAAK,KAAK,UAAU,KAAK,qBAAqB,IAAI,QAAQ;AACtF,QAAI,UAAU,QAAQ;AACpB,cAAQ,OAAO,IAAI;AAAA,IACrB,WAAW,SAAS,QAAQ;AAC1B,cAAQ,OAAO,MAAM,KAAK;AAAA,IAC5B,OAAO;AACL,cAAQ,IAAI,MAAM,KAAK;AAAA,IACzB;AAAA,EACF,GAZS;AAAA,EAaT,SAAS,wBAAC,WAAW;AACnB,SAAK,UAAU;AAAA,EACjB,GAFS;AAAA,EAGT,MAAM,wBAAC,KAAK,UAAU;AACpB,SAAK,SAAyB,oBAAI,IAAI;AACtC,SAAK,KAAK,IAAI,KAAK,KAAK;AAAA,EAC1B,GAHM;AAAA,EAIN,MAAM,wBAAC,QAAQ;AACb,WAAO,KAAK,OAAO,KAAK,KAAK,IAAI,GAAG,IAAI;AAAA,EAC1C,GAFM;AAAA,EAGN,IAAI,MAAM;AACR,QAAI,CAAC,KAAK,MAAM;AACd,aAAO,CAAC;AAAA,IACV;AACA,WAAO,OAAO,YAAY,KAAK,IAAI;AAAA,EACrC;AAAA,EACA,aAAa,MAAM,KAAK,SAAS;AAC/B,UAAM,kBAAkB,KAAK,OAAO,IAAI,QAAQ,KAAK,KAAK,OAAO,IAAI,KAAK,oBAAoB,IAAI,QAAQ;AAC1G,QAAI,OAAO,QAAQ,YAAY,aAAa,KAAK;AAC/C,YAAM,aAAa,IAAI,mBAAmB,UAAU,IAAI,UAAU,IAAI,QAAQ,IAAI,OAAO;AACzF,iBAAW,CAAC,KAAK,KAAK,KAAK,YAAY;AACrC,YAAI,IAAI,YAAY,MAAM,cAAc;AACtC,0BAAgB,OAAO,KAAK,KAAK;AAAA,QACnC,OAAO;AACL,0BAAgB,IAAI,KAAK,KAAK;AAAA,QAChC;AAAA,MACF;AAAA,IACF;AACA,QAAI,SAAS;AACX,iBAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,OAAO,GAAG;AAC5C,YAAI,OAAO,MAAM,UAAU;AACzB,0BAAgB,IAAI,GAAG,CAAC;AAAA,QAC1B,OAAO;AACL,0BAAgB,OAAO,CAAC;AACxB,qBAAW,MAAM,GAAG;AAClB,4BAAgB,OAAO,GAAG,EAAE;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,UAAM,SAAS,OAAO,QAAQ,WAAW,MAAM,KAAK,UAAU,KAAK;AACnE,WAAO,IAAI,SAAS,MAAM,EAAE,QAAQ,SAAS,gBAAgB,CAAC;AAAA,EAChE;AAAA,EACA,cAAc,2BAAI,SAAS,KAAK,aAAa,GAAG,IAAI,GAAtC;AAAA,EACd,OAAO,wBAAC,MAAM,KAAK,YAAY,KAAK,aAAa,MAAM,KAAK,OAAO,GAA5D;AAAA,EACP,OAAO,wBAAC,MAAM,KAAK,YAAY;AAC7B,WAAO,CAAC,KAAK,oBAAoB,CAAC,KAAK,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,YAAY,IAAI,SAAS,IAAI,IAAI,KAAK;AAAA,MAChH;AAAA,MACA;AAAA,MACA,sBAAsB,YAAY,OAAO;AAAA,IAC3C;AAAA,EACF,GANO;AAAA,EAOP,OAAO,wBAAC,QAAQ,KAAK,YAAY;AAC/B,WAAO,KAAK;AAAA,MACV,KAAK,UAAU,MAAM;AAAA,MACrB;AAAA,MACA,sBAAsB,oBAAoB,OAAO;AAAA,IACnD;AAAA,EACF,GANO;AAAA,EAOP,OAAO,wBAACC,OAAM,KAAK,YAAY;AAC7B,UAAM,MAAM,wBAACC,WAAU,KAAK,aAAaA,QAAO,KAAK,sBAAsB,4BAA4B,OAAO,CAAC,GAAnG;AACZ,WAAO,OAAOD,UAAS,WAAW,gBAAgBA,OAAM,yBAAyB,WAAW,OAAO,CAAC,CAAC,EAAE,KAAK,GAAG,IAAI,IAAIA,KAAI;AAAA,EAC7H,GAHO;AAAA,EAIP,WAAW,wBAAC,UAAU,WAAW;AAC/B,UAAM,iBAAiB,OAAO,QAAQ;AACtC,SAAK;AAAA,MACH;AAAA,MACA,CAAC,eAAe,KAAK,cAAc,IAAI,iBAAiB,UAAU,cAAc;AAAA,IAClF;AACA,WAAO,KAAK,YAAY,MAAM,UAAU,GAAG;AAAA,EAC7C,GAPW;AAAA,EAQX,WAAW,6BAAM;AACf,SAAK,qBAAqB,MAAM,IAAI,SAAS;AAC7C,WAAO,KAAK,iBAAiB,IAAI;AAAA,EACnC,GAHW;AAIb;;;AChLA,IAAI,kBAAkB;AACtB,IAAI,4BAA4B;AAChC,IAAI,UAAU,CAAC,OAAO,QAAQ,OAAO,UAAU,WAAW,OAAO;AACjE,IAAI,mCAAmC;AACvC,IAAI,uBAAuB,cAAc,MAAM;AAAA,EAL/C,OAK+C;AAAA;AAAA;AAC/C;;;ACLA,IAAI,mBAAmB;;;ACKvB,IAAI,kBAAkB,wBAAC,MAAM;AAC3B,SAAO,EAAE,KAAK,iBAAiB,GAAG;AACpC,GAFsB;AAGtB,IAAI,eAAe,wBAAC,KAAK,MAAM;AAC7B,MAAI,iBAAiB,KAAK;AACxB,UAAM,MAAM,IAAI,YAAY;AAC5B,WAAO,EAAE,YAAY,IAAI,MAAM,GAAG;AAAA,EACpC;AACA,UAAQ,MAAM,GAAG;AACjB,SAAO,EAAE,KAAK,yBAAyB,GAAG;AAC5C,GAPmB;AAQnB,IAAI,OAAO,MAAM;AAAA,EAjBjB,OAiBiB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,SAAS,CAAC;AAAA,EACV,YAAY,UAAU,CAAC,GAAG;AACxB,UAAM,aAAa,CAAC,GAAG,SAAS,yBAAyB;AACzD,eAAW,QAAQ,CAAC,WAAW;AAC7B,WAAK,MAAM,IAAI,CAAC,UAAU,SAAS;AACjC,YAAI,OAAO,UAAU,UAAU;AAC7B,eAAK,QAAQ;AAAA,QACf,OAAO;AACL,eAAK,UAAU,QAAQ,KAAK,OAAO,KAAK;AAAA,QAC1C;AACA,aAAK,QAAQ,CAAC,YAAY;AACxB,eAAK,UAAU,QAAQ,KAAK,OAAO,OAAO;AAAA,QAC5C,CAAC;AACD,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,SAAK,KAAK,CAAC,QAAQ,SAAS,aAAa;AACvC,iBAAW,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG;AAC7B,aAAK,QAAQ;AACb,mBAAW,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG;AAC/B,mBAAS,IAAI,CAAC,YAAY;AACxB,iBAAK,UAAU,EAAE,YAAY,GAAG,KAAK,OAAO,OAAO;AAAA,UACrD,CAAC;AAAA,QACH;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,SAAK,MAAM,CAAC,SAAS,aAAa;AAChC,UAAI,OAAO,SAAS,UAAU;AAC5B,aAAK,QAAQ;AAAA,MACf,OAAO;AACL,aAAK,QAAQ;AACb,iBAAS,QAAQ,IAAI;AAAA,MACvB;AACA,eAAS,QAAQ,CAAC,YAAY;AAC5B,aAAK,UAAU,iBAAiB,KAAK,OAAO,OAAO;AAAA,MACrD,CAAC;AACD,aAAO;AAAA,IACT;AACA,UAAM,EAAE,QAAQ,GAAG,qBAAqB,IAAI;AAC5C,WAAO,OAAO,MAAM,oBAAoB;AACxC,SAAK,UAAU,UAAU,OAAO,QAAQ,WAAW,UAAU;AAAA,EAC/D;AAAA,EACA,SAAS;AACP,UAAM,QAAQ,IAAI,KAAK;AAAA,MACrB,QAAQ,KAAK;AAAA,MACb,SAAS,KAAK;AAAA,IAChB,CAAC;AACD,UAAM,eAAe,KAAK;AAC1B,UAAM,mBAAmB,KAAK;AAC9B,UAAM,SAAS,KAAK;AACpB,WAAO;AAAA,EACT;AAAA,EACA,mBAAmB;AAAA,EACnB,eAAe;AAAA,EACf,MAAM,MAAME,MAAK;AACf,UAAM,SAAS,KAAK,SAAS,IAAI;AACjC,IAAAA,KAAI,OAAO,IAAI,CAAC,MAAM;AACpB,UAAI;AACJ,UAAIA,KAAI,iBAAiB,cAAc;AACrC,kBAAU,EAAE;AAAA,MACd,OAAO;AACL,kBAAU,8BAAO,GAAG,UAAU,MAAM,QAAQ,CAAC,GAAGA,KAAI,YAAY,EAAE,GAAG,MAAM,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,KAAtF;AACV,gBAAQ,gBAAgB,IAAI,EAAE;AAAA,MAChC;AACA,aAAO,UAAU,EAAE,QAAQ,EAAE,MAAM,OAAO;AAAA,IAC5C,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,SAAS,MAAM;AACb,UAAM,SAAS,KAAK,OAAO;AAC3B,WAAO,YAAY,UAAU,KAAK,WAAW,IAAI;AACjD,WAAO;AAAA,EACT;AAAA,EACA,UAAU,wBAAC,YAAY;AACrB,SAAK,eAAe;AACpB,WAAO;AAAA,EACT,GAHU;AAAA,EAIV,WAAW,wBAAC,YAAY;AACtB,SAAK,mBAAmB;AACxB,WAAO;AAAA,EACT,GAHW;AAAA,EAIX,MAAM,MAAM,oBAAoB,SAAS;AACvC,QAAI;AACJ,QAAI;AACJ,QAAI,SAAS;AACX,UAAI,OAAO,YAAY,YAAY;AACjC,wBAAgB;AAAA,MAClB,OAAO;AACL,wBAAgB,QAAQ;AACxB,YAAI,QAAQ,mBAAmB,OAAO;AACpC,2BAAiB,wBAAC,YAAY,SAAb;AAAA,QACnB,OAAO;AACL,2BAAiB,QAAQ;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AACA,UAAM,aAAa,gBAAgB,CAAC,MAAM;AACxC,YAAM,WAAW,cAAc,CAAC;AAChC,aAAO,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AAAA,IACvD,IAAI,CAAC,MAAM;AACT,UAAI,mBAAmB;AACvB,UAAI;AACF,2BAAmB,EAAE;AAAA,MACvB,QAAQ;AAAA,MACR;AACA,aAAO,CAAC,EAAE,KAAK,gBAAgB;AAAA,IACjC;AACA,wBAAoB,MAAM;AACxB,YAAM,aAAa,UAAU,KAAK,WAAW,IAAI;AACjD,YAAM,mBAAmB,eAAe,MAAM,IAAI,WAAW;AAC7D,aAAO,CAAC,YAAY;AAClB,cAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAI,WAAW,IAAI,SAAS,MAAM,gBAAgB,KAAK;AACvD,eAAO,IAAI,QAAQ,KAAK,OAAO;AAAA,MACjC;AAAA,IACF,GAAG;AACH,UAAM,UAAU,8BAAO,GAAG,SAAS;AACjC,YAAM,MAAM,MAAM,mBAAmB,eAAe,EAAE,IAAI,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC;AAChF,UAAI,KAAK;AACP,eAAO;AAAA,MACT;AACA,YAAM,KAAK;AAAA,IACb,GANgB;AAOhB,SAAK,UAAU,iBAAiB,UAAU,MAAM,GAAG,GAAG,OAAO;AAC7D,WAAO;AAAA,EACT;AAAA,EACA,UAAU,QAAQ,MAAM,SAAS;AAC/B,aAAS,OAAO,YAAY;AAC5B,WAAO,UAAU,KAAK,WAAW,IAAI;AACrC,UAAM,IAAI,EAAE,UAAU,KAAK,WAAW,MAAM,QAAQ,QAAQ;AAC5D,SAAK,OAAO,IAAI,QAAQ,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C,SAAK,OAAO,KAAK,CAAC;AAAA,EACpB;AAAA,EACA,aAAa,KAAK,GAAG;AACnB,QAAI,eAAe,OAAO;AACxB,aAAO,KAAK,aAAa,KAAK,CAAC;AAAA,IACjC;AACA,UAAM;AAAA,EACR;AAAA,EACA,UAAU,SAAS,cAAc,KAAK,QAAQ;AAC5C,QAAI,WAAW,QAAQ;AACrB,cAAQ,YAAY,IAAI,SAAS,MAAM,MAAM,KAAK,UAAU,SAAS,cAAc,KAAK,KAAK,CAAC,GAAG;AAAA,IACnG;AACA,UAAM,OAAO,KAAK,QAAQ,SAAS,EAAE,IAAI,CAAC;AAC1C,UAAM,cAAc,KAAK,OAAO,MAAM,QAAQ,IAAI;AAClD,UAAM,IAAI,IAAI,QAAQ,SAAS;AAAA,MAC7B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,iBAAiB,KAAK;AAAA,IACxB,CAAC;AACD,QAAI,YAAY,CAAC,EAAE,WAAW,GAAG;AAC/B,UAAI;AACJ,UAAI;AACF,cAAM,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,YAAY;AAC3C,YAAE,MAAM,MAAM,KAAK,iBAAiB,CAAC;AAAA,QACvC,CAAC;AAAA,MACH,SAAS,KAAK;AACZ,eAAO,KAAK,aAAa,KAAK,CAAC;AAAA,MACjC;AACA,aAAO,eAAe,UAAU,IAAI;AAAA,QAClC,CAACC,cAAaA,cAAa,EAAE,YAAY,EAAE,MAAM,KAAK,iBAAiB,CAAC;AAAA,MAC1E,EAAE,MAAM,CAAC,QAAQ,KAAK,aAAa,KAAK,CAAC,CAAC,IAAI,OAAO,KAAK,iBAAiB,CAAC;AAAA,IAC9E;AACA,UAAM,WAAW,QAAQ,YAAY,CAAC,GAAG,KAAK,cAAc,KAAK,gBAAgB;AACjF,YAAQ,YAAY;AAClB,UAAI;AACF,cAAMC,WAAU,MAAM,SAAS,CAAC;AAChC,YAAI,CAACA,SAAQ,WAAW;AACtB,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AACA,eAAOA,SAAQ;AAAA,MACjB,SAAS,KAAK;AACZ,eAAO,KAAK,aAAa,KAAK,CAAC;AAAA,MACjC;AAAA,IACF,GAAG;AAAA,EACL;AAAA,EACA,QAAQ,wBAAC,YAAY,SAAS;AAC5B,WAAO,KAAK,UAAU,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,QAAQ,MAAM;AAAA,EACjE,GAFQ;AAAA,EAGR,UAAU,wBAACC,QAAO,aAAa,KAAK,iBAAiB;AACnD,QAAIA,kBAAiB,SAAS;AAC5B,aAAO,KAAK,MAAM,cAAc,IAAI,QAAQA,QAAO,WAAW,IAAIA,QAAO,KAAK,YAAY;AAAA,IAC5F;AACA,IAAAA,SAAQA,OAAM,SAAS;AACvB,WAAO,KAAK;AAAA,MACV,IAAI;AAAA,QACF,eAAe,KAAKA,MAAK,IAAIA,SAAQ,mBAAmB,UAAU,KAAKA,MAAK,CAAC;AAAA,QAC7E;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF,GAbU;AAAA,EAcV,OAAO,6BAAM;AACX,qBAAiB,SAAS,CAAC,UAAU;AACnC,YAAM,YAAY,KAAK,UAAU,MAAM,SAAS,OAAO,QAAQ,MAAM,QAAQ,MAAM,CAAC;AAAA,IACtF,CAAC;AAAA,EACH,GAJO;AAKT;;;ACzOA,IAAI,oBAAoB;AACxB,IAAI,4BAA4B;AAChC,IAAI,4BAA4B;AAChC,IAAI,aAAa,OAAO;AACxB,IAAI,kBAAkB,IAAI,IAAI,aAAa;AAC3C,SAAS,WAAW,GAAG,GAAG;AACxB,MAAI,EAAE,WAAW,GAAG;AAClB,WAAO,EAAE,WAAW,IAAI,IAAI,IAAI,KAAK,IAAI;AAAA,EAC3C;AACA,MAAI,EAAE,WAAW,GAAG;AAClB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,6BAA6B,MAAM,2BAA2B;AACtE,WAAO;AAAA,EACT,WAAW,MAAM,6BAA6B,MAAM,2BAA2B;AAC7E,WAAO;AAAA,EACT;AACA,MAAI,MAAM,mBAAmB;AAC3B,WAAO;AAAA,EACT,WAAW,MAAM,mBAAmB;AAClC,WAAO;AAAA,EACT;AACA,SAAO,EAAE,WAAW,EAAE,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE,SAAS,EAAE;AAC/D;AAlBS;AAmBT,IAAI,OAAO,MAAM;AAAA,EAzBjB,OAyBiB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA,YAA4B,uBAAO,OAAO,IAAI;AAAA,EAC9C,OAAO,QAAQ,OAAO,UAAUC,UAAS,oBAAoB;AAC3D,QAAI,OAAO,WAAW,GAAG;AACvB,UAAI,KAAK,WAAW,QAAQ;AAC1B,cAAM;AAAA,MACR;AACA,UAAI,oBAAoB;AACtB;AAAA,MACF;AACA,WAAK,SAAS;AACd;AAAA,IACF;AACA,UAAM,CAAC,OAAO,GAAG,UAAU,IAAI;AAC/B,UAAM,UAAU,UAAU,MAAM,WAAW,WAAW,IAAI,CAAC,IAAI,IAAI,yBAAyB,IAAI,CAAC,IAAI,IAAI,iBAAiB,IAAI,UAAU,OAAO,CAAC,IAAI,IAAI,yBAAyB,IAAI,MAAM,MAAM,6BAA6B;AAC9N,QAAI;AACJ,QAAI,SAAS;AACX,YAAM,OAAO,QAAQ,CAAC;AACtB,UAAI,YAAY,QAAQ,CAAC,KAAK;AAC9B,UAAI,QAAQ,QAAQ,CAAC,GAAG;AACtB,oBAAY,UAAU,QAAQ,0BAA0B,KAAK;AAC7D,YAAI,YAAY,KAAK,SAAS,GAAG;AAC/B,gBAAM;AAAA,QACR;AAAA,MACF;AACA,aAAO,KAAK,UAAU,SAAS;AAC/B,UAAI,CAAC,MAAM;AACT,YAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AAAA,UAC9B,CAAC,MAAM,MAAM,6BAA6B,MAAM;AAAA,QAClD,GAAG;AACD,gBAAM;AAAA,QACR;AACA,YAAI,oBAAoB;AACtB;AAAA,QACF;AACA,eAAO,KAAK,UAAU,SAAS,IAAI,IAAI,KAAK;AAC5C,YAAI,SAAS,IAAI;AACf,eAAK,YAAYA,SAAQ;AAAA,QAC3B;AAAA,MACF;AACA,UAAI,CAAC,sBAAsB,SAAS,IAAI;AACtC,iBAAS,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC;AAAA,MACtC;AAAA,IACF,OAAO;AACL,aAAO,KAAK,UAAU,KAAK;AAC3B,UAAI,CAAC,MAAM;AACT,YAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AAAA,UAC9B,CAAC,MAAM,EAAE,SAAS,KAAK,MAAM,6BAA6B,MAAM;AAAA,QAClE,GAAG;AACD,gBAAM;AAAA,QACR;AACA,YAAI,oBAAoB;AACtB;AAAA,QACF;AACA,eAAO,KAAK,UAAU,KAAK,IAAI,IAAI,KAAK;AAAA,MAC1C;AAAA,IACF;AACA,SAAK,OAAO,YAAY,OAAO,UAAUA,UAAS,kBAAkB;AAAA,EACtE;AAAA,EACA,iBAAiB;AACf,UAAM,YAAY,OAAO,KAAK,KAAK,SAAS,EAAE,KAAK,UAAU;AAC7D,UAAM,UAAU,UAAU,IAAI,CAAC,MAAM;AACnC,YAAM,IAAI,KAAK,UAAU,CAAC;AAC1B,cAAQ,OAAO,EAAE,cAAc,WAAW,IAAI,CAAC,KAAK,EAAE,SAAS,KAAK,gBAAgB,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,eAAe;AAAA,IAChI,CAAC;AACD,QAAI,OAAO,KAAK,WAAW,UAAU;AACnC,cAAQ,QAAQ,IAAI,KAAK,MAAM,EAAE;AAAA,IACnC;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO;AAAA,IACT;AACA,QAAI,QAAQ,WAAW,GAAG;AACxB,aAAO,QAAQ,CAAC;AAAA,IAClB;AACA,WAAO,QAAQ,QAAQ,KAAK,GAAG,IAAI;AAAA,EACrC;AACF;;;ACrGA,IAAI,OAAO,MAAM;AAAA,EAFjB,OAEiB;AAAA;AAAA;AAAA,EACf,WAAW,EAAE,UAAU,EAAE;AAAA,EACzB,QAAQ,IAAI,KAAK;AAAA,EACjB,OAAO,MAAM,OAAO,oBAAoB;AACtC,UAAM,aAAa,CAAC;AACpB,UAAM,SAAS,CAAC;AAChB,aAAS,IAAI,OAAO;AAClB,UAAI,WAAW;AACf,aAAO,KAAK,QAAQ,cAAc,CAAC,MAAM;AACvC,cAAM,OAAO,MAAM,CAAC;AACpB,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC;AACpB;AACA,mBAAW;AACX,eAAO;AAAA,MACT,CAAC;AACD,UAAI,CAAC,UAAU;AACb;AAAA,MACF;AAAA,IACF;AACA,UAAM,SAAS,KAAK,MAAM,0BAA0B,KAAK,CAAC;AAC1D,aAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAM,CAAC,IAAI,IAAI,OAAO,CAAC;AACvB,eAAS,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,YAAI,OAAO,CAAC,EAAE,QAAQ,IAAI,MAAM,IAAI;AAClC,iBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAChD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,SAAK,MAAM,OAAO,QAAQ,OAAO,YAAY,KAAK,UAAU,kBAAkB;AAC9E,WAAO;AAAA,EACT;AAAA,EACA,cAAc;AACZ,QAAI,SAAS,KAAK,MAAM,eAAe;AACvC,QAAI,WAAW,IAAI;AACjB,aAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAAA,IACtB;AACA,QAAI,eAAe;AACnB,UAAM,sBAAsB,CAAC;AAC7B,UAAM,sBAAsB,CAAC;AAC7B,aAAS,OAAO,QAAQ,yBAAyB,CAAC,GAAG,cAAc,eAAe;AAChF,UAAI,iBAAiB,QAAQ;AAC3B,4BAAoB,EAAE,YAAY,IAAI,OAAO,YAAY;AACzD,eAAO;AAAA,MACT;AACA,UAAI,eAAe,QAAQ;AACzB,4BAAoB,OAAO,UAAU,CAAC,IAAI,EAAE;AAC5C,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT,CAAC;AACD,WAAO,CAAC,IAAI,OAAO,IAAI,MAAM,EAAE,GAAG,qBAAqB,mBAAmB;AAAA,EAC5E;AACF;;;AC9CA,IAAI,aAAa,CAAC;AAClB,IAAI,cAAc,CAAC,MAAM,CAAC,GAAmB,uBAAO,OAAO,IAAI,CAAC;AAChE,IAAI,sBAAsC,uBAAO,OAAO,IAAI;AAC5D,SAAS,oBAAoB,MAAM;AACjC,SAAO,oBAAoB,IAAI,MAAM,IAAI;AAAA,IACvC,SAAS,MAAM,KAAK,IAAI,KAAK;AAAA,MAC3B;AAAA,MACA,CAAC,GAAG,aAAa,WAAW,KAAK,QAAQ,KAAK;AAAA,IAChD,CAAC;AAAA,EACH;AACF;AAPS;AAQT,SAAS,2BAA2B;AAClC,wBAAsC,uBAAO,OAAO,IAAI;AAC1D;AAFS;AAGT,SAAS,mCAAmC,QAAQ;AAClD,QAAM,OAAO,IAAI,KAAK;AACtB,QAAM,cAAc,CAAC;AACrB,MAAI,OAAO,WAAW,GAAG;AACvB,WAAO;AAAA,EACT;AACA,QAAM,2BAA2B,OAAO;AAAA,IACtC,CAAC,UAAU,CAAC,CAAC,SAAS,KAAK,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK;AAAA,EAChD,EAAE;AAAA,IACA,CAAC,CAAC,WAAW,KAAK,GAAG,CAAC,WAAW,KAAK,MAAM,YAAY,IAAI,YAAY,KAAK,MAAM,SAAS,MAAM;AAAA,EACpG;AACA,QAAM,YAA4B,uBAAO,OAAO,IAAI;AACpD,WAAS,IAAI,GAAG,IAAI,IAAI,MAAM,yBAAyB,QAAQ,IAAI,KAAK,KAAK;AAC3E,UAAM,CAAC,oBAAoB,MAAM,QAAQ,IAAI,yBAAyB,CAAC;AACvE,QAAI,oBAAoB;AACtB,gBAAU,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAmB,uBAAO,OAAO,IAAI,CAAC,CAAC,GAAG,UAAU;AAAA,IAChG,OAAO;AACL;AAAA,IACF;AACA,QAAI;AACJ,QAAI;AACF,mBAAa,KAAK,OAAO,MAAM,GAAG,kBAAkB;AAAA,IACtD,SAAS,GAAG;AACV,YAAM,MAAM,aAAa,IAAI,qBAAqB,IAAI,IAAI;AAAA,IAC5D;AACA,QAAI,oBAAoB;AACtB;AAAA,IACF;AACA,gBAAY,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,GAAG,UAAU,MAAM;AACjD,YAAM,gBAAgC,uBAAO,OAAO,IAAI;AACxD,oBAAc;AACd,aAAO,cAAc,GAAG,cAAc;AACpC,cAAM,CAAC,KAAK,KAAK,IAAI,WAAW,UAAU;AAC1C,sBAAc,GAAG,IAAI;AAAA,MACvB;AACA,aAAO,CAAC,GAAG,aAAa;AAAA,IAC1B,CAAC;AAAA,EACH;AACA,QAAM,CAAC,QAAQ,qBAAqB,mBAAmB,IAAI,KAAK,YAAY;AAC5E,WAAS,IAAI,GAAG,MAAM,YAAY,QAAQ,IAAI,KAAK,KAAK;AACtD,aAAS,IAAI,GAAG,OAAO,YAAY,CAAC,EAAE,QAAQ,IAAI,MAAM,KAAK;AAC3D,YAAMC,OAAM,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC;AACjC,UAAI,CAACA,MAAK;AACR;AAAA,MACF;AACA,YAAM,OAAO,OAAO,KAAKA,IAAG;AAC5B,eAAS,IAAI,GAAG,OAAO,KAAK,QAAQ,IAAI,MAAM,KAAK;AACjD,QAAAA,KAAI,KAAK,CAAC,CAAC,IAAI,oBAAoBA,KAAI,KAAK,CAAC,CAAC,CAAC;AAAA,MACjD;AAAA,IACF;AAAA,EACF;AACA,QAAM,aAAa,CAAC;AACpB,aAAW,KAAK,qBAAqB;AACnC,eAAW,CAAC,IAAI,YAAY,oBAAoB,CAAC,CAAC;AAAA,EACpD;AACA,SAAO,CAAC,QAAQ,YAAY,SAAS;AACvC;AAxDS;AAyDT,SAAS,eAAe,YAAY,MAAM;AACxC,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,EACT;AACA,aAAW,KAAK,OAAO,KAAK,UAAU,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM,GAAG;AAC3E,QAAI,oBAAoB,CAAC,EAAE,KAAK,IAAI,GAAG;AACrC,aAAO,CAAC,GAAG,WAAW,CAAC,CAAC;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AAVS;AAWT,IAAI,eAAe,MAAM;AAAA,EA3FzB,OA2FyB;AAAA;AAAA;AAAA,EACvB,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,cAAc;AACZ,SAAK,cAAc,EAAE,CAAC,eAAe,GAAmB,uBAAO,OAAO,IAAI,EAAE;AAC5E,SAAK,UAAU,EAAE,CAAC,eAAe,GAAmB,uBAAO,OAAO,IAAI,EAAE;AAAA,EAC1E;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,UAAM,aAAa,KAAK;AACxB,UAAM,SAAS,KAAK;AACpB,QAAI,CAAC,cAAc,CAAC,QAAQ;AAC1B,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,QAAI,CAAC,WAAW,MAAM,GAAG;AACvB;AACA,OAAC,YAAY,MAAM,EAAE,QAAQ,CAAC,eAAe;AAC3C,mBAAW,MAAM,IAAoB,uBAAO,OAAO,IAAI;AACvD,eAAO,KAAK,WAAW,eAAe,CAAC,EAAE,QAAQ,CAAC,MAAM;AACtD,qBAAW,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,WAAW,eAAe,EAAE,CAAC,CAAC;AAAA,QAC5D,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AACA,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA,IACT;AACA,UAAM,cAAc,KAAK,MAAM,MAAM,KAAK,CAAC,GAAG;AAC9C,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,YAAM,KAAK,oBAAoB,IAAI;AACnC,UAAI,WAAW,iBAAiB;AAC9B,eAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AACrC,qBAAW,CAAC,EAAE,IAAI,MAAM,eAAe,WAAW,CAAC,GAAG,IAAI,KAAK,eAAe,WAAW,eAAe,GAAG,IAAI,KAAK,CAAC;AAAA,QACvH,CAAC;AAAA,MACH,OAAO;AACL,mBAAW,MAAM,EAAE,IAAI,MAAM,eAAe,WAAW,MAAM,GAAG,IAAI,KAAK,eAAe,WAAW,eAAe,GAAG,IAAI,KAAK,CAAC;AAAA,MACjI;AACA,aAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,MAAM;AACrC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,KAAK,WAAW,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM;AACxC,eAAG,KAAK,CAAC,KAAK,WAAW,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,UAAU,CAAC;AAAA,UAC3D,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AACD,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,KAAK,OAAO,CAAC,CAAC,EAAE;AAAA,YACrB,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,UAAU,CAAC;AAAA,UAC9D;AAAA,QACF;AAAA,MACF,CAAC;AACD;AAAA,IACF;AACA,UAAM,QAAQ,uBAAuB,IAAI,KAAK,CAAC,IAAI;AACnD,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,QAAQ,MAAM,CAAC;AACrB,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAM;AACjC,YAAI,WAAW,mBAAmB,WAAW,GAAG;AAC9C,iBAAO,CAAC,EAAE,KAAK,MAAM;AAAA,YACnB,GAAG,eAAe,WAAW,CAAC,GAAG,KAAK,KAAK,eAAe,WAAW,eAAe,GAAG,KAAK,KAAK,CAAC;AAAA,UACpG;AACA,iBAAO,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,SAAS,aAAa,MAAM,IAAI,CAAC,CAAC;AAAA,QAC3D;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,6BAAyB;AACzB,UAAM,WAAW,KAAK,kBAAkB;AACxC,SAAK,QAAQ,CAAC,SAAS,UAAU;AAC/B,YAAM,UAAU,SAAS,OAAO,KAAK,SAAS,eAAe;AAC7D,YAAM,cAAc,QAAQ,CAAC,EAAE,KAAK;AACpC,UAAI,aAAa;AACf,eAAO;AAAA,MACT;AACA,YAAM,QAAQ,MAAM,MAAM,QAAQ,CAAC,CAAC;AACpC,UAAI,CAAC,OAAO;AACV,eAAO,CAAC,CAAC,GAAG,UAAU;AAAA,MACxB;AACA,YAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC;AACjC,aAAO,CAAC,QAAQ,CAAC,EAAE,KAAK,GAAG,KAAK;AAAA,IAClC;AACA,WAAO,KAAK,MAAM,QAAQ,IAAI;AAAA,EAChC;AAAA,EACA,oBAAoB;AAClB,UAAM,WAA2B,uBAAO,OAAO,IAAI;AACnD,WAAO,KAAK,KAAK,OAAO,EAAE,OAAO,OAAO,KAAK,KAAK,WAAW,CAAC,EAAE,QAAQ,CAAC,WAAW;AAClF,eAAS,MAAM,MAAM,KAAK,cAAc,MAAM;AAAA,IAChD,CAAC;AACD,SAAK,cAAc,KAAK,UAAU;AAClC,WAAO;AAAA,EACT;AAAA,EACA,cAAc,QAAQ;AACpB,UAAM,SAAS,CAAC;AAChB,QAAI,cAAc,WAAW;AAC7B,KAAC,KAAK,aAAa,KAAK,OAAO,EAAE,QAAQ,CAAC,MAAM;AAC9C,YAAM,WAAW,EAAE,MAAM,IAAI,OAAO,KAAK,EAAE,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;AAC9F,UAAI,SAAS,WAAW,GAAG;AACzB,wBAAgB;AAChB,eAAO,KAAK,GAAG,QAAQ;AAAA,MACzB,WAAW,WAAW,iBAAiB;AACrC,eAAO;AAAA,UACL,GAAG,OAAO,KAAK,EAAE,eAAe,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;AAAA,QACnF;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,CAAC,aAAa;AAChB,aAAO;AAAA,IACT,OAAO;AACL,aAAO,mCAAmC,MAAM;AAAA,IAClD;AAAA,EACF;AACF;;;ACxMA,IAAI,cAAc,MAAM;AAAA,EAFxB,OAEwB;AAAA;AAAA;AAAA,EACtB,OAAO;AAAA,EACP,WAAW,CAAC;AAAA,EACZ,UAAU,CAAC;AAAA,EACX,YAAY,MAAM;AAChB,SAAK,WAAW,KAAK;AAAA,EACvB;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AACA,SAAK,QAAQ,KAAK,CAAC,QAAQ,MAAM,OAAO,CAAC;AAAA,EAC3C;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM,aAAa;AAAA,IAC/B;AACA,UAAM,UAAU,KAAK;AACrB,UAAM,SAAS,KAAK;AACpB,UAAM,MAAM,QAAQ;AACpB,QAAI,IAAI;AACR,QAAI;AACJ,WAAO,IAAI,KAAK,KAAK;AACnB,YAAM,SAAS,QAAQ,CAAC;AACxB,UAAI;AACF,iBAAS,KAAK,GAAG,OAAO,OAAO,QAAQ,KAAK,MAAM,MAAM;AACtD,iBAAO,IAAI,GAAG,OAAO,EAAE,CAAC;AAAA,QAC1B;AACA,cAAM,OAAO,MAAM,QAAQ,IAAI;AAAA,MACjC,SAAS,GAAG;AACV,YAAI,aAAa,sBAAsB;AACrC;AAAA,QACF;AACA,cAAM;AAAA,MACR;AACA,WAAK,QAAQ,OAAO,MAAM,KAAK,MAAM;AACrC,WAAK,WAAW,CAAC,MAAM;AACvB,WAAK,UAAU;AACf;AAAA,IACF;AACA,QAAI,MAAM,KAAK;AACb,YAAM,IAAI,MAAM,aAAa;AAAA,IAC/B;AACA,SAAK,OAAO,iBAAiB,KAAK,aAAa,IAAI;AACnD,WAAO;AAAA,EACT;AAAA,EACA,IAAI,eAAe;AACjB,QAAI,KAAK,WAAW,KAAK,SAAS,WAAW,GAAG;AAC9C,YAAM,IAAI,MAAM,2CAA2C;AAAA,IAC7D;AACA,WAAO,KAAK,SAAS,CAAC;AAAA,EACxB;AACF;;;ACnDA,IAAI,cAA8B,uBAAO,OAAO,IAAI;AACpD,IAAIC,QAAO,MAAM;AAAA,EAJjB,OAIiB;AAAA;AAAA;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA,SAAS;AAAA,EACT,UAAU;AAAA,EACV,YAAY,QAAQ,SAAS,UAAU;AACrC,SAAK,YAAY,YAA4B,uBAAO,OAAO,IAAI;AAC/D,SAAK,WAAW,CAAC;AACjB,QAAI,UAAU,SAAS;AACrB,YAAM,IAAoB,uBAAO,OAAO,IAAI;AAC5C,QAAE,MAAM,IAAI,EAAE,SAAS,cAAc,CAAC,GAAG,OAAO,EAAE;AAClD,WAAK,WAAW,CAAC,CAAC;AAAA,IACpB;AACA,SAAK,YAAY,CAAC;AAAA,EACpB;AAAA,EACA,OAAO,QAAQ,MAAM,SAAS;AAC5B,SAAK,SAAS,EAAE,KAAK;AACrB,QAAI,UAAU;AACd,UAAM,QAAQ,iBAAiB,IAAI;AACnC,UAAM,eAAe,CAAC;AACtB,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,IAAI,MAAM,CAAC;AACjB,YAAM,QAAQ,MAAM,IAAI,CAAC;AACzB,YAAM,UAAU,WAAW,GAAG,KAAK;AACnC,YAAM,MAAM,MAAM,QAAQ,OAAO,IAAI,QAAQ,CAAC,IAAI;AAClD,UAAI,OAAO,QAAQ,WAAW;AAC5B,kBAAU,QAAQ,UAAU,GAAG;AAC/B,YAAI,SAAS;AACX,uBAAa,KAAK,QAAQ,CAAC,CAAC;AAAA,QAC9B;AACA;AAAA,MACF;AACA,cAAQ,UAAU,GAAG,IAAI,IAAIA,MAAK;AAClC,UAAI,SAAS;AACX,gBAAQ,UAAU,KAAK,OAAO;AAC9B,qBAAa,KAAK,QAAQ,CAAC,CAAC;AAAA,MAC9B;AACA,gBAAU,QAAQ,UAAU,GAAG;AAAA,IACjC;AACA,YAAQ,SAAS,KAAK;AAAA,MACpB,CAAC,MAAM,GAAG;AAAA,QACR;AAAA,QACA,cAAc,aAAa,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC;AAAA,QACjE,OAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAAA,EACA,gBAAgB,MAAM,QAAQ,YAAY,QAAQ;AAChD,UAAM,cAAc,CAAC;AACrB,aAAS,IAAI,GAAG,MAAM,KAAK,SAAS,QAAQ,IAAI,KAAK,KAAK;AACxD,YAAM,IAAI,KAAK,SAAS,CAAC;AACzB,YAAM,aAAa,EAAE,MAAM,KAAK,EAAE,eAAe;AACjD,YAAM,eAAe,CAAC;AACtB,UAAI,eAAe,QAAQ;AACzB,mBAAW,SAAyB,uBAAO,OAAO,IAAI;AACtD,oBAAY,KAAK,UAAU;AAC3B,YAAI,eAAe,eAAe,UAAU,WAAW,aAAa;AAClE,mBAAS,KAAK,GAAG,OAAO,WAAW,aAAa,QAAQ,KAAK,MAAM,MAAM;AACvE,kBAAM,MAAM,WAAW,aAAa,EAAE;AACtC,kBAAM,YAAY,aAAa,WAAW,KAAK;AAC/C,uBAAW,OAAO,GAAG,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,OAAO,GAAG,IAAI,WAAW,GAAG,KAAK,SAAS,GAAG;AACpG,yBAAa,WAAW,KAAK,IAAI;AAAA,UACnC;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,QAAQ,MAAM;AACnB,UAAM,cAAc,CAAC;AACrB,SAAK,UAAU;AACf,UAAM,UAAU;AAChB,QAAI,WAAW,CAAC,OAAO;AACvB,UAAM,QAAQ,UAAU,IAAI;AAC5B,UAAM,gBAAgB,CAAC;AACvB,aAAS,IAAI,GAAG,MAAM,MAAM,QAAQ,IAAI,KAAK,KAAK;AAChD,YAAM,OAAO,MAAM,CAAC;AACpB,YAAM,SAAS,MAAM,MAAM;AAC3B,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,OAAO,SAAS,QAAQ,IAAI,MAAM,KAAK;AACrD,cAAM,OAAO,SAAS,CAAC;AACvB,cAAM,WAAW,KAAK,UAAU,IAAI;AACpC,YAAI,UAAU;AACZ,mBAAS,UAAU,KAAK;AACxB,cAAI,QAAQ;AACV,gBAAI,SAAS,UAAU,GAAG,GAAG;AAC3B,0BAAY;AAAA,gBACV,GAAG,KAAK,gBAAgB,SAAS,UAAU,GAAG,GAAG,QAAQ,KAAK,OAAO;AAAA,cACvE;AAAA,YACF;AACA,wBAAY,KAAK,GAAG,KAAK,gBAAgB,UAAU,QAAQ,KAAK,OAAO,CAAC;AAAA,UAC1E,OAAO;AACL,sBAAU,KAAK,QAAQ;AAAA,UACzB;AAAA,QACF;AACA,iBAAS,IAAI,GAAG,OAAO,KAAK,UAAU,QAAQ,IAAI,MAAM,KAAK;AAC3D,gBAAM,UAAU,KAAK,UAAU,CAAC;AAChC,gBAAM,SAAS,KAAK,YAAY,cAAc,CAAC,IAAI,EAAE,GAAG,KAAK,QAAQ;AACrE,cAAI,YAAY,KAAK;AACnB,kBAAM,UAAU,KAAK,UAAU,GAAG;AAClC,gBAAI,SAAS;AACX,0BAAY,KAAK,GAAG,KAAK,gBAAgB,SAAS,QAAQ,KAAK,OAAO,CAAC;AACvE,sBAAQ,UAAU;AAClB,wBAAU,KAAK,OAAO;AAAA,YACxB;AACA;AAAA,UACF;AACA,cAAI,CAAC,MAAM;AACT;AAAA,UACF;AACA,gBAAM,CAAC,KAAK,MAAM,OAAO,IAAI;AAC7B,gBAAM,QAAQ,KAAK,UAAU,GAAG;AAChC,gBAAM,iBAAiB,MAAM,MAAM,CAAC,EAAE,KAAK,GAAG;AAC9C,cAAI,mBAAmB,QAAQ;AAC7B,kBAAM,IAAI,QAAQ,KAAK,cAAc;AACrC,gBAAI,GAAG;AACL,qBAAO,IAAI,IAAI,EAAE,CAAC;AAClB,0BAAY,KAAK,GAAG,KAAK,gBAAgB,OAAO,QAAQ,KAAK,SAAS,MAAM,CAAC;AAC7E,kBAAI,OAAO,KAAK,MAAM,SAAS,EAAE,QAAQ;AACvC,sBAAM,UAAU;AAChB,sBAAM,iBAAiB,EAAE,CAAC,EAAE,MAAM,IAAI,GAAG,UAAU;AACnD,sBAAM,iBAAiB,cAAc,cAAc,MAAM,CAAC;AAC1D,+BAAe,KAAK,KAAK;AAAA,cAC3B;AACA;AAAA,YACF;AAAA,UACF;AACA,cAAI,YAAY,QAAQ,QAAQ,KAAK,IAAI,GAAG;AAC1C,mBAAO,IAAI,IAAI;AACf,gBAAI,QAAQ;AACV,0BAAY,KAAK,GAAG,KAAK,gBAAgB,OAAO,QAAQ,QAAQ,KAAK,OAAO,CAAC;AAC7E,kBAAI,MAAM,UAAU,GAAG,GAAG;AACxB,4BAAY;AAAA,kBACV,GAAG,KAAK,gBAAgB,MAAM,UAAU,GAAG,GAAG,QAAQ,QAAQ,KAAK,OAAO;AAAA,gBAC5E;AAAA,cACF;AAAA,YACF,OAAO;AACL,oBAAM,UAAU;AAChB,wBAAU,KAAK,KAAK;AAAA,YACtB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,iBAAW,UAAU,OAAO,cAAc,MAAM,KAAK,CAAC,CAAC;AAAA,IACzD;AACA,QAAI,YAAY,SAAS,GAAG;AAC1B,kBAAY,KAAK,CAAC,GAAG,MAAM;AACzB,eAAO,EAAE,QAAQ,EAAE;AAAA,MACrB,CAAC;AAAA,IACH;AACA,WAAO,CAAC,YAAY,IAAI,CAAC,EAAE,SAAS,OAAO,MAAM,CAAC,SAAS,MAAM,CAAC,CAAC;AAAA,EACrE;AACF;;;AC3JA,IAAI,aAAa,MAAM;AAAA,EAHvB,OAGuB;AAAA;AAAA;AAAA,EACrB,OAAO;AAAA,EACP;AAAA,EACA,cAAc;AACZ,SAAK,QAAQ,IAAIC,MAAK;AAAA,EACxB;AAAA,EACA,IAAI,QAAQ,MAAM,SAAS;AACzB,UAAM,UAAU,uBAAuB,IAAI;AAC3C,QAAI,SAAS;AACX,eAAS,IAAI,GAAG,MAAM,QAAQ,QAAQ,IAAI,KAAK,KAAK;AAClD,aAAK,MAAM,OAAO,QAAQ,QAAQ,CAAC,GAAG,OAAO;AAAA,MAC/C;AACA;AAAA,IACF;AACA,SAAK,MAAM,OAAO,QAAQ,MAAM,OAAO;AAAA,EACzC;AAAA,EACA,MAAM,QAAQ,MAAM;AAClB,WAAO,KAAK,MAAM,OAAO,QAAQ,IAAI;AAAA,EACvC;AACF;;;ACjBA,IAAIC,QAAO,cAAc,KAAS;AAAA,EALlC,OAKkC;AAAA;AAAA;AAAA,EAChC,YAAY,UAAU,CAAC,GAAG;AACxB,UAAM,OAAO;AACb,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAAA,MAC9C,SAAS,CAAC,IAAI,aAAa,GAAG,IAAI,WAAW,CAAC;AAAA,IAChD,CAAC;AAAA,EACH;AACF;;;ACIA,IAAI,gBAAgB,gCAAS,GAAG,GAAG;AACjC,kBAAgB,OAAO,kBAClB,EAAE,WAAW,CAAC,EAAE,aAAa,SAAS,SAAUC,IAAGC,IAAG;AAAE,IAAAD,GAAE,YAAYC;AAAA,EAAG,KAC1E,SAAUD,IAAGC,IAAG;AAAE,aAAS,KAAKA,GAAG,KAAI,OAAO,UAAU,eAAe,KAAKA,IAAG,CAAC,EAAG,CAAAD,GAAE,CAAC,IAAIC,GAAE,CAAC;AAAA,EAAG;AACpG,SAAO,cAAc,GAAG,CAAC;AAC3B,GALoB;AAOb,SAAS,UAAU,GAAG,GAAG;AAC9B,MAAI,OAAO,MAAM,cAAc,MAAM;AACjC,UAAM,IAAI,UAAU,yBAAyB,OAAO,CAAC,IAAI,+BAA+B;AAC5F,gBAAc,GAAG,CAAC;AAClB,WAAS,KAAK;AAAE,SAAK,cAAc;AAAA,EAAG;AAA7B;AACT,IAAE,YAAY,MAAM,OAAO,OAAO,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,WAAW,IAAI,GAAG;AACpF;AANgB;AA2FT,SAAS,UAAU,SAAS,YAAY,GAAG,WAAW;AAC3D,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAG,CAAC;AAAA,EAAG;AAAlG;AACT,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAAjF;AACT,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAApF;AACT,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAApG;AACT,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACH;AARgB;AAUT,SAAS,YAAY,SAAS,MAAM;AACzC,MAAI,IAAI,EAAE,OAAO,GAAG,MAAM,kCAAW;AAAE,QAAI,EAAE,CAAC,IAAI,EAAG,OAAM,EAAE,CAAC;AAAG,WAAO,EAAE,CAAC;AAAA,EAAG,GAApD,SAAuD,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,IAAI,OAAO,QAAQ,OAAO,aAAa,aAAa,WAAW,QAAQ,SAAS;AAC/L,SAAO,EAAE,OAAO,KAAK,CAAC,GAAG,EAAE,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,QAAQ,IAAI,KAAK,CAAC,GAAG,OAAO,WAAW,eAAe,EAAE,OAAO,QAAQ,IAAI,WAAW;AAAE,WAAO;AAAA,EAAM,IAAI;AAC1J,WAAS,KAAK,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,KAAK,CAAC,GAAG,CAAC,CAAC;AAAA,IAAG;AAAA,EAAG;AAAxD;AACT,WAAS,KAAK,IAAI;AACd,QAAI,EAAG,OAAM,IAAI,UAAU,iCAAiC;AAC5D,WAAO,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,IAAI,KAAK,EAAG,KAAI;AAC1C,UAAI,IAAI,GAAG,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,OAAO,IAAI,EAAE,QAAQ,MAAM,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,KAAM,QAAO;AAC3J,UAAI,IAAI,GAAG,EAAG,MAAK,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK;AACtC,cAAQ,GAAG,CAAC,GAAG;AAAA,QACX,KAAK;AAAA,QAAG,KAAK;AAAG,cAAI;AAAI;AAAA,QACxB,KAAK;AAAG,YAAE;AAAS,iBAAO,EAAE,OAAO,GAAG,CAAC,GAAG,MAAM,MAAM;AAAA,QACtD,KAAK;AAAG,YAAE;AAAS,cAAI,GAAG,CAAC;AAAG,eAAK,CAAC,CAAC;AAAG;AAAA,QACxC,KAAK;AAAG,eAAK,EAAE,IAAI,IAAI;AAAG,YAAE,KAAK,IAAI;AAAG;AAAA,QACxC;AACI,cAAI,EAAE,IAAI,EAAE,MAAM,IAAI,EAAE,SAAS,KAAK,EAAE,EAAE,SAAS,CAAC,OAAO,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI;AAAE,gBAAI;AAAG;AAAA,UAAU;AAC3G,cAAI,GAAG,CAAC,MAAM,MAAM,CAAC,KAAM,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,IAAK;AAAE,cAAE,QAAQ,GAAG,CAAC;AAAG;AAAA,UAAO;AACrF,cAAI,GAAG,CAAC,MAAM,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,gBAAI;AAAI;AAAA,UAAO;AACpE,cAAI,KAAK,EAAE,QAAQ,EAAE,CAAC,GAAG;AAAE,cAAE,QAAQ,EAAE,CAAC;AAAG,cAAE,IAAI,KAAK,EAAE;AAAG;AAAA,UAAO;AAClE,cAAI,EAAE,CAAC,EAAG,GAAE,IAAI,IAAI;AACpB,YAAE,KAAK,IAAI;AAAG;AAAA,MACtB;AACA,WAAK,KAAK,KAAK,SAAS,CAAC;AAAA,IAC7B,SAAS,GAAG;AAAE,WAAK,CAAC,GAAG,CAAC;AAAG,UAAI;AAAA,IAAG,UAAE;AAAU,UAAI,IAAI;AAAA,IAAG;AACzD,QAAI,GAAG,CAAC,IAAI,EAAG,OAAM,GAAG,CAAC;AAAG,WAAO,EAAE,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,QAAQ,MAAM,KAAK;AAAA,EACnF;AArBS;AAsBX;AA1BgB;AA4CT,SAAS,SAAS,GAAG;AAC1B,MAAI,IAAI,OAAO,WAAW,cAAc,OAAO,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,IAAI;AAC5E,MAAI,EAAG,QAAO,EAAE,KAAK,CAAC;AACtB,MAAI,KAAK,OAAO,EAAE,WAAW,SAAU,QAAO;AAAA,IAC1C,MAAM,kCAAY;AACd,UAAI,KAAK,KAAK,EAAE,OAAQ,KAAI;AAC5B,aAAO,EAAE,OAAO,KAAK,EAAE,GAAG,GAAG,MAAM,CAAC,EAAE;AAAA,IAC1C,GAHM;AAAA,EAIV;AACA,QAAM,IAAI,UAAU,IAAI,4BAA4B,iCAAiC;AACvF;AAVgB;AAYT,SAAS,OAAO,GAAG,GAAG;AAC3B,MAAI,IAAI,OAAO,WAAW,cAAc,EAAE,OAAO,QAAQ;AACzD,MAAI,CAAC,EAAG,QAAO;AACf,MAAI,IAAI,EAAE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG;AAC/B,MAAI;AACA,YAAQ,MAAM,UAAU,MAAM,MAAM,EAAE,IAAI,EAAE,KAAK,GAAG,KAAM,IAAG,KAAK,EAAE,KAAK;AAAA,EAC7E,SACO,OAAO;AAAE,QAAI,EAAE,MAAa;AAAA,EAAG,UACtC;AACI,QAAI;AACA,UAAI,KAAK,CAAC,EAAE,SAAS,IAAI,EAAE,QAAQ,GAAI,GAAE,KAAK,CAAC;AAAA,IACnD,UACA;AAAU,UAAI,EAAG,OAAM,EAAE;AAAA,IAAO;AAAA,EACpC;AACA,SAAO;AACT;AAfgB;AAiCT,SAAS,cAAc,IAAIC,OAAM,MAAM;AAC5C,MAAI,QAAQ,UAAU,WAAW,EAAG,UAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,IAAI,IAAI,GAAG,KAAK;AACjF,QAAI,MAAM,EAAE,KAAKA,QAAO;AACpB,UAAI,CAAC,GAAI,MAAK,MAAM,UAAU,MAAM,KAAKA,OAAM,GAAG,CAAC;AACnD,SAAG,CAAC,IAAIA,MAAK,CAAC;AAAA,IAClB;AAAA,EACJ;AACA,SAAO,GAAG,OAAO,MAAM,MAAM,UAAU,MAAM,KAAKA,KAAI,CAAC;AACzD;AARgB;AAUT,SAAS,QAAQ,GAAG;AACzB,SAAO,gBAAgB,WAAW,KAAK,IAAI,GAAG,QAAQ,IAAI,QAAQ,CAAC;AACrE;AAFgB;AAIT,SAAS,iBAAiB,SAAS,YAAY,WAAW;AAC/D,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AAC5D,SAAO,IAAI,OAAO,QAAQ,OAAO,kBAAkB,aAAa,gBAAgB,QAAQ,SAAS,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,UAAU,WAAW,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAM,GAAG;AACtN,WAAS,YAAY,GAAG;AAAE,WAAO,SAAU,GAAG;AAAE,aAAO,QAAQ,QAAQ,CAAC,EAAE,KAAK,GAAG,MAAM;AAAA,IAAG;AAAA,EAAG;AAArF;AACT,WAAS,KAAK,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG;AAAE,QAAE,CAAC,IAAI,SAAU,GAAG;AAAE,eAAO,IAAI,QAAQ,SAAU,GAAG,GAAG;AAAE,YAAE,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,GAAG,CAAC;AAAA,QAAG,CAAC;AAAA,MAAG;AAAG,UAAI,EAAG,GAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IAAG;AAAA,EAAE;AAA9J;AACT,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI;AAAE,WAAK,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,IAAG,SAAS,GAAG;AAAE,aAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,IAAG;AAAA,EAAE;AAAxE;AACT,WAAS,KAAK,GAAG;AAAE,MAAE,iBAAiB,UAAU,QAAQ,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,SAAS,MAAM,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,EAAG;AAA9G;AACT,WAAS,QAAQ,OAAO;AAAE,WAAO,QAAQ,KAAK;AAAA,EAAG;AAAxC;AACT,WAAS,OAAO,OAAO;AAAE,WAAO,SAAS,KAAK;AAAA,EAAG;AAAxC;AACT,WAAS,OAAO,GAAG,GAAG;AAAE,QAAI,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,EAAE,OAAQ,QAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAAA,EAAG;AAAxE;AACX;AAXgB;AAmBT,SAAS,cAAc,GAAG;AAC/B,MAAI,CAAC,OAAO,cAAe,OAAM,IAAI,UAAU,sCAAsC;AACrF,MAAI,IAAI,EAAE,OAAO,aAAa,GAAG;AACjC,SAAO,IAAI,EAAE,KAAK,CAAC,KAAK,IAAI,OAAO,aAAa,aAAa,SAAS,CAAC,IAAI,EAAE,OAAO,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,MAAM,GAAG,KAAK,OAAO,GAAG,KAAK,QAAQ,GAAG,EAAE,OAAO,aAAa,IAAI,WAAY;AAAE,WAAO;AAAA,EAAM,GAAG;AAC9M,WAAS,KAAK,GAAG;AAAE,MAAE,CAAC,IAAI,EAAE,CAAC,KAAK,SAAU,GAAG;AAAE,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAAE,YAAI,EAAE,CAAC,EAAE,CAAC,GAAG,OAAO,SAAS,QAAQ,EAAE,MAAM,EAAE,KAAK;AAAA,MAAG,CAAC;AAAA,IAAG;AAAA,EAAG;AAAtJ;AACT,WAAS,OAAO,SAAS,QAAQ,GAAG,GAAG;AAAE,YAAQ,QAAQ,CAAC,EAAE,KAAK,SAASC,IAAG;AAAE,cAAQ,EAAE,OAAOA,IAAG,MAAM,EAAE,CAAC;AAAA,IAAG,GAAG,MAAM;AAAA,EAAG;AAAlH;AACX;AANgB;;;AClPV,SAAU,WAAW,OAAU;AACnC,SAAO,OAAO,UAAU;AAC1B;AAFgB;;;ACKV,SAAU,iBAAoB,YAAgC;AAClE,MAAM,SAAS,gCAAC,UAAa;AAC3B,UAAM,KAAK,QAAQ;AACnB,aAAS,QAAQ,IAAI,MAAK,EAAG;EAC/B,GAHe;AAKf,MAAM,WAAW,WAAW,MAAM;AAClC,WAAS,YAAY,OAAO,OAAO,MAAM,SAAS;AAClD,WAAS,UAAU,cAAc;AACjC,SAAO;AACT;AAVgB;;;ACST,IAAM,sBAA+C,iBAC1D,SAAC,QAAM;AACL,SAAA,gCAAS,wBAAmC,QAA0B;AACpE,WAAO,IAAI;AACX,SAAK,UAAU,SACR,OAAO,SAAM,8CACxB,OAAO,IAAI,SAAC,KAAK,GAAC;AAAK,aAAG,IAAI,IAAC,OAAK,IAAI,SAAQ;IAAzB,CAA6B,EAAE,KAAK,MAAM,IACzD;AACJ,SAAK,OAAO;AACZ,SAAK,SAAS;EAChB,GARA;AAAA,CAQC;;;ACvBC,SAAU,UAAa,KAA6B,MAAO;AAC/D,MAAI,KAAK;AACP,QAAM,QAAQ,IAAI,QAAQ,IAAI;AAC9B,SAAK,SAAS,IAAI,OAAO,OAAO,CAAC;;AAErC;AALgB;;;ACUhB,IAAA,eAAA,WAAA;AAwBE,WAAAC,cAAoB,iBAA4B;AAA5B,SAAA,kBAAA;AAdb,SAAA,SAAS;AAER,SAAA,aAAmD;AAMnD,SAAA,cAAqD;EAMV;AAAnD,SAAAA,eAAA;AAOA,EAAAA,cAAA,UAAA,cAAA,WAAA;;AACE,QAAI;AAEJ,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,SAAS;AAGN,UAAA,aAAe,KAAI;AAC3B,UAAI,YAAY;AACd,aAAK,aAAa;AAClB,YAAI,MAAM,QAAQ,UAAU,GAAG;;AAC7B,qBAAqB,eAAA,SAAA,UAAU,GAAA,iBAAA,aAAA,KAAA,GAAA,CAAA,eAAA,MAAA,iBAAA,aAAA,KAAA,GAAE;AAA5B,kBAAM,WAAM,eAAA;AACf,uBAAO,OAAO,IAAI;;;;;;;;;;;eAEf;AACL,qBAAW,OAAO,IAAI;;;AAIlB,UAAiB,mBAAqB,KAAI;AAClD,UAAI,WAAW,gBAAgB,GAAG;AAChC,YAAI;AACF,2BAAgB;iBACT,GAAG;AACV,mBAAS,aAAa,sBAAsB,EAAE,SAAS,CAAC,CAAC;;;AAIrD,UAAA,cAAgB,KAAI;AAC5B,UAAI,aAAa;AACf,aAAK,cAAc;;AACnB,mBAAwB,gBAAA,SAAA,WAAW,GAAA,kBAAA,cAAA,KAAA,GAAA,CAAA,gBAAA,MAAA,kBAAA,cAAA,KAAA,GAAE;AAAhC,gBAAM,YAAS,gBAAA;AAClB,gBAAI;AACF,4BAAc,SAAS;qBAChB,KAAK;AACZ,uBAAS,WAAM,QAAN,WAAM,SAAN,SAAU,CAAA;AACnB,kBAAI,eAAe,qBAAqB;AACtC,yBAAM,cAAA,cAAA,CAAA,GAAA,OAAO,MAAM,CAAA,GAAA,OAAK,IAAI,MAAM,CAAA;qBAC7B;AACL,uBAAO,KAAK,GAAG;;;;;;;;;;;;;;AAMvB,UAAI,QAAQ;AACV,cAAM,IAAI,oBAAoB,MAAM;;;EAG1C;AAoBA,EAAAA,cAAA,UAAA,MAAA,SAAI,UAAuB;;AAGzB,QAAI,YAAY,aAAa,MAAM;AACjC,UAAI,KAAK,QAAQ;AAGf,sBAAc,QAAQ;aACjB;AACL,YAAI,oBAAoBA,eAAc;AAGpC,cAAI,SAAS,UAAU,SAAS,WAAW,IAAI,GAAG;AAChD;;AAEF,mBAAS,WAAW,IAAI;;AAE1B,SAAC,KAAK,eAAc,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,KAAI,CAAA,GAAI,KAAK,QAAQ;;;EAG/D;AAOQ,EAAAA,cAAA,UAAA,aAAR,SAAmB,QAAoB;AAC7B,QAAA,aAAe,KAAI;AAC3B,WAAO,eAAe,UAAW,MAAM,QAAQ,UAAU,KAAK,WAAW,SAAS,MAAM;EAC1F;AASQ,EAAAA,cAAA,UAAA,aAAR,SAAmB,QAAoB;AAC7B,QAAA,aAAe,KAAI;AAC3B,SAAK,aAAa,MAAM,QAAQ,UAAU,KAAK,WAAW,KAAK,MAAM,GAAG,cAAc,aAAa,CAAC,YAAY,MAAM,IAAI;EAC5H;AAMQ,EAAAA,cAAA,UAAA,gBAAR,SAAsB,QAAoB;AAChC,QAAA,aAAe,KAAI;AAC3B,QAAI,eAAe,QAAQ;AACzB,WAAK,aAAa;eACT,MAAM,QAAQ,UAAU,GAAG;AACpC,gBAAU,YAAY,MAAM;;EAEhC;AAgBA,EAAAA,cAAA,UAAA,SAAA,SAAO,UAAsC;AACnC,QAAA,cAAgB,KAAI;AAC5B,mBAAe,UAAU,aAAa,QAAQ;AAE9C,QAAI,oBAAoBA,eAAc;AACpC,eAAS,cAAc,IAAI;;EAE/B;AAjLc,EAAAA,cAAA,QAAS,WAAA;AACrB,QAAM,QAAQ,IAAIA,cAAY;AAC9B,UAAM,SAAS;AACf,WAAO;EACT,EAAE;AA8KJ,SAAAA;EAnLA;AAqLO,IAAM,qBAAqB,aAAa;AAEzC,SAAU,eAAe,OAAU;AACvC,SACE,iBAAiB,gBAChB,SAAS,YAAY,SAAS,WAAW,MAAM,MAAM,KAAK,WAAW,MAAM,GAAG,KAAK,WAAW,MAAM,WAAW;AAEpH;AALgB;AAOhB,SAAS,cAAc,WAAwC;AAC7D,MAAI,WAAW,SAAS,GAAG;AACzB,cAAS;SACJ;AACL,cAAU,YAAW;;AAEzB;AANS;;;ACtMF,IAAM,SAAuB;EAClC,kBAAkB;EAClB,uBAAuB;EACvB,SAAS;EACT,uCAAuC;EACvC,0BAA0B;;;;ACGrB,IAAM,kBAAmC;EAG9C,YAAA,gCAAW,SAAqB,SAAgB;AAAE,QAAA,OAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,WAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AACxC,QAAA,WAAa,gBAAe;AACpC,QAAI,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,YAAY;AACxB,aAAO,SAAS,WAAU,MAAnB,UAAQ,cAAA,CAAY,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;;AAEtD,WAAO,WAAU,MAAA,QAAA,cAAA,CAAC,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;EAC7C,GANA;EAOA,cAAA,gCAAa,QAAM;AACT,QAAA,WAAa,gBAAe;AACpC,aAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,iBAAgB,cAAc,MAAa;EAC/D,GAHA;EAIA,UAAU;;;;ACjBN,SAAU,qBAAqB,KAAQ;AAC3C,kBAAgB,WAAW,WAAA;AACjB,QAAA,mBAAqB,OAAM;AACnC,QAAI,kBAAkB;AAEpB,uBAAiB,GAAG;WACf;AAEL,YAAM;;EAEV,CAAC;AACH;AAXgB;;;ACXV,SAAU,OAAI;AAAK;AAAT;;;ACMT,IAAM,wBAAyB,WAAA;AAAM,SAAA,mBAAmB,KAAK,QAAW,MAAS;AAA5C,EAAsE;AAO5G,SAAU,kBAAkB,OAAU;AAC1C,SAAO,mBAAmB,KAAK,QAAW,KAAK;AACjD;AAFgB;AASV,SAAU,iBAAoB,OAAQ;AAC1C,SAAO,mBAAmB,KAAK,OAAO,MAAS;AACjD;AAFgB;AAUV,SAAU,mBAAmB,MAAuB,OAAY,OAAU;AAC9E,SAAO;IACL;IACA;IACA;;AAEJ;AANgB;;;AC/BhB,IAAI,UAAuD;AASrD,SAAU,aAAa,IAAc;AACzC,MAAI,OAAO,uCAAuC;AAChD,QAAM,SAAS,CAAC;AAChB,QAAI,QAAQ;AACV,gBAAU,EAAE,aAAa,OAAO,OAAO,KAAI;;AAE7C,OAAE;AACF,QAAI,QAAQ;AACJ,UAAA,KAAyB,SAAvB,cAAW,GAAA,aAAE,QAAK,GAAA;AAC1B,gBAAU;AACV,UAAI,aAAa;AACf,cAAM;;;SAGL;AAGL,OAAE;;AAEN;AAnBgB;AAyBV,SAAU,aAAa,KAAQ;AACnC,MAAI,OAAO,yCAAyC,SAAS;AAC3D,YAAQ,cAAc;AACtB,YAAQ,QAAQ;;AAEpB;AALgB;;;AClBhB,IAAA,aAAA,SAAA,QAAA;AAAmC,YAAAC,aAAA,MAAA;AA4BjC,WAAAA,YAAY,aAA6C;AAAzD,QAAA,QACE,OAAA,KAAA,IAAA,KAAO;AATC,UAAA,YAAqB;AAU7B,QAAI,aAAa;AACf,YAAK,cAAc;AAGnB,UAAI,eAAe,WAAW,GAAG;AAC/B,oBAAY,IAAI,KAAI;;WAEjB;AACL,YAAK,cAAc;;;EAEvB;AAZA,SAAAA,aAAA;AAbO,EAAAA,YAAA,SAAP,SAAiB,MAAwB,OAA2B,UAAqB;AACvF,WAAO,IAAI,eAAe,MAAM,OAAO,QAAQ;EACjD;AA+BA,EAAAA,YAAA,UAAA,OAAA,SAAK,OAAQ;AACX,QAAI,KAAK,WAAW;AAClB,gCAA0B,iBAAiB,KAAK,GAAG,IAAI;WAClD;AACL,WAAK,MAAM,KAAM;;EAErB;AAQA,EAAAA,YAAA,UAAA,QAAA,SAAM,KAAS;AACb,QAAI,KAAK,WAAW;AAClB,gCAA0B,kBAAkB,GAAG,GAAG,IAAI;WACjD;AACL,WAAK,YAAY;AACjB,WAAK,OAAO,GAAG;;EAEnB;AAOA,EAAAA,YAAA,UAAA,WAAA,WAAA;AACE,QAAI,KAAK,WAAW;AAClB,gCAA0B,uBAAuB,IAAI;WAChD;AACL,WAAK,YAAY;AACjB,WAAK,UAAS;;EAElB;AAEA,EAAAA,YAAA,UAAA,cAAA,WAAA;AACE,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,YAAY;AACjB,aAAA,UAAM,YAAW,KAAA,IAAA;AACjB,WAAK,cAAc;;EAEvB;AAEU,EAAAA,YAAA,UAAA,QAAV,SAAgB,OAAQ;AACtB,SAAK,YAAY,KAAK,KAAK;EAC7B;AAEU,EAAAA,YAAA,UAAA,SAAV,SAAiB,KAAQ;AACvB,QAAI;AACF,WAAK,YAAY,MAAM,GAAG;;AAE1B,WAAK,YAAW;;EAEpB;AAEU,EAAAA,YAAA,UAAA,YAAV,WAAA;AACE,QAAI;AACF,WAAK,YAAY,SAAQ;;AAEzB,WAAK,YAAW;;EAEpB;AACF,SAAAA;AAAA,EAhHmC,YAAY;AAuH/C,IAAM,QAAQ,SAAS,UAAU;AAEjC,SAAS,KAAyC,IAAQ,SAAY;AACpE,SAAO,MAAM,KAAK,IAAI,OAAO;AAC/B;AAFS;AAQT,IAAA,mBAAA,WAAA;AACE,WAAAC,kBAAoB,iBAAqC;AAArC,SAAA,kBAAA;EAAwC;AAA5D,SAAAA,mBAAA;AAEA,EAAAA,kBAAA,UAAA,OAAA,SAAK,OAAQ;AACH,QAAA,kBAAoB,KAAI;AAChC,QAAI,gBAAgB,MAAM;AACxB,UAAI;AACF,wBAAgB,KAAK,KAAK;eACnB,OAAO;AACd,6BAAqB,KAAK;;;EAGhC;AAEA,EAAAA,kBAAA,UAAA,QAAA,SAAM,KAAQ;AACJ,QAAA,kBAAoB,KAAI;AAChC,QAAI,gBAAgB,OAAO;AACzB,UAAI;AACF,wBAAgB,MAAM,GAAG;eAClB,OAAO;AACd,6BAAqB,KAAK;;WAEvB;AACL,2BAAqB,GAAG;;EAE5B;AAEA,EAAAA,kBAAA,UAAA,WAAA,WAAA;AACU,QAAA,kBAAoB,KAAI;AAChC,QAAI,gBAAgB,UAAU;AAC5B,UAAI;AACF,wBAAgB,SAAQ;eACjB,OAAO;AACd,6BAAqB,KAAK;;;EAGhC;AACF,SAAAA;AAAA,EArCA;AAuCA,IAAA,iBAAA,SAAA,QAAA;AAAuC,YAAAC,iBAAA,MAAA;AACrC,WAAAA,gBACE,gBACA,OACA,UAA8B;AAHhC,QAAA,QAKE,OAAA,KAAA,IAAA,KAAO;AAEP,QAAI;AACJ,QAAI,WAAW,cAAc,KAAK,CAAC,gBAAgB;AAGjD,wBAAkB;QAChB,MAAO,mBAAc,QAAd,mBAAc,SAAd,iBAAkB;QACzB,OAAO,UAAK,QAAL,UAAK,SAAL,QAAS;QAChB,UAAU,aAAQ,QAAR,aAAQ,SAAR,WAAY;;WAEnB;AAEL,UAAI;AACJ,UAAI,SAAQ,OAAO,0BAA0B;AAI3C,oBAAU,OAAO,OAAO,cAAc;AACtC,kBAAQ,cAAc,WAAA;AAAM,iBAAA,MAAK,YAAW;QAAhB;AAC5B,0BAAkB;UAChB,MAAM,eAAe,QAAQ,KAAK,eAAe,MAAM,SAAO;UAC9D,OAAO,eAAe,SAAS,KAAK,eAAe,OAAO,SAAO;UACjE,UAAU,eAAe,YAAY,KAAK,eAAe,UAAU,SAAO;;aAEvE;AAEL,0BAAkB;;;AAMtB,UAAK,cAAc,IAAI,iBAAiB,eAAe;;EACzD;AAvCA,SAAAA,iBAAA;AAwCF,SAAAA;AAAA,EAzCuC,UAAU;AA2CjD,SAAS,qBAAqB,OAAU;AACtC,MAAI,OAAO,uCAAuC;AAChD,iBAAa,KAAK;SACb;AAGL,yBAAqB,KAAK;;AAE9B;AARS;AAgBT,SAAS,oBAAoB,KAAQ;AACnC,QAAM;AACR;AAFS;AAST,SAAS,0BAA0B,cAA2C,YAA2B;AAC/F,MAAA,wBAA0B,OAAM;AACxC,2BAAyB,gBAAgB,WAAW,WAAA;AAAM,WAAA,sBAAsB,cAAc,UAAU;EAA9C,CAA+C;AAC3G;AAHS;AAUF,IAAM,iBAA6D;EACxE,QAAQ;EACR,MAAM;EACN,OAAO;EACP,UAAU;;;;ACtQL,IAAM,aAA+B,WAAA;AAAM,SAAC,OAAO,WAAW,cAAc,OAAO,cAAe;AAAvD,EAAsE;;;ACoClH,SAAU,SAAY,GAAI;AAC9B,SAAO;AACT;AAFgB;;;ACwCV,SAAU,cAAoB,KAA+B;AACjE,MAAI,IAAI,WAAW,GAAG;AACpB,WAAO;;AAGT,MAAI,IAAI,WAAW,GAAG;AACpB,WAAO,IAAI,CAAC;;AAGd,SAAO,gCAAS,MAAMC,QAAQ;AAC5B,WAAO,IAAI,OAAO,SAAC,MAAW,IAAuB;AAAK,aAAA,GAAG,IAAI;IAAP,GAAUA,MAAY;EAClF,GAFO;AAGT;AAZgB;;;ACpEhB,IAAA,aAAA,WAAA;AAiBE,WAAAC,YAAY,WAA6E;AACvF,QAAI,WAAW;AACb,WAAK,aAAa;;EAEtB;AAJA,SAAAA,aAAA;AA4BA,EAAAA,YAAA,UAAA,OAAA,SAAQ,UAAyB;AAC/B,QAAMC,cAAa,IAAID,YAAU;AACjC,IAAAC,YAAW,SAAS;AACpB,IAAAA,YAAW,WAAW;AACtB,WAAOA;EACT;AA2IA,EAAAD,YAAA,UAAA,YAAA,SACE,gBACA,OACA,UAA8B;AAHhC,QAAA,QAAA;AAKE,QAAM,aAAa,aAAa,cAAc,IAAI,iBAAiB,IAAI,eAAe,gBAAgB,OAAO,QAAQ;AAErH,iBAAa,WAAA;AACL,UAAA,KAAuB,OAArB,WAAQ,GAAA,UAAE,SAAM,GAAA;AACxB,iBAAW,IACT,WAGI,SAAS,KAAK,YAAY,MAAM,IAChC,SAIA,MAAK,WAAW,UAAU,IAG1B,MAAK,cAAc,UAAU,CAAC;IAEtC,CAAC;AAED,WAAO;EACT;AAGU,EAAAA,YAAA,UAAA,gBAAV,SAAwB,MAAmB;AACzC,QAAI;AACF,aAAO,KAAK,WAAW,IAAI;aACpB,KAAK;AAIZ,WAAK,MAAM,GAAG;;EAElB;AA6DA,EAAAA,YAAA,UAAA,UAAA,SAAQ,MAA0B,aAAoC;AAAtE,QAAA,QAAA;AACE,kBAAc,eAAe,WAAW;AAExC,WAAO,IAAI,YAAkB,SAAC,SAAS,QAAM;AAC3C,UAAM,aAAa,IAAI,eAAkB;QACvC,MAAM,gCAAC,OAAK;AACV,cAAI;AACF,iBAAK,KAAK;mBACH,KAAK;AACZ,mBAAO,GAAG;AACV,uBAAW,YAAW;;QAE1B,GAPM;QAQN,OAAO;QACP,UAAU;OACX;AACD,YAAK,UAAU,UAAU;IAC3B,CAAC;EACH;AAGU,EAAAA,YAAA,UAAA,aAAV,SAAqB,YAA2B;;AAC9C,YAAO,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,UAAU,UAAU;EAC1C;AAMA,EAAAA,YAAA,UAAC,UAAiB,IAAlB,WAAA;AACE,WAAO;EACT;AA4FA,EAAAA,YAAA,UAAA,OAAA,WAAA;AAAK,QAAA,aAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAA2C;AAA3C,iBAAA,EAAA,IAAA,UAAA,EAAA;;AACH,WAAO,cAAc,UAAU,EAAE,IAAI;EACvC;AA4BA,EAAAA,YAAA,UAAA,YAAA,SAAU,aAAoC;AAA9C,QAAA,QAAA;AACE,kBAAc,eAAe,WAAW;AAExC,WAAO,IAAI,YAAY,SAAC,SAAS,QAAM;AACrC,UAAI;AACJ,YAAK,UACH,SAAC,GAAI;AAAK,eAAC,QAAQ;MAAT,GACV,SAAC,KAAQ;AAAK,eAAA,OAAO,GAAG;MAAV,GACd,WAAA;AAAM,eAAA,QAAQ,KAAK;MAAb,CAAc;IAExB,CAAC;EACH;AAraO,EAAAA,YAAA,SAAkC,SAAI,WAAwD;AACnG,WAAO,IAAIA,YAAc,SAAS;EACpC;AAoaF,SAAAA;EArcA;AA8cA,SAAS,eAAe,aAA+C;;AACrE,UAAO,KAAA,gBAAW,QAAX,gBAAW,SAAX,cAAe,OAAO,aAAO,QAAA,OAAA,SAAA,KAAI;AAC1C;AAFS;AAIT,SAAS,WAAc,OAAU;AAC/B,SAAO,SAAS,WAAW,MAAM,IAAI,KAAK,WAAW,MAAM,KAAK,KAAK,WAAW,MAAM,QAAQ;AAChG;AAFS;AAIT,SAAS,aAAgB,OAAU;AACjC,SAAQ,SAAS,iBAAiB,cAAgB,WAAW,KAAK,KAAK,eAAe,KAAK;AAC7F;AAFS;;;AC5dH,SAAU,QAAQ,QAAW;AACjC,SAAO,WAAW,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,IAAI;AAChC;AAFgB;AAQV,SAAU,QACd,MAAqF;AAErF,SAAO,SAAC,QAAqB;AAC3B,QAAI,QAAQ,MAAM,GAAG;AACnB,aAAO,OAAO,KAAK,SAA+B,cAA2B;AAC3E,YAAI;AACF,iBAAO,KAAK,cAAc,IAAI;iBACvB,KAAK;AACZ,eAAK,MAAM,GAAG;;MAElB,CAAC;;AAEH,UAAM,IAAI,UAAU,wCAAwC;EAC9D;AACF;AAfgB;;;ACFV,SAAU,yBACd,aACA,QACA,YACA,SACA,YAAuB;AAEvB,SAAO,IAAI,mBAAmB,aAAa,QAAQ,YAAY,SAAS,UAAU;AACpF;AARgB;AAchB,IAAA,qBAAA,SAAA,QAAA;AAA2C,YAAAE,qBAAA,MAAA;AAiBzC,WAAAA,oBACE,aACA,QACA,YACA,SACQ,YACA,mBAAiC;AAN3C,QAAA,QAoBE,OAAA,KAAA,MAAM,WAAW,KAAC;AAfV,UAAA,aAAA;AACA,UAAA,oBAAA;AAeR,UAAK,QAAQ,SACT,SAAuC,OAAQ;AAC7C,UAAI;AACF,eAAO,KAAK;eACL,KAAK;AACZ,oBAAY,MAAM,GAAG;;IAEzB,IACA,OAAA,UAAM;AACV,UAAK,SAAS,UACV,SAAuC,KAAQ;AAC7C,UAAI;AACF,gBAAQ,GAAG;eACJC,MAAK;AAEZ,oBAAY,MAAMA,IAAG;;AAGrB,aAAK,YAAW;;IAEpB,IACA,OAAA,UAAM;AACV,UAAK,YAAY,aACb,WAAA;AACE,UAAI;AACF,mBAAU;eACH,KAAK;AAEZ,oBAAY,MAAM,GAAG;;AAGrB,aAAK,YAAW;;IAEpB,IACA,OAAA,UAAM;;EACZ;AAxDA,SAAAD,qBAAA;AA0DA,EAAAA,oBAAA,UAAA,cAAA,WAAA;;AACE,QAAI,CAAC,KAAK,qBAAqB,KAAK,kBAAiB,GAAI;AAC/C,UAAA,WAAW,KAAI;AACvB,aAAA,UAAM,YAAW,KAAA,IAAA;AAEjB,OAAC,cAAU,KAAA,KAAK,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAA,KAAf,IAAI;;EAEnB;AACF,SAAAA;AAAA,EAnF2C,UAAU;;;ACtB9C,IAAM,+BAA6D;EACxE,KAAG,kCAAA;AAGD,YAAQ,6BAA6B,YAAY,aAAa,IAAG;EACnE,GAJG;EAKH,UAAU;;;;ACEL,IAAM,yBAAiD;EAG5D,UAAA,gCAAS,UAAQ;AACf,QAAI,UAAU;AACd,QAAI,SAAkD;AAC9C,QAAA,WAAa,uBAAsB;AAC3C,QAAI,UAAU;AACZ,gBAAU,SAAS;AACnB,eAAS,SAAS;;AAEpB,QAAM,SAAS,QAAQ,SAAC,WAAS;AAI/B,eAAS;AACT,eAAS,SAAS;IACpB,CAAC;AACD,WAAO,IAAI,aAAa,WAAA;AAAM,aAAA,WAAM,QAAN,WAAM,SAAA,SAAN,OAAS,MAAM;IAAf,CAAgB;EAChD,GAhBA;EAiBA,uBAAqB,kCAAA;AAAC,QAAA,OAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,WAAA,EAAA,IAAA,UAAA,EAAA;;AACZ,QAAA,WAAa,uBAAsB;AAC3C,aAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,0BAAyB,uBAAsB,MAAA,QAAA,cAAA,CAAA,GAAA,OAAI,IAAI,CAAA,CAAA;EAC3E,GAHqB;EAIrB,sBAAoB,kCAAA;AAAC,QAAA,OAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,WAAA,EAAA,IAAA,UAAA,EAAA;;AACX,QAAA,WAAa,uBAAsB;AAC3C,aAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,yBAAwB,sBAAqB,MAAA,QAAA,cAAA,CAAA,GAAA,OAAI,IAAI,CAAA,CAAA;EACzE,GAHoB;EAIpB,UAAU;;;;ACrBL,IAAM,0BAAuD,iBAClE,SAAC,QAAM;AACL,SAAA,gCAAS,8BAA2B;AAClC,WAAO,IAAI;AACX,SAAK,OAAO;AACZ,SAAK,UAAU;EACjB,GAJA;AAAA,CAIC;;;ACXL,IAAA,UAAA,SAAA,QAAA;AAAgC,YAAAE,UAAA,MAAA;AAuB9B,WAAAA,WAAA;AAAA,QAAA,QAEE,OAAA,KAAA,IAAA,KAAO;AAxBT,UAAA,SAAS;AAED,UAAA,mBAAyC;AAGjD,UAAA,YAA2B,CAAA;AAE3B,UAAA,YAAY;AAEZ,UAAA,WAAW;AAEX,UAAA,cAAmB;;EAcnB;AAHA,SAAAA,UAAA;AAMA,EAAAA,SAAA,UAAA,OAAA,SAAQ,UAAwB;AAC9B,QAAM,UAAU,IAAI,iBAAiB,MAAM,IAAI;AAC/C,YAAQ,WAAW;AACnB,WAAO;EACT;AAGU,EAAAA,SAAA,UAAA,iBAAV,WAAA;AACE,QAAI,KAAK,QAAQ;AACf,YAAM,IAAI,wBAAuB;;EAErC;AAEA,EAAAA,SAAA,UAAA,OAAA,SAAK,OAAQ;AAAb,QAAA,QAAA;AACE,iBAAa,WAAA;;AACX,YAAK,eAAc;AACnB,UAAI,CAAC,MAAK,WAAW;AACnB,YAAI,CAAC,MAAK,kBAAkB;AAC1B,gBAAK,mBAAmB,MAAM,KAAK,MAAK,SAAS;;;AAEnD,mBAAuB,KAAA,SAAA,MAAK,gBAAgB,GAAA,KAAA,GAAA,KAAA,GAAA,CAAA,GAAA,MAAA,KAAA,GAAA,KAAA,GAAE;AAAzC,gBAAM,WAAQ,GAAA;AACjB,qBAAS,KAAK,KAAK;;;;;;;;;;;;IAGzB,CAAC;EACH;AAEA,EAAAA,SAAA,UAAA,QAAA,SAAM,KAAQ;AAAd,QAAA,QAAA;AACE,iBAAa,WAAA;AACX,YAAK,eAAc;AACnB,UAAI,CAAC,MAAK,WAAW;AACnB,cAAK,WAAW,MAAK,YAAY;AACjC,cAAK,cAAc;AACX,YAAA,YAAc,MAAI;AAC1B,eAAO,UAAU,QAAQ;AACvB,oBAAU,MAAK,EAAI,MAAM,GAAG;;;IAGlC,CAAC;EACH;AAEA,EAAAA,SAAA,UAAA,WAAA,WAAA;AAAA,QAAA,QAAA;AACE,iBAAa,WAAA;AACX,YAAK,eAAc;AACnB,UAAI,CAAC,MAAK,WAAW;AACnB,cAAK,YAAY;AACT,YAAA,YAAc,MAAI;AAC1B,eAAO,UAAU,QAAQ;AACvB,oBAAU,MAAK,EAAI,SAAQ;;;IAGjC,CAAC;EACH;AAEA,EAAAA,SAAA,UAAA,cAAA,WAAA;AACE,SAAK,YAAY,KAAK,SAAS;AAC/B,SAAK,YAAY,KAAK,mBAAmB;EAC3C;AAEA,SAAA,eAAIA,SAAA,WAAA,YAAQ;SAAZ,kCAAA;;AACE,eAAO,KAAA,KAAK,eAAS,QAAA,OAAA,SAAA,SAAA,GAAE,UAAS;IAClC,GAFA;;;;AAKU,EAAAA,SAAA,UAAA,gBAAV,SAAwB,YAAyB;AAC/C,SAAK,eAAc;AACnB,WAAO,OAAA,UAAM,cAAa,KAAA,MAAC,UAAU;EACvC;AAGU,EAAAA,SAAA,UAAA,aAAV,SAAqB,YAAyB;AAC5C,SAAK,eAAc;AACnB,SAAK,wBAAwB,UAAU;AACvC,WAAO,KAAK,gBAAgB,UAAU;EACxC;AAGU,EAAAA,SAAA,UAAA,kBAAV,SAA0B,YAA2B;AAArD,QAAA,QAAA;AACQ,QAAA,KAAqC,MAAnC,WAAQ,GAAA,UAAE,YAAS,GAAA,WAAE,YAAS,GAAA;AACtC,QAAI,YAAY,WAAW;AACzB,aAAO;;AAET,SAAK,mBAAmB;AACxB,cAAU,KAAK,UAAU;AACzB,WAAO,IAAI,aAAa,WAAA;AACtB,YAAK,mBAAmB;AACxB,gBAAU,WAAW,UAAU;IACjC,CAAC;EACH;AAGU,EAAAA,SAAA,UAAA,0BAAV,SAAkC,YAA2B;AACrD,QAAA,KAAuC,MAArC,WAAQ,GAAA,UAAE,cAAW,GAAA,aAAE,YAAS,GAAA;AACxC,QAAI,UAAU;AACZ,iBAAW,MAAM,WAAW;eACnB,WAAW;AACpB,iBAAW,SAAQ;;EAEvB;AAQA,EAAAA,SAAA,UAAA,eAAA,WAAA;AACE,QAAMC,cAAkB,IAAI,WAAU;AACtC,IAAAA,YAAW,SAAS;AACpB,WAAOA;EACT;AAxHO,EAAAD,SAAA,SAAkC,SAAI,aAA0B,QAAqB;AAC1F,WAAO,IAAI,iBAAoB,aAAa,MAAM;EACpD;AAuHF,SAAAA;EA5IgC,UAAU;AA8I1C,IAAA,mBAAA,SAAA,QAAA;AAAyC,YAAAE,mBAAA,MAAA;AACvC,WAAAA,kBAES,aACP,QAAsB;AAHxB,QAAA,QAKE,OAAA,KAAA,IAAA,KAAO;AAHA,UAAA,cAAA;AAIP,UAAK,SAAS;;EAChB;AAPA,SAAAA,mBAAA;AASA,EAAAA,kBAAA,UAAA,OAAA,SAAK,OAAQ;;AACX,KAAA,MAAA,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAE,UAAI,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,KAAK;EAChC;AAEA,EAAAA,kBAAA,UAAA,QAAA,SAAM,KAAQ;;AACZ,KAAA,MAAA,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAE,WAAK,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,GAAG;EAC/B;AAEA,EAAAA,kBAAA,UAAA,WAAA,WAAA;;AACE,KAAA,MAAA,KAAA,KAAK,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAE,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,EAAA;EAC5B;AAGU,EAAAA,kBAAA,UAAA,aAAV,SAAqB,YAAyB;;AAC5C,YAAO,MAAA,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,UAAU,UAAU,OAAC,QAAA,OAAA,SAAA,KAAI;EAC/C;AACF,SAAAA;AAAA,EA1ByC,OAAO;;;ACxJzC,IAAM,wBAA+C;EAC1D,KAAG,kCAAA;AAGD,YAAQ,sBAAsB,YAAY,MAAM,IAAG;EACrD,GAJG;EAKH,UAAU;;;;ACIZ,IAAA,SAAA,SAAA,QAAA;AAA+B,YAAAC,SAAA,MAAA;AAC7B,WAAAA,QAAY,WAAsB,MAAmD;WACnF,OAAA,KAAA,IAAA,KAAO;EACT;AAFA,SAAAA,SAAA;AAaO,EAAAA,QAAA,UAAA,WAAP,SAAgB,OAAWC,QAAiB;AAAjB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AAC1C,WAAO;EACT;AACF,SAAAD;AAAA,EAjB+B,YAAY;;;ACDpC,IAAM,mBAAqC;EAGhD,aAAA,gCAAY,SAAqB,SAAgB;AAAE,QAAA,OAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,WAAA,KAAA,CAAA,IAAA,UAAA,EAAA;;AACzC,QAAA,WAAa,iBAAgB;AACrC,QAAI,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,aAAa;AACzB,aAAO,SAAS,YAAW,MAApB,UAAQ,cAAA,CAAa,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;;AAEvD,WAAO,YAAW,MAAA,QAAA,cAAA,CAAC,SAAS,OAAO,GAAA,OAAK,IAAI,CAAA,CAAA;EAC9C,GANA;EAOA,eAAA,gCAAc,QAAM;AACV,QAAA,WAAa,iBAAgB;AACrC,aAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,kBAAiB,eAAe,MAAa;EACjE,GAHA;EAIA,UAAU;;;;ACrBZ,IAAA,cAAA,SAAA,QAAA;AAAoC,YAAAE,cAAA,MAAA;AAOlC,WAAAA,aAAsB,WAAqC,MAAmD;AAA9G,QAAA,QACE,OAAA,KAAA,MAAM,WAAW,IAAI,KAAC;AADF,UAAA,YAAA;AAAqC,UAAA,OAAA;AAFjD,UAAA,UAAmB;;EAI7B;AAFA,SAAAA,cAAA;AAIO,EAAAA,aAAA,UAAA,WAAP,SAAgB,OAAWC,QAAiB;;AAAjB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AAC1C,QAAI,KAAK,QAAQ;AACf,aAAO;;AAIT,SAAK,QAAQ;AAEb,QAAM,KAAK,KAAK;AAChB,QAAM,YAAY,KAAK;AAuBvB,QAAI,MAAM,MAAM;AACd,WAAK,KAAK,KAAK,eAAe,WAAW,IAAIA,MAAK;;AAKpD,SAAK,UAAU;AAEf,SAAK,QAAQA;AAEb,SAAK,MAAK,KAAA,KAAK,QAAE,QAAA,OAAA,SAAA,KAAI,KAAK,eAAe,WAAW,KAAK,IAAIA,MAAK;AAElE,WAAO;EACT;AAEU,EAAAD,aAAA,UAAA,iBAAV,SAAyB,WAA2B,KAAmBC,QAAiB;AAAjB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AACtF,WAAO,iBAAiB,YAAY,UAAU,MAAM,KAAK,WAAW,IAAI,GAAGA,MAAK;EAClF;AAEU,EAAAD,aAAA,UAAA,iBAAV,SAAyB,YAA4B,IAAkBC,QAAwB;AAAxB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAwB;AAE7F,QAAIA,UAAS,QAAQ,KAAK,UAAUA,UAAS,KAAK,YAAY,OAAO;AACnE,aAAO;;AAIT,QAAI,MAAM,MAAM;AACd,uBAAiB,cAAc,EAAE;;AAGnC,WAAO;EACT;AAKO,EAAAD,aAAA,UAAA,UAAP,SAAe,OAAUC,QAAa;AACpC,QAAI,KAAK,QAAQ;AACf,aAAO,IAAI,MAAM,8BAA8B;;AAGjD,SAAK,UAAU;AACf,QAAM,QAAQ,KAAK,SAAS,OAAOA,MAAK;AACxC,QAAI,OAAO;AACT,aAAO;eACE,KAAK,YAAY,SAAS,KAAK,MAAM,MAAM;AAcpD,WAAK,KAAK,KAAK,eAAe,KAAK,WAAW,KAAK,IAAI,IAAI;;EAE/D;AAEU,EAAAD,aAAA,UAAA,WAAV,SAAmB,OAAU,QAAc;AACzC,QAAI,UAAmB;AACvB,QAAI;AACJ,QAAI;AACF,WAAK,KAAK,KAAK;aACR,GAAG;AACV,gBAAU;AAIV,mBAAa,IAAI,IAAI,IAAI,MAAM,oCAAoC;;AAErE,QAAI,SAAS;AACX,WAAK,YAAW;AAChB,aAAO;;EAEX;AAEA,EAAAA,aAAA,UAAA,cAAA,WAAA;AACE,QAAI,CAAC,KAAK,QAAQ;AACV,UAAA,KAAoB,MAAlB,KAAE,GAAA,IAAE,YAAS,GAAA;AACb,UAAAE,WAAY,UAAS;AAE7B,WAAK,OAAO,KAAK,QAAQ,KAAK,YAAY;AAC1C,WAAK,UAAU;AAEf,gBAAUA,UAAS,IAAI;AACvB,UAAI,MAAM,MAAM;AACd,aAAK,KAAK,KAAK,eAAe,WAAW,IAAI,IAAI;;AAGnD,WAAK,QAAQ;AACb,aAAA,UAAM,YAAW,KAAA,IAAA;;EAErB;AACF,SAAAF;AAAA,EA7IoC,MAAM;;;ACR1C,IAAI,aAAa;AAEjB,IAAI;AACJ,IAAM,gBAAwC,CAAA;AAO9C,SAAS,mBAAmB,QAAc;AACxC,MAAI,UAAU,eAAe;AAC3B,WAAO,cAAc,MAAM;AAC3B,WAAO;;AAET,SAAO;AACT;AANS;AAWF,IAAM,YAAY;EACvB,cAAA,gCAAa,IAAc;AACzB,QAAM,SAAS;AACf,kBAAc,MAAM,IAAI;AACxB,QAAI,CAAC,UAAU;AACb,iBAAW,QAAQ,QAAO;;AAE5B,aAAS,KAAK,WAAA;AAAM,aAAA,mBAAmB,MAAM,KAAK,GAAE;IAAhC,CAAkC;AACtD,WAAO;EACT,GARA;EAUA,gBAAA,gCAAe,QAAc;AAC3B,uBAAmB,MAAM;EAC3B,GAFA;;;;AC9BM,IAAA,eAAiC,UAAS;AAA1C,IAAc,iBAAmB,UAAS;AAgB3C,IAAM,oBAAuC;EAGlD,cAAY,kCAAA;AAAC,QAAA,OAAA,CAAA;aAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAO;AAAP,WAAA,EAAA,IAAA,UAAA,EAAA;;AACH,QAAA,WAAa,kBAAiB;AACtC,aAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,iBAAgB,cAAa,MAAA,QAAA,cAAA,CAAA,GAAA,OAAI,IAAI,CAAA,CAAA;EACzD,GAHY;EAIZ,gBAAA,gCAAe,QAAM;AACX,QAAA,WAAa,kBAAiB;AACtC,aAAQ,aAAQ,QAAR,aAAQ,SAAA,SAAR,SAAU,mBAAkB,gBAAgB,MAAa;EACnE,GAHA;EAIA,UAAU;;;;ACNZ,IAAA,YAAA,WAAA;AAGE,WAAAG,WAAoB,qBAAoC,KAAiC;AAAjC,QAAA,QAAA,QAAA;AAAA,YAAoBA,WAAU;IAAG;AAArE,SAAA,sBAAA;AAClB,SAAK,MAAM;EACb;AAFA,SAAAA,YAAA;AA8BO,EAAAA,WAAA,UAAA,WAAP,SAAmB,MAAqDC,QAAmB,OAAS;AAA5B,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AACvF,WAAO,IAAI,KAAK,oBAAuB,MAAM,IAAI,EAAE,SAAS,OAAOA,MAAK;EAC1E;AAlCc,EAAAD,WAAA,MAAoB,sBAAsB;AAmC1D,SAAAA;EApCA;;;AClBA,IAAA,iBAAA,SAAA,QAAA;AAAoC,YAAAE,iBAAA,MAAA;AAgBlC,WAAAA,gBAAY,iBAAgC,KAAiC;AAAjC,QAAA,QAAA,QAAA;AAAA,YAAoB,UAAU;IAAG;AAA7E,QAAA,QACE,OAAA,KAAA,MAAM,iBAAiB,GAAG,KAAC;AAhBtB,UAAA,UAAmC,CAAA;AAMnC,UAAA,UAAmB;;EAW1B;AAFA,SAAAA,iBAAA;AAIO,EAAAA,gBAAA,UAAA,QAAP,SAAa,QAAwB;AAC3B,QAAAC,WAAY,KAAI;AAExB,QAAI,KAAK,SAAS;AAChB,MAAAA,SAAQ,KAAK,MAAM;AACnB;;AAGF,QAAI;AACJ,SAAK,UAAU;AAEf,OAAG;AACD,UAAK,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,KAAK,GAAI;AACxD;;aAEM,SAASA,SAAQ,MAAK;AAEhC,SAAK,UAAU;AAEf,QAAI,OAAO;AACT,aAAQ,SAASA,SAAQ,MAAK,GAAM;AAClC,eAAO,YAAW;;AAEpB,YAAM;;EAEV;AACF,SAAAD;AAAA,EA9CoC,SAAS;;;AC6CtC,IAAM,iBAAiB,IAAI,eAAe,WAAW;AAKrD,IAAM,QAAQ;;;ACjDrB,IAAA,uBAAA,SAAA,QAAA;AAA0C,YAAAE,uBAAA,MAAA;AAyBxC,WAAAA,sBAAY,qBAAuE,WAA4B;AAAnG,QAAA,wBAAA,QAAA;AAAA,4BAA0C;IAAoB;AAAS,QAAA,cAAA,QAAA;AAAA,kBAAA;IAA4B;AAA/G,QAAA,QACE,OAAA,KAAA,MAAM,qBAAqB,WAAA;AAAM,aAAA,MAAK;IAAL,CAAU,KAAC;AADqC,UAAA,YAAA;AAf5E,UAAA,QAAgB;AAMhB,UAAA,QAAgB;;EAWvB;AAFA,SAAAA,uBAAA;AAQO,EAAAA,sBAAA,UAAA,QAAP,WAAA;AACQ,QAAA,KAAyB,MAAvBC,WAAO,GAAA,SAAE,YAAS,GAAA;AAC1B,QAAI;AACJ,QAAI;AAEJ,YAAQ,SAASA,SAAQ,CAAC,MAAM,OAAO,SAAS,WAAW;AACzD,MAAAA,SAAQ,MAAK;AACb,WAAK,QAAQ,OAAO;AAEpB,UAAK,QAAQ,OAAO,QAAQ,OAAO,OAAO,OAAO,KAAK,GAAI;AACxD;;;AAIJ,QAAI,OAAO;AACT,aAAQ,SAASA,SAAQ,MAAK,GAAK;AACjC,eAAO,YAAW;;AAEpB,YAAM;;EAEV;AAnDO,EAAAD,sBAAA,kBAAkB;AAoD3B,SAAAA;EAtD0C,cAAc;AAwDxD,IAAA,gBAAA,SAAA,QAAA;AAAsC,YAAAE,gBAAA,MAAA;AAGpC,WAAAA,eACY,WACA,MACA,OAAsC;AAAtC,QAAA,UAAA,QAAA;AAAA,cAAiB,UAAU,SAAS;IAAE;AAHlD,QAAA,QAKE,OAAA,KAAA,MAAM,WAAW,IAAI,KAAC;AAJZ,UAAA,YAAA;AACA,UAAA,OAAA;AACA,UAAA,QAAA;AALF,UAAA,SAAkB;AAQ1B,UAAK,QAAQ,UAAU,QAAQ;;EACjC;AAPA,SAAAA,gBAAA;AASO,EAAAA,eAAA,UAAA,WAAP,SAAgB,OAAWC,QAAiB;AAAjB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AAC1C,QAAI,OAAO,SAASA,MAAK,GAAG;AAC1B,UAAI,CAAC,KAAK,IAAI;AACZ,eAAO,OAAA,UAAM,SAAQ,KAAA,MAAC,OAAOA,MAAK;;AAEpC,WAAK,SAAS;AAKd,UAAM,SAAS,IAAID,eAAc,KAAK,WAAW,KAAK,IAAI;AAC1D,WAAK,IAAI,MAAM;AACf,aAAO,OAAO,SAAS,OAAOC,MAAK;WAC9B;AAGL,aAAO,aAAa;;EAExB;AAEU,EAAAD,eAAA,UAAA,iBAAV,SAAyB,WAAiC,IAAUC,QAAiB;AAAjB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AACnF,SAAK,QAAQ,UAAU,QAAQA;AACvB,QAAAC,WAAY,UAAS;AAC7B,IAAAA,SAAQ,KAAK,IAAI;AAChB,IAAAA,SAAoC,KAAKF,eAAc,WAAW;AACnE,WAAO;EACT;AAEU,EAAAA,eAAA,UAAA,iBAAV,SAAyB,WAAiC,IAAUC,QAAiB;AAAjB,QAAAA,WAAA,QAAA;AAAA,MAAAA,SAAA;IAAiB;AACnF,WAAO;EACT;AAEU,EAAAD,eAAA,UAAA,WAAV,SAAmB,OAAUC,QAAa;AACxC,QAAI,KAAK,WAAW,MAAM;AACxB,aAAO,OAAA,UAAM,SAAQ,KAAA,MAAC,OAAOA,MAAK;;EAEtC;AAEe,EAAAD,eAAA,cAAf,SAA8B,GAAqB,GAAmB;AACpE,QAAI,EAAE,UAAU,EAAE,OAAO;AACvB,UAAI,EAAE,UAAU,EAAE,OAAO;AACvB,eAAO;iBACE,EAAE,QAAQ,EAAE,OAAO;AAC5B,eAAO;aACF;AACL,eAAO;;eAEA,EAAE,QAAQ,EAAE,OAAO;AAC5B,aAAO;WACF;AACL,aAAO;;EAEX;AACF,SAAAA;AAAA,EAjEsC,WAAW;;;ACG1C,IAAM,QAAQ,IAAI,WAAkB,SAAC,YAAU;AAAK,SAAA,WAAW,SAAQ;AAAnB,CAAqB;;;AC9D1E,SAAU,YAAY,OAAU;AACpC,SAAO,SAAS,WAAW,MAAM,QAAQ;AAC3C;AAFgB;;;ACChB,SAAS,KAAQ,KAAQ;AACvB,SAAO,IAAI,IAAI,SAAS,CAAC;AAC3B;AAFS;AAQH,SAAU,aAAa,MAAW;AACtC,SAAO,YAAY,KAAK,IAAI,CAAC,IAAI,KAAK,IAAG,IAAK;AAChD;AAFgB;AAIV,SAAU,UAAU,MAAa,cAAoB;AACzD,SAAO,OAAO,KAAK,IAAI,MAAM,WAAW,KAAK,IAAG,IAAM;AACxD;AAFgB;;;AChBT,IAAM,cAAe,gCAAI,GAAM;AAAwB,SAAA,KAAK,OAAO,EAAE,WAAW,YAAY,OAAO,MAAM;AAAlD,GAAlC;;;ACMtB,SAAU,UAAU,OAAU;AAClC,SAAO,WAAW,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,IAAI;AAC/B;AAFgB;;;ACDV,SAAU,oBAAoBG,QAAU;AAC5C,SAAO,WAAWA,OAAM,UAAiB,CAAC;AAC5C;AAFgB;;;ACHV,SAAU,gBAAmB,KAAQ;AACzC,SAAO,OAAO,iBAAiB,WAAW,QAAG,QAAH,QAAG,SAAA,SAAH,IAAM,OAAO,aAAa,CAAC;AACvE;AAFgB;;;ACEV,SAAU,iCAAiCC,QAAU;AAEzD,SAAO,IAAI,UACT,mBACEA,WAAU,QAAQ,OAAOA,WAAU,WAAW,sBAAsB,MAAIA,SAAK,OAAG,0HACwC;AAE9H;AAPgB;;;ACJV,SAAU,oBAAiB;AAC/B,MAAI,OAAO,WAAW,cAAc,CAAC,OAAO,UAAU;AACpD,WAAO;;AAGT,SAAO,OAAO;AAChB;AANgB;AAQT,IAAM,WAAW,kBAAiB;;;ACJnC,SAAU,WAAWC,QAAU;AACnC,SAAO,WAAWA,WAAK,QAALA,WAAK,SAAA,SAALA,OAAQ,QAAe,CAAC;AAC5C;AAFgB;;;ACDV,SAAiB,mCAAsC,gBAAqC;;;;;;AAC1F,mBAAS,eAAe,UAAS;;;;;;oBAE1B,QAAA,CAAA,GAAA,CAAA;AACe,iBAAA,CAAA,GAAA,QAAM,OAAO,KAAI,CAAE,CAAA;;AAArC,eAAkB,GAAA,KAAA,GAAhB,QAAK,GAAA,OAAE,OAAI,GAAA;eACf,KAAA,QAAA,CAAA,GAAA,CAAA;;;AACF,iBAAA,CAAA,GAAA,GAAA,KAAA,CAAA;;6BAEI,KAAM,CAAA;;AAAZ,iBAAA,CAAA,GAAA,GAAA,KAAA,CAAA;;AAAA,aAAA,KAAA;;;;;AAGF,iBAAO,YAAW;;;;;;;;AAXC;AAejB,SAAU,qBAAwB,KAAQ;AAG9C,SAAO,WAAW,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,SAAS;AAClC;AAJgB;;;ACHV,SAAU,UAAaC,QAAyB;AACpD,MAAIA,kBAAiB,YAAY;AAC/B,WAAOA;;AAET,MAAIA,UAAS,MAAM;AACjB,QAAI,oBAAoBA,MAAK,GAAG;AAC9B,aAAO,sBAAsBA,MAAK;;AAEpC,QAAI,YAAYA,MAAK,GAAG;AACtB,aAAO,cAAcA,MAAK;;AAE5B,QAAI,UAAUA,MAAK,GAAG;AACpB,aAAO,YAAYA,MAAK;;AAE1B,QAAI,gBAAgBA,MAAK,GAAG;AAC1B,aAAO,kBAAkBA,MAAK;;AAEhC,QAAI,WAAWA,MAAK,GAAG;AACrB,aAAO,aAAaA,MAAK;;AAE3B,QAAI,qBAAqBA,MAAK,GAAG;AAC/B,aAAO,uBAAuBA,MAAK;;;AAIvC,QAAM,iCAAiCA,MAAK;AAC9C;AA1BgB;AAgCV,SAAU,sBAAyB,KAAQ;AAC/C,SAAO,IAAI,WAAW,SAAC,YAAyB;AAC9C,QAAM,MAAM,IAAI,UAAiB,EAAC;AAClC,QAAI,WAAW,IAAI,SAAS,GAAG;AAC7B,aAAO,IAAI,UAAU,UAAU;;AAGjC,UAAM,IAAI,UAAU,gEAAgE;EACtF,CAAC;AACH;AATgB;AAkBV,SAAU,cAAiB,OAAmB;AAClD,SAAO,IAAI,WAAW,SAAC,YAAyB;AAU9C,aAAS,IAAI,GAAG,IAAI,MAAM,UAAU,CAAC,WAAW,QAAQ,KAAK;AAC3D,iBAAW,KAAK,MAAM,CAAC,CAAC;;AAE1B,eAAW,SAAQ;EACrB,CAAC;AACH;AAhBgB;AAkBV,SAAU,YAAe,SAAuB;AACpD,SAAO,IAAI,WAAW,SAAC,YAAyB;AAC9C,YACG,KACC,SAAC,OAAK;AACJ,UAAI,CAAC,WAAW,QAAQ;AACtB,mBAAW,KAAK,KAAK;AACrB,mBAAW,SAAQ;;IAEvB,GACA,SAAC,KAAQ;AAAK,aAAA,WAAW,MAAM,GAAG;IAApB,CAAqB,EAEpC,KAAK,MAAM,oBAAoB;EACpC,CAAC;AACH;AAdgB;AAgBV,SAAU,aAAgB,UAAqB;AACnD,SAAO,IAAI,WAAW,SAAC,YAAyB;;;AAC9C,eAAoB,aAAA,SAAA,QAAQ,GAAA,eAAA,WAAA,KAAA,GAAA,CAAA,aAAA,MAAA,eAAA,WAAA,KAAA,GAAE;AAAzB,YAAM,QAAK,aAAA;AACd,mBAAW,KAAK,KAAK;AACrB,YAAI,WAAW,QAAQ;AACrB;;;;;;;;;;;;AAGJ,eAAW,SAAQ;EACrB,CAAC;AACH;AAVgB;AAYV,SAAU,kBAAqB,eAA+B;AAClE,SAAO,IAAI,WAAW,SAAC,YAAyB;AAC9C,YAAQ,eAAe,UAAU,EAAE,MAAM,SAAC,KAAG;AAAK,aAAA,WAAW,MAAM,GAAG;IAApB,CAAqB;EACzE,CAAC;AACH;AAJgB;AAMV,SAAU,uBAA0B,gBAAqC;AAC7E,SAAO,kBAAkB,mCAAmC,cAAc,CAAC;AAC7E;AAFgB;AAIhB,SAAe,QAAW,eAAiC,YAAyB;;;;;;;;;AACxD,4BAAA,cAAA,aAAa;;;;;;AAAtB,kBAAK,kBAAA;AACpB,qBAAW,KAAK,KAAK;AAGrB,cAAI,WAAW,QAAQ;AACrB,mBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGJ,qBAAW,SAAQ;;;;;;AATN;;;ACvGT,SAAU,gBACd,oBACA,WACA,MACAC,QACA,QAAc;AADd,MAAAA,WAAA,QAAA;AAAA,IAAAA,SAAA;EAAS;AACT,MAAA,WAAA,QAAA;AAAA,aAAA;EAAc;AAEd,MAAM,uBAAuB,UAAU,SAAS,WAAA;AAC9C,SAAI;AACJ,QAAI,QAAQ;AACV,yBAAmB,IAAI,KAAK,SAAS,MAAMA,MAAK,CAAC;WAC5C;AACL,WAAK,YAAW;;EAEpB,GAAGA,MAAK;AAER,qBAAmB,IAAI,oBAAoB;AAE3C,MAAI,CAAC,QAAQ;AAKX,WAAO;;AAEX;AAzBgB;;;ACwCV,SAAU,UAAa,WAA0BC,QAAS;AAAT,MAAAA,WAAA,QAAA;AAAA,IAAAA,SAAA;EAAS;AAC9D,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAChC,WAAO,UACL,yBACE,YACA,SAAC,OAAK;AAAK,aAAA,gBAAgB,YAAY,WAAW,WAAA;AAAM,eAAA,WAAW,KAAK,KAAK;MAArB,GAAwBA,MAAK;IAA1E,GACX,WAAA;AAAM,aAAA,gBAAgB,YAAY,WAAW,WAAA;AAAM,eAAA,WAAW,SAAQ;MAAnB,GAAuBA,MAAK;IAAzE,GACN,SAAC,KAAG;AAAK,aAAA,gBAAgB,YAAY,WAAW,WAAA;AAAM,eAAA,WAAW,MAAM,GAAG;MAApB,GAAuBA,MAAK;IAAzE,CAA0E,CACpF;EAEL,CAAC;AACH;AAXgB;;;ACIV,SAAU,YAAe,WAA0BC,QAAiB;AAAjB,MAAAA,WAAA,QAAA;AAAA,IAAAA,SAAA;EAAiB;AACxE,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAChC,eAAW,IAAI,UAAU,SAAS,WAAA;AAAM,aAAA,OAAO,UAAU,UAAU;IAA3B,GAA8BA,MAAK,CAAC;EAC9E,CAAC;AACH;AAJgB;;;ACzDV,SAAU,mBAAsBC,QAA6B,WAAwB;AACzF,SAAO,UAAUA,MAAK,EAAE,KAAK,YAAY,SAAS,GAAG,UAAU,SAAS,CAAC;AAC3E;AAFgB;;;ACAV,SAAU,gBAAmBC,QAAuB,WAAwB;AAChF,SAAO,UAAUA,MAAK,EAAE,KAAK,YAAY,SAAS,GAAG,UAAU,SAAS,CAAC;AAC3E;AAFgB;;;ACFV,SAAU,cAAiBC,QAAqB,WAAwB;AAC5E,SAAO,IAAI,WAAc,SAAC,YAAU;AAElC,QAAI,IAAI;AAER,WAAO,UAAU,SAAS,WAAA;AACxB,UAAI,MAAMA,OAAM,QAAQ;AAGtB,mBAAW,SAAQ;aACd;AAGL,mBAAW,KAAKA,OAAM,GAAG,CAAC;AAI1B,YAAI,CAAC,WAAW,QAAQ;AACtB,eAAK,SAAQ;;;IAGnB,CAAC;EACH,CAAC;AACH;AAvBgB;;;ACQV,SAAU,iBAAoBC,QAAoB,WAAwB;AAC9E,SAAO,IAAI,WAAc,SAAC,YAAU;AAClC,QAAIC;AAKJ,oBAAgB,YAAY,WAAW,WAAA;AAErC,MAAAA,YAAYD,OAAc,QAAe,EAAC;AAE1C,sBACE,YACA,WACA,WAAA;;AACE,YAAI;AACJ,YAAI;AACJ,YAAI;AAEF,UAAC,KAAkBC,UAAS,KAAI,GAA7B,QAAK,GAAA,OAAE,OAAI,GAAA;iBACP,KAAK;AAEZ,qBAAW,MAAM,GAAG;AACpB;;AAGF,YAAI,MAAM;AAKR,qBAAW,SAAQ;eACd;AAEL,qBAAW,KAAK,KAAK;;MAEzB,GACA,GACA,IAAI;IAER,CAAC;AAMD,WAAO,WAAA;AAAM,aAAA,WAAWA,cAAQ,QAARA,cAAQ,SAAA,SAARA,UAAU,MAAM,KAAKA,UAAS,OAAM;IAA/C;EACf,CAAC;AACH;AAhDgB;;;ACPV,SAAU,sBAAyBC,QAAyB,WAAwB;AACxF,MAAI,CAACA,QAAO;AACV,UAAM,IAAI,MAAM,yBAAyB;;AAE3C,SAAO,IAAI,WAAc,SAAC,YAAU;AAClC,oBAAgB,YAAY,WAAW,WAAA;AACrC,UAAMC,YAAWD,OAAM,OAAO,aAAa,EAAC;AAC5C,sBACE,YACA,WACA,WAAA;AACE,QAAAC,UAAS,KAAI,EAAG,KAAK,SAAC,QAAM;AAC1B,cAAI,OAAO,MAAM;AAGf,uBAAW,SAAQ;iBACd;AACL,uBAAW,KAAK,OAAO,KAAK;;QAEhC,CAAC;MACH,GACA,GACA,IAAI;IAER,CAAC;EACH,CAAC;AACH;AA1BgB;;;ACCV,SAAU,2BAA8BC,QAA8B,WAAwB;AAClG,SAAO,sBAAsB,mCAAmCA,MAAK,GAAG,SAAS;AACnF;AAFgB;;;ACsBV,SAAU,UAAaC,QAA2B,WAAwB;AAC9E,MAAIA,UAAS,MAAM;AACjB,QAAI,oBAAoBA,MAAK,GAAG;AAC9B,aAAO,mBAAmBA,QAAO,SAAS;;AAE5C,QAAI,YAAYA,MAAK,GAAG;AACtB,aAAO,cAAcA,QAAO,SAAS;;AAEvC,QAAI,UAAUA,MAAK,GAAG;AACpB,aAAO,gBAAgBA,QAAO,SAAS;;AAEzC,QAAI,gBAAgBA,MAAK,GAAG;AAC1B,aAAO,sBAAsBA,QAAO,SAAS;;AAE/C,QAAI,WAAWA,MAAK,GAAG;AACrB,aAAO,iBAAiBA,QAAO,SAAS;;AAE1C,QAAI,qBAAqBA,MAAK,GAAG;AAC/B,aAAO,2BAA2BA,QAAO,SAAS;;;AAGtD,QAAM,iCAAiCA,MAAK;AAC9C;AAtBgB;;;AC0EV,SAAU,KAAQC,QAA2B,WAAyB;AAC1E,SAAO,YAAY,UAAUA,QAAO,SAAS,IAAI,UAAUA,MAAK;AAClE;AAFgB;;;ACtBV,SAAU,KAAE;AAAI,MAAA,OAAA,CAAA;WAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAiC;AAAjC,SAAA,EAAA,IAAA,UAAA,EAAA;;AACpB,MAAM,YAAY,aAAa,IAAI;AACnC,SAAO,KAAK,MAAa,SAAS;AACpC;AAHgB;;;ACyCV,SAAU,WAAW,qBAA0B,WAAyB;AAC5E,MAAM,eAAe,WAAW,mBAAmB,IAAI,sBAAsB,WAAA;AAAM,WAAA;EAAA;AACnF,MAAM,OAAO,gCAAC,YAA6B;AAAK,WAAA,WAAW,MAAM,aAAY,CAAE;EAA/B,GAAnC;AACb,SAAO,IAAI,WAAW,YAAY,SAAC,YAAU;AAAK,WAAA,UAAU,SAAS,MAAa,GAAG,UAAU;EAA7C,IAAiD,IAAI;AACzG;AAJgB;;;AC5GhB,IAAY;CAAZ,SAAYC,mBAAgB;AAC1B,EAAAA,kBAAA,MAAA,IAAA;AACA,EAAAA,kBAAA,OAAA,IAAA;AACA,EAAAA,kBAAA,UAAA,IAAA;AACF,GAJY,qBAAA,mBAAgB,CAAA,EAAA;AAsB5B,IAAA,eAAA,WAAA;AA6BE,WAAAC,cAA4B,MAAuC,OAA2B,OAAW;AAA7E,SAAA,OAAA;AAAuC,SAAA,QAAA;AAA2B,SAAA,QAAA;AAC5F,SAAK,WAAW,SAAS;EAC3B;AAFA,SAAAA,eAAA;AAUA,EAAAA,cAAA,UAAA,UAAA,SAAQ,UAA4B;AAClC,WAAO,oBAAoB,MAAmC,QAAQ;EACxE;AA4BA,EAAAA,cAAA,UAAA,KAAA,SAAG,aAAiCC,eAAmC,iBAA4B;AAC3F,QAAA,KAAyB,MAAvB,OAAI,GAAA,MAAE,QAAK,GAAA,OAAE,QAAK,GAAA;AAC1B,WAAO,SAAS,MAAM,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAc,KAAM,IAAI,SAAS,MAAMA,kBAAY,QAAZA,kBAAY,SAAA,SAAZA,cAAe,KAAK,IAAI,oBAAe,QAAf,oBAAe,SAAA,SAAf,gBAAe;EACtG;AAqCA,EAAAD,cAAA,UAAA,SAAA,SAAO,gBAA2D,OAA4B,UAAqB;;AACjH,WAAO,YAAW,KAAC,oBAAsB,QAAA,OAAA,SAAA,SAAA,GAAE,IAAI,IAC3C,KAAK,QAAQ,cAAoC,IACjD,KAAK,GAAG,gBAAsC,OAAc,QAAe;EACjF;AASA,EAAAA,cAAA,UAAA,eAAA,WAAA;AACQ,QAAA,KAAyB,MAAvB,OAAI,GAAA,MAAE,QAAK,GAAA,OAAE,QAAK,GAAA;AAE1B,QAAM,SACJ,SAAS,MAEL,GAAG,KAAM,IAEX,SAAS,MAEP,WAAW,WAAA;AAAM,aAAA;IAAA,CAAK,IAExB,SAAS,MAEP,QAEA;AACN,QAAI,CAAC,QAAQ;AAIX,YAAM,IAAI,UAAU,kCAAgC,IAAM;;AAE5D,WAAO;EACT;AAaO,EAAAA,cAAA,aAAP,SAAqB,OAAQ;AAC3B,WAAO,IAAIA,cAAa,KAAK,KAAK;EACpC;AAYO,EAAAA,cAAA,cAAP,SAAmB,KAAS;AAC1B,WAAO,IAAIA,cAAa,KAAK,QAAW,GAAG;EAC7C;AAUO,EAAAA,cAAA,iBAAP,WAAA;AACE,WAAOA,cAAa;EACtB;AAvCe,EAAAA,cAAA,uBAAuB,IAAIA,cAAa,GAAG;AAwC5D,SAAAA;EA5LA;AAqMM,SAAU,oBAAuB,cAAyC,UAA4B;;AACpG,MAAA,KAAyB,cAAvB,OAAI,GAAA,MAAE,QAAK,GAAA,OAAE,QAAK,GAAA;AAC1B,MAAI,OAAO,SAAS,UAAU;AAC5B,UAAM,IAAI,UAAU,sCAAsC;;AAE5D,WAAS,OAAM,KAAA,SAAS,UAAI,QAAA,OAAA,SAAA,SAAA,GAAA,KAAb,UAAgB,KAAM,IAAI,SAAS,OAAM,KAAA,SAAS,WAAK,QAAA,OAAA,SAAA,SAAA,GAAA,KAAd,UAAiB,KAAK,KAAI,KAAA,SAAS,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAA,KAAjB,QAAQ;AAC5F;AANgB;;;AChOV,SAAU,YAAY,OAAU;AACpC,SAAO,iBAAiB,QAAQ,CAAC,MAAM,KAAY;AACrD;AAFgB;;;ACuCV,SAAU,IAAU,SAAyC,SAAa;AAC9E,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAEhC,QAAI,QAAQ;AAGZ,WAAO,UACL,yBAAyB,YAAY,SAAC,OAAQ;AAG5C,iBAAW,KAAK,QAAQ,KAAK,SAAS,OAAO,OAAO,CAAC;IACvD,CAAC,CAAC;EAEN,CAAC;AACH;AAdgB;;;AC1BV,SAAU,eACd,QACA,YACA,SACA,YACA,cACA,QACA,mBACA,qBAAgC;AAGhC,MAAM,SAAc,CAAA;AAEpB,MAAI,SAAS;AAEb,MAAI,QAAQ;AAEZ,MAAI,aAAa;AAKjB,MAAM,gBAAgB,kCAAA;AAIpB,QAAI,cAAc,CAAC,OAAO,UAAU,CAAC,QAAQ;AAC3C,iBAAW,SAAQ;;EAEvB,GAPsB;AAUtB,MAAM,YAAY,gCAAC,OAAQ;AAAK,WAAC,SAAS,aAAa,WAAW,KAAK,IAAI,OAAO,KAAK,KAAK;EAA5D,GAAd;AAElB,MAAM,aAAa,gCAAC,OAAQ;AAI1B,cAAU,WAAW,KAAK,KAAY;AAItC;AAKA,QAAI,gBAAgB;AAGpB,cAAU,QAAQ,OAAO,OAAO,CAAC,EAAE,UACjC,yBACE,YACA,SAAC,YAAU;AAGT,uBAAY,QAAZ,iBAAY,SAAA,SAAZ,aAAe,UAAU;AAEzB,UAAI,QAAQ;AAGV,kBAAU,UAAiB;aACtB;AAEL,mBAAW,KAAK,UAAU;;IAE9B,GACA,WAAA;AAGE,sBAAgB;IAClB,GAEA,QACA,WAAA;AAIE,UAAI,eAAe;AAKjB,YAAI;AAIF;;AAME,gBAAM,gBAAgB,OAAO,MAAK;AAIlC,gBAAI,mBAAmB;AACrB,8BAAgB,YAAY,mBAAmB,WAAA;AAAM,uBAAA,WAAW,aAAa;cAAxB,CAAyB;mBACzE;AACL,yBAAW,aAAa;;;AAR5B,iBAAO,OAAO,UAAU,SAAS,YAAU;;;AAY3C,wBAAa;iBACN,KAAK;AACZ,qBAAW,MAAM,GAAG;;;IAG1B,CAAC,CACF;EAEL,GA9EmB;AAiFnB,SAAO,UACL,yBAAyB,YAAY,WAAW,WAAA;AAE9C,iBAAa;AACb,kBAAa;EACf,CAAC,CAAC;AAKJ,SAAO,WAAA;AACL,4BAAmB,QAAnB,wBAAmB,SAAA,SAAnB,oBAAmB;EACrB;AACF;AAhIgB;;;AC4DV,SAAU,SACd,SACA,gBACA,YAA6B;AAA7B,MAAA,eAAA,QAAA;AAAA,iBAAA;EAA6B;AAE7B,MAAI,WAAW,cAAc,GAAG;AAE9B,WAAO,SAAS,SAAC,GAAG,GAAC;AAAK,aAAA,IAAI,SAAC,GAAQ,IAAU;AAAK,eAAA,eAAe,GAAG,GAAG,GAAG,EAAE;MAA1B,CAA2B,EAAE,UAAU,QAAQ,GAAG,CAAC,CAAC,CAAC;IAAjF,GAAoF,UAAU;aAC/G,OAAO,mBAAmB,UAAU;AAC7C,iBAAa;;AAGf,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAAK,WAAA,eAAe,QAAQ,YAAY,SAAS,UAAU;EAAtD,CAAuD;AAChG;AAbgB;;;ACjBV,SAAU,SAAyC,YAA6B;AAA7B,MAAA,eAAA,QAAA;AAAA,iBAAA;EAA6B;AACpF,SAAO,SAAS,UAAU,UAAU;AACtC;AAFgB;;;ACJV,SAAU,YAAS;AACvB,SAAO,SAAS,CAAC;AACnB;AAFgB;;;ACqDV,SAAU,SAAM;AAAC,MAAA,OAAA,CAAA;WAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAAc;AAAd,SAAA,EAAA,IAAA,UAAA,EAAA;;AACrB,SAAO,UAAS,EAAG,KAAK,MAAM,aAAa,IAAI,CAAC,CAAC;AACnD;AAFgB;;;ACoBV,SAAU,MACd,SACA,qBACA,WAAyC;AAFzC,MAAA,YAAA,QAAA;AAAA,cAAA;EAA0B;AAE1B,MAAA,cAAA,QAAA;AAAA,gBAAA;EAAyC;AAIzC,MAAI,mBAAmB;AAEvB,MAAI,uBAAuB,MAAM;AAI/B,QAAI,YAAY,mBAAmB,GAAG;AACpC,kBAAY;WACP;AAGL,yBAAmB;;;AAIvB,SAAO,IAAI,WAAW,SAAC,YAAU;AAI/B,QAAI,MAAM,YAAY,OAAO,IAAI,CAAC,UAAU,UAAW,IAAG,IAAK;AAE/D,QAAI,MAAM,GAAG;AAEX,YAAM;;AAIR,QAAI,IAAI;AAGR,WAAO,UAAU,SAAS,WAAA;AACxB,UAAI,CAAC,WAAW,QAAQ;AAEtB,mBAAW,KAAK,GAAG;AAEnB,YAAI,KAAK,kBAAkB;AAGzB,eAAK,SAAS,QAAW,gBAAgB;eACpC;AAEL,qBAAW,SAAQ;;;IAGzB,GAAG,GAAG;EACR,CAAC;AACH;AArDgB;;;AC7CV,SAAU,QAAK;AAAC,MAAA,OAAA,CAAA;WAAA,KAAA,GAAA,KAAA,UAAA,QAAA,MAA8D;AAA9D,SAAA,EAAA,IAAA,UAAA,EAAA;;AACpB,MAAM,YAAY,aAAa,IAAI;AACnC,MAAM,aAAa,UAAU,MAAM,QAAQ;AAC3C,MAAM,UAAU;AAChB,SAAO,CAAC,QAAQ,SAEZ,QACA,QAAQ,WAAW,IAEnB,UAAU,QAAQ,CAAC,CAAC,IAEpB,SAAS,UAAU,EAAE,KAAK,SAAS,SAAS,CAAC;AACnD;AAZgB;;;AC3BV,SAAU,OAAU,WAAiD,SAAa;AACtF,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAEhC,QAAI,QAAQ;AAIZ,WAAO,UAIL,yBAAyB,YAAY,SAAC,OAAK;AAAK,aAAA,UAAU,KAAK,SAAS,OAAO,OAAO,KAAK,WAAW,KAAK,KAAK;IAAhE,CAAiE,CAAC;EAEtH,CAAC;AACH;AAdgB;;;ACbV,SAAU,KAAQ,OAAa;AACnC,SAAO,SAAS,IAEZ,WAAA;AAAM,WAAA;EAAA,IACN,QAAQ,SAAC,QAAQ,YAAU;AACzB,QAAI,OAAO;AACX,WAAO,UACL,yBAAyB,YAAY,SAAC,OAAK;AAIzC,UAAI,EAAE,QAAQ,OAAO;AACnB,mBAAW,KAAK,KAAK;AAIrB,YAAI,SAAS,MAAM;AACjB,qBAAW,SAAQ;;;IAGzB,CAAC,CAAC;EAEN,CAAC;AACP;AAvBgB;;;ACPV,SAAU,iBAAc;AAC5B,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAChC,WAAO,UAAU,yBAAyB,YAAY,IAAI,CAAC;EAC7D,CAAC;AACH;AAJgB;;;ACKV,SAAU,MAAS,OAAQ;AAC/B,SAAO,IAAI,WAAA;AAAM,WAAA;EAAA,CAAK;AACxB;AAFgB;;;AC8CV,SAAU,UACd,uBACA,mBAAmC;AAEnC,MAAI,mBAAmB;AAErB,WAAO,SAAC,QAAqB;AAC3B,aAAA,OAAO,kBAAkB,KAAK,KAAK,CAAC,GAAG,eAAc,CAAE,GAAG,OAAO,KAAK,UAAU,qBAAqB,CAAC,CAAC;IAAvG;;AAGJ,SAAO,SAAS,SAAC,OAAO,OAAK;AAAK,WAAA,UAAU,sBAAsB,OAAO,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,KAAK,CAAC;EAAzE,CAA0E;AAC9G;AAXgB;;;AC9BV,SAAU,MAAS,KAAoB,WAAyC;AAAzC,MAAA,cAAA,QAAA;AAAA,gBAAA;EAAyC;AACpF,MAAM,WAAW,MAAM,KAAK,SAAS;AACrC,SAAO,UAAU,WAAA;AAAM,WAAA;EAAA,CAAQ;AACjC;AAHgB;;;AC3DhB,IAAI,OAAO,wBAAC,YAAY,WAAW;AACjC,QAAM,SAAS,CAAC,EAAE;AAClB,WAAS,IAAI,GAAG,MAAM,QAAQ,SAAS,GAAG,IAAI,KAAK,KAAK;AACtD,WAAO,CAAC,KAAK,QAAQ,CAAC;AACtB,UAAM,WAAW,MAAM,QAAQ,OAAO,CAAC,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC;AACjF,aAAS,KAAK,GAAG,OAAO,SAAS,QAAQ,KAAK,MAAM,MAAM;AACxD,YAAM,QAAQ,SAAS,EAAE;AACzB,UAAI,OAAO,UAAU,UAAU;AAC7B,uBAAe,OAAO,MAAM;AAAA,MAC9B,WAAW,OAAO,UAAU,UAAU;AACpC;AACA,eAAO,CAAC,KAAK;AAAA,MACf,WAAW,OAAO,UAAU,aAAa,UAAU,QAAQ,UAAU,QAAQ;AAC3E;AAAA,MACF,WAAW,OAAO,UAAU,YAAY,MAAM,WAAW;AACvD,YAAI,MAAM,WAAW;AACnB,iBAAO,QAAQ,IAAI,KAAK;AAAA,QAC1B,OAAO;AACL,gBAAM,MAAM,MAAM,SAAS;AAC3B,cAAI,eAAe,SAAS;AAC1B,mBAAO,QAAQ,IAAI,GAAG;AAAA,UACxB,OAAO;AACL,mBAAO,CAAC,KAAK;AAAA,UACf;AAAA,QACF;AAAA,MACF,WAAW,iBAAiB,SAAS;AACnC,eAAO,QAAQ,IAAI,KAAK;AAAA,MAC1B,OAAO;AACL,uBAAe,MAAM,SAAS,GAAG,MAAM;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AACA,SAAO,CAAC,KAAK,QAAQ,GAAG,EAAE;AAC1B,SAAO,OAAO,WAAW,IAAI,eAAe,SAAS,IAAI,oBAAoB,IAAI,OAAO,CAAC,GAAG,OAAO,SAAS,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,IAAI,qBAAqB,QAAQ,OAAO,SAAS;AAClL,GAlCW;;;ACSJ,SAAS,mBAAmB,QAAgB,YAAoB,IAAyB;AAC9F,QAAM,SAAwB,CAAC;AAC/B,MAAI,cAAc;AAElB,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAM,OAAO,OAAO,CAAC;AAErB,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,uBAAe;AACf;AAAA,MAEF,KAAK;AACH,eAAO,KAAK,EAAE,MAAM,aAAa,MAAM,WAAW,CAAC;AACnD;AAAA,MAEF,KAAK;AACH,eAAO,KAAK,EAAE,MAAM,aAAa,MAAM,QAAQ,CAAC;AAChD;AAAA,MAEF,KAAK;AACH,cAAM,aAAa,OAAO,QAAQ,KAAK,CAAC;AACxC,YAAI,eAAe,IAAI;AACrB,gBAAM,IAAI,MAAM,kCAAkC;AAAA,QACpD;AACA,cAAM,eAAe,OAAO,UAAU,IAAI,GAAG,UAAU;AACvD,mBAAW,aAAa,cAAc;AACpC,cAAI,cAAc,KAAK;AACrB,mBAAO,KAAK,EAAE,MAAM,aAAa,OAAO,WAAW,MAAM,OAAO,CAAC;AAAA,UACnE;AAAA,QACF;AACA,YAAI;AACJ,uBAAe;AACf;AAAA,MAEF,KAAK;AACH,cAAM,IAAI,MAAM,gCAAgC;AAAA,MAElD,KAAK;AACH;AAAA,MAEF;AACE,eAAO,KAAK,EAAE,MAAM,aAAa,OAAO,MAAM,MAAM,OAAO,CAAC;AAC5D,uBAAe;AACf;AAAA,IACJ;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA,UAAU;AAAA,EACZ;AACF;AApDgB;;;ACQT,IAAM,eAAyB;AAAA,EACpC,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,WAAW;AAAA,EACX,UAAU;AAAA,EACV,WAAW;AAAA,EACX,cAAc;AAAA,EACd,SAAS;AAAA;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AACb;AAOO,SAAS,yBAAyB,SAA8B,UAAyB,CAAC,GAAW;AAC1G,QAAM,QAAQ,EAAE,GAAG,cAAc,GAAG,QAAQ,MAAM;AAClD,QAAM,EAAE,SAAS,WAAW,WAAW,WAAW,cAAc,SAAS,IAAI;AAG7E,QAAM,cAAc,MAAM,qBAAqB;AAC/C,QAAM,kBAAkB,eAAe;AACvC,QAAM,YAAY,WAAW;AAC7B,QAAM,oBAAoB,kBAAkB,YAAY;AAExD,QAAM,QAAQ,QAAQ,WAAW,YAAY,oBAAoB;AACjE,QAAM,SAAS,YAAY,UAAU;AAErC,MAAI,MAAM,kDAAkD,KAAK,aAAa,MAAM,kBAAkB,KAAK,IAAI,MAAM;AACrH,SAAO,gBAAgB,KAAK,aAAa,MAAM,WAAW,MAAM,eAAe;AAE/E,QAAM,IAAI,UAAU,YAAY;AAChC,QAAM,SAAS;AACf,QAAM,OAAO,SAAS,QAAQ,WAAW;AAEzC,SAAO,aAAa,MAAM,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,aAAa,MAAM,SAAS,mBAAmB,SAAS;AAEnH,MAAI,QAAQ,MAAM;AAChB,WAAO,YAAY,iBAAiB,QAAQ,UAAU,CAAC,gDAAgD,QAAQ,WAAW,MAAM,SAAS,KAAK,QAAQ,IAAI;AAAA,EAC5J;AAEA,UAAQ,OAAO,QAAQ,CAAC,UAAU;AAChC,UAAM,IAAI,SAAS,MAAM,OAAO;AAEhC,YAAQ,MAAM,MAAM;AAAA,MAClB,KAAK;AACH,cAAM,cAAc,MAAM,qBAAqB,MAAM;AACrD,cAAME,eAAc,MAAM,qBAAqB;AAC/C,eAAO,eAAe,CAAC,SAAS,CAAC,QAAQ,YAAY,WAAW,MAAM,UAAU,aAAa,WAAW,mBAAmBA,YAAW;AACtI,YAAI,MAAM,OAAO;AACf,iBAAO,YAAY,CAAC,QAAQ,IAAI,CAAC,qEAAqE,QAAQ,WAAW,MAAM,SAAS,KAAK,MAAM,KAAK;AAAA,QAC1J;AACA;AAAA,MAEF,KAAK;AACH,eAAO,aAAa,IAAI,YAAY,SAAS,IAAI,YAAY,SAAS,IAAI,YAAY,SAAS,IAAI,YAAY,aAAa,MAAM,UAAU,mBAC1I,YAAY,GACd;AACA,eAAO,aAAa,IAAI,YAAY,SAAS,IAAI,YAAY,SAAS,IAAI,YAAY,SAAS,IAAI,YAAY,aAAa,MAAM,UAAU,mBAC1I,YAAY,GACd;AACA;AAAA,MAEF,KAAK;AACH,eAAO,aAAa,CAAC,SAAS,IAAI,eAAe,GAAG,SAAS,CAAC,SAAS,IAAI,eAAe,GAAG,aAAa,MAAM,aAAa,mBAAmB,YAAY,CAAC;AAC7J;AAAA,IACJ;AAAA,EACF,CAAC;AAED,SAAO;AAEP,SAAO;AACT;AAzDgB;;;ACvChB,IAAA,kBAAA,2BAAA;AACE,WAAAC,iBAAmB,iBACA,mBAAoC;AAApC,QAAA,sBAAA,QAAA;AAAA,0BAAA;IAAoC;AADpC,SAAA,kBAAA;AACA,SAAA,oBAAA;EACnB;AAFA,SAAAA,kBAAA;AAGF,SAAAA;AAAA,EAJA;;;ACGA,IAAA,uBAAA,WAAA;AAAA,WAAAC,wBAAA;AACS,SAAA,gBAAmC,CAAA;EAiB5C;AAlBA,SAAAA,uBAAA;AAKE,EAAAA,sBAAA,UAAA,qBAAA,WAAA;AACE,SAAK,cAAc,KAAK,IAAI,gBAAgB,KAAK,UAAU,IAAG,CAAE,CAAC;AACjE,WAAO,KAAK,cAAc,SAAS;EACrC;AAEA,EAAAA,sBAAA,UAAA,uBAAA,SAAqB,OAAa;AAChC,QAAM,mBAAmB,KAAK;AAC9B,QAAM,qBAAqB,iBAAiB,KAAK;AACjD,qBAAiB,KAAK,IAAI,IAAI,gBAC5B,mBAAmB,iBACnB,KAAK,UAAU,IAAG,CAAE;EAExB;AACF,SAAAA;AAAA,EAlBA;;;ACHM,SAAU,YAAY,aAAkB,WAAgB;AAC5D,WAAS,IAAI,GAAG,MAAM,UAAU,QAAQ,IAAI,KAAK,KAAK;AACpD,QAAM,WAAW,UAAU,CAAC;AAC5B,QAAM,eAAe,OAAO,oBAAoB,SAAS,SAAS;AAClE,aAAS,IAAI,GAAG,OAAO,aAAa,QAAQ,IAAI,MAAM,KAAK;AACzD,UAAM,SAAO,aAAa,CAAC;AAC3B,kBAAY,UAAU,MAAI,IAAI,SAAS,UAAU,MAAI;;;AAG3D;AATgB;;;ACUhB,IAAA,iBAAA,SAAA,QAAA;AAAuC,YAAAC,iBAAA,MAAA;AAQrC,WAAAA,gBAAmB,UAAyB,WAAoB;AAAhE,QAAA,QACE,OAAA,KAAA,MAAM,SAA+B,YAA2B;AAC9D,UAAMC,cAAgC;AACtC,UAAM,QAAQA,YAAW,mBAAkB;AAC3C,UAAM,eAAe,IAAI,aAAY;AACrC,mBAAa,IACX,IAAI,aAAa,WAAA;AACf,QAAAA,YAAW,qBAAqB,KAAK;MACvC,CAAC,CAAC;AAEJ,MAAAA,YAAW,iBAAiB,UAAU;AACtC,aAAO;IACT,CAAC,KAAC;AAZe,UAAA,WAAA;AAPZ,UAAA,gBAAmC,CAAA;AAoBxC,UAAK,YAAY;;EACnB;AAdA,SAAAD,iBAAA;AAgBA,EAAAA,gBAAA,UAAA,mBAAA,SAAiB,YAA2B;AAC1C,QAAM,iBAAiB,KAAK,SAAS;AACrC,aAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACvC,UAAM,UAAU,KAAK,SAAS,CAAC;AAC/B,iBAAW,IACT,KAAK,UAAU,SACb,SAAC,OAAK;AACE,YAAA,KAAyD,OAA5C,eAAY,GAAA,QAAA,cAAgB,cAAW,GAAA;AAC1D,4BAAoB,cAAc,WAAW;MAC/C,GACA,QAAQ,OACR,EAAE,SAAS,WAAU,CAAE,CACxB;;EAGP;AACF,SAAAA;AAAA,EAxCuC,UAAU;AAyCjD,YAAY,gBAAgB,CAAC,oBAAoB,CAAC;;;ACzClD,IAAA,gBAAA,SAAA,QAAA;AAAsC,YAAAE,gBAAA,MAAA;AAQpC,WAAAA,eAAmB,UAAyB,WAAoB;AAAhE,QAAA,QACE,OAAA,KAAA,IAAA,KAAO;AADU,UAAA,WAAA;AAPZ,UAAA,gBAAmC,CAAA;AASxC,UAAK,YAAY;;EACnB;AAHA,SAAAA,gBAAA;AAMU,EAAAA,eAAA,UAAA,aAAV,SAAqB,YAA2B;AAC9C,QAAM,UAA4B;AAClC,QAAM,QAAQ,QAAQ,mBAAkB;AACxC,QAAM,eAAe,IAAI,aAAY;AACrC,iBAAa,IACX,IAAI,aAAa,WAAA;AACf,cAAQ,qBAAqB,KAAK;IACpC,CAAC,CAAC;AAEJ,iBAAa,IAAI,OAAA,UAAM,WAAU,KAAA,MAAC,UAAU,CAAC;AAC7C,WAAO;EACT;AAEA,EAAAA,eAAA,UAAA,QAAA,WAAA;AACE,QAAM,UAAU;AAChB,QAAM,iBAAiB,QAAQ,SAAS;kDAE/BC,IAAC;AACR,OAAC,WAAA;AACO,YAAA,KAA0B,QAAQ,SAASA,EAAC,GAA1C,eAAY,GAAA,cAAE,QAAK,GAAA;AAE3B,gBAAQ,UAAU,SAAS,WAAA;AACzB,8BAAoB,cAAc,OAAO;QAC3C,GAAG,KAAK;MACV,GAAE;;AAPJ,aAAS,IAAI,GAAG,IAAI,gBAAgB,KAAG;cAA9B,CAAC;;EASZ;AACF,SAAAD;AAAA,EAzCsC,OAAO;AA0C7C,YAAY,eAAe,CAAC,oBAAoB,CAAC;;;ACnCjD,IAAM,kBAA0B;AAqBhC,IAAA,gBAAA,SAAA,QAAA;AAAmC,YAAAE,gBAAA,MAAA;AAiCjC,WAAAA,eAAmB,iBAA+D;AAAlF,QAAA,QACE,OAAA,KAAA,MAAM,eAAe,eAAe,KAAC;AADpB,UAAA,kBAAA;AAtBH,UAAA,iBAAuC,CAAA;AAKvC,UAAA,kBAAyC,CAAA;AAKjD,UAAA,aAA8B,CAAA;AAM9B,UAAA,UAAU;;EAQlB;AAFA,SAAAA,gBAAA;AAIA,EAAAA,eAAA,UAAA,aAAA,SAAW,SAAe;AACxB,QAAM,UAAU,KAAK,UAAU,QAAQ,KAAI,EAAG,QAAQ,GAAG,IAAI,QAAQ,QAAQ,GAAG;AAChF,QAAI,YAAY,IAAI;AAClB,YAAM,IAAI,MAAM,6DAA6D;;AAE/E,WAAO,UAAUA,eAAc;EACjC;AAOA,EAAAA,eAAA,UAAA,uBAAA,SAAiC,SAAiB,QAAkC,OAAW;AAC7F,QAAI,QAAQ,QAAQ,GAAG,MAAM,IAAI;AAC/B,YAAM,IAAI,MAAM,qDAAqD;;AAEvE,QAAI,QAAQ,QAAQ,GAAG,MAAM,IAAI;AAC/B,YAAM,IAAI,MAAM,uDAAuD;;AAEzE,QAAM,WAAWA,eAAc,aAAa,SAAS,QAAQ,OAAO,QAAW,KAAK,OAAO;AAC3F,QAAM,OAAO,IAAI,eAAkB,UAAU,IAAI;AACjD,SAAK,gBAAgB,KAAK,IAAI;AAC9B,WAAO;EACT;AAOA,EAAAA,eAAA,UAAA,sBAAA,SAAgC,SAAiB,QAAkC,OAAW;AAC5F,QAAI,QAAQ,QAAQ,GAAG,MAAM,IAAI;AAC/B,YAAM,IAAI,MAAM,sDAAsD;;AAExE,QAAM,WAAWA,eAAc,aAAa,SAAS,QAAQ,OAAO,QAAW,KAAK,OAAO;AAC3F,QAAM,UAAU,IAAI,cAAiB,UAAU,IAAI;AACnD,SAAK,eAAe,KAAK,OAAO;AAChC,WAAO;EACT;AAEQ,EAAAA,eAAA,UAAA,6BAAR,SAAmCC,aAA6B,YAAkB;AAAlF,QAAA,QAAA;AACE,QAAM,WAA0B,CAAA;AAChC,IAAAA,YAAW,UAAU;MACnB,MAAM,gCAAC,OAAK;AACV,iBAAS,KAAK,EAAE,OAAO,MAAK,QAAQ,YAAY,cAAc,iBAAiB,KAAK,EAAC,CAAE;MACzF,GAFM;MAGN,OAAO,gCAAC,OAAK;AACX,iBAAS,KAAK,EAAE,OAAO,MAAK,QAAQ,YAAY,cAAc,kBAAkB,KAAK,EAAC,CAAE;MAC1F,GAFO;MAGP,UAAU,kCAAA;AACR,iBAAS,KAAK,EAAE,OAAO,MAAK,QAAQ,YAAY,cAAc,sBAAqB,CAAE;MACvF,GAFU;KAGX;AACD,WAAO;EACT;AAEA,EAAAD,eAAA,UAAA,mBAAA,SAAoBC,aAA2B,qBAAyC;AAAxF,QAAA,QAAA;AAA+C,QAAA,wBAAA,QAAA;AAAA,4BAAA;IAAyC;AACtF,QAAM,SAAwB,CAAA;AAC9B,QAAM,YAA2B,EAAE,QAAQ,OAAO,MAAK;AACvD,QAAM,qBAAqBD,eAAc,4BAA4B,qBAAqB,KAAK,OAAO;AACtG,QAAM,oBAAoB,mBAAmB,oBAAoB,WAAW,IAAI,mBAAmB;AACnG,QAAM,sBAAsB,mBAAmB;AAC/C,QAAI;AAEJ,SAAK,SAAS,WAAA;AACZ,qBAAeC,YAAW,UAAU;QAClC,MAAM,gCAAC,GAAC;AAEN,cAAM,QAAQ,aAAa,aAAa,MAAK,2BAA2B,GAAG,MAAK,KAAK,IAAI;AACzF,iBAAO,KAAK,EAAE,OAAO,MAAK,OAAO,cAAc,iBAAiB,KAAK,EAAC,CAAE;QAC1E,GAJM;QAKN,OAAO,gCAAC,OAAK;AACX,iBAAO,KAAK,EAAE,OAAO,MAAK,OAAO,cAAc,kBAAkB,KAAK,EAAC,CAAE;QAC3E,GAFO;QAGP,UAAU,kCAAA;AACR,iBAAO,KAAK,EAAE,OAAO,MAAK,OAAO,cAAc,sBAAqB,CAAE;QACxE,GAFU;OAGX;IACH,GAAG,iBAAiB;AAEpB,QAAI,wBAAwB,UAAU;AACpC,WAAK,SAAS,WAAA;AAAM,eAAA,aAAa,YAAW;MAAxB,GAA4B,mBAAmB;;AAGrE,SAAK,WAAW,KAAK,SAAS;AACtB,QAAA,UAAY,KAAI;AAExB,WAAO;MACL,MAAA,gCAAK,SAAiB,QAAc,YAAgB;AAClD,kBAAU,QAAQ;AAClB,kBAAU,WAAWD,eAAc,aAAa,SAAS,QAAQ,YAAY,MAAM,OAAO;MAC5F,GAHA;MAIA,SAAS,gCAAC,OAAoB;AAC5B,kBAAU,QAAQ;AAClB,kBAAU,WAAW,CAAA;AACrB,cAAK,SAAS,WAAA;AACZ,yBAAe,MAAM,UAAU;YAC7B,MAAM,gCAAC,GAAC;AAEN,kBAAM,QAAQ,aAAa,aAAa,MAAK,2BAA2B,GAAG,MAAK,KAAK,IAAI;AACzF,wBAAU,SAAU,KAAK,EAAE,OAAO,MAAK,OAAO,cAAc,iBAAiB,KAAK,EAAC,CAAE;YACvF,GAJM;YAKN,OAAO,gCAAC,OAAK;AACX,wBAAU,SAAU,KAAK,EAAE,OAAO,MAAK,OAAO,cAAc,kBAAkB,KAAK,EAAC,CAAE;YACxF,GAFO;YAGP,UAAU,kCAAA;AACR,wBAAU,SAAU,KAAK,EAAE,OAAO,MAAK,OAAO,cAAc,sBAAqB,CAAE;YACrF,GAFU;WAGX;QACH,GAAG,iBAAiB;MACtB,GAlBS;;EAoBb;AAEA,EAAAA,eAAA,UAAA,sBAAA,SAAoB,wBAAyC;AAC3D,QAAM,YAA2B,EAAE,QAAQ,wBAAwB,OAAO,MAAK;AAC/E,SAAK,WAAW,KAAK,SAAS;AACtB,QAAA,UAAY,KAAI;AACxB,WAAO;MACL,MAAA,gCAAK,uBAAwC;AAC3C,YAAM,eAAyB,OAAO,0BAA0B,WAAW,CAAC,qBAAqB,IAAI;AACrG,kBAAU,QAAQ;AAClB,kBAAU,WAAW,aAClB,IAAI,SAAC,SAAO;AAAK,iBAAAA,eAAc,4BAA4B,SAAS,OAAO;QAA1D,CAA2D,EAC5E,OAAO,SAAC,SAAO;AAAK,iBAAA,QAAQ,oBAAoB;QAA5B,CAAoC;MAC7D,GANA;;EAQJ;AAEA,EAAAA,eAAA,UAAA,QAAA,WAAA;AAAA,QAAA,QAAA;AACE,QAAM,iBAAiB,KAAK;AAC5B,WAAO,eAAe,SAAS,GAAG;AAChC,qBAAe,MAAK,EAAI,MAAK;;AAG/B,WAAA,UAAM,MAAK,KAAA,IAAA;AAEX,SAAK,aAAa,KAAK,WAAW,OAAO,SAAC,MAAI;AAC5C,UAAI,KAAK,OAAO;AACd,cAAK,gBAAgB,KAAK,QAAQ,KAAK,QAAQ;AAC/C,eAAO;;AAET,aAAO;IACT,CAAC;EACH;AAEO,EAAAA,eAAA,8BAAP,SAAmC,SAAwB,SAAe;AAA1E,QAAA,QAAA;AAA2D,QAAA,YAAA,QAAA;AAAA,gBAAA;IAAe;AACxE,QAAI,OAAO,YAAY,UAAU;AAC/B,aAAO,IAAI,gBAAgB,QAAQ;;AAIrC,QAAM,aAAU,cAAA,CAAA,GAAA,OAAO,OAAO,CAAA;AAC9B,QAAM,MAAM,WAAW;AACvB,QAAI,aAAa;AACjB,QAAI,oBAAoB;AACxB,QAAI,sBAAsB;AAC1B,QAAI,QAAQ;kDAEHE,IAAC;AACR,UAAI,YAAY;AAChB,UAAM,iBAAiB,gCAAC,OAAa;AACnC,qBAAa,QAAQ,MAAK;MAC5B,GAFuB;AAGvB,UAAM,IAAI,WAAWA,EAAC;AACtB,cAAQ,GAAG;QACT,KAAK;AAEH,cAAI,CAAC,SAAS;AACZ,2BAAe,CAAC;;AAElB;QACF,KAAK;AACH,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,uBAAa;AACb,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,uBAAa;AACb,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,cAAI,sBAAsB,UAAU;AAClC,kBAAM,IAAI,MAAM,gGAAqG;;AAEvH,8BAAoB,aAAa,KAAK,aAAa;AACnD,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,cAAI,wBAAwB,UAAU;AACpC,kBAAM,IAAI,MAAM,kGAAuG;;AAEzH,gCAAsB,aAAa,KAAK,aAAa;AACrD;QACF;AAEE,cAAI,WAAW,EAAE,MAAM,SAAS,GAAG;AAGjC,gBAAIA,OAAM,KAAK,WAAWA,KAAI,CAAC,MAAM,KAAK;AACxC,kBAAM,SAAS,WAAW,MAAMA,EAAC,EAAE,KAAK,EAAE;AAC1C,kBAAM,QAAQ,OAAO,MAAM,iCAAiC;AAC5D,kBAAI,OAAO;AACT,gBAAAA,MAAK,MAAM,CAAC,EAAE,SAAS;AACvB,oBAAM,WAAW,WAAW,MAAM,CAAC,CAAC;AACpC,oBAAM,OAAO,MAAM,CAAC;AACpB,oBAAI,eAAY;AAEhB,wBAAQ,MAAM;kBACZ,KAAK;AACH,mCAAe;AACf;kBACF,KAAK;AACH,mCAAe,WAAW;AAC1B;kBACF,KAAK;AACH,mCAAe,WAAW,MAAO;AACjC;kBACF;AACE;;AAGJ,+BAAe,eAAgB,OAAK,eAAe;AACnD;;;;AAKN,gBAAM,IAAI,MAAM,4FAAiG,IAAI,IAAI;;AAG7H,cAAQ;gBA1EDA;;;AAAT,aAAS,IAAI,GAAG,IAAI,KAAK,KAAG;cAAnB,CAAC;AAAD,UAAC;;AA6EV,QAAI,sBAAsB,GAAG;AAC3B,aAAO,IAAI,gBAAgB,iBAAiB;WACvC;AACL,aAAO,IAAI,gBAAgB,mBAAmB,mBAAmB;;EAErE;AAEO,EAAAF,eAAA,eAAP,SACE,SACA,QACA,YACA,6BACA,SAAe;AALjB,QAAA,QAAA;AAIE,QAAA,gCAAA,QAAA;AAAA,oCAAA;IAA4C;AAC5C,QAAA,YAAA,QAAA;AAAA,gBAAA;IAAe;AAEf,QAAI,QAAQ,QAAQ,GAAG,MAAM,IAAI;AAC/B,YAAM,IAAI,MAAM,wEAA6E;;AAI/F,QAAM,aAAU,cAAA,CAAA,GAAA,OAAO,OAAO,CAAA;AAC9B,QAAM,MAAM,WAAW;AACvB,QAAM,eAA8B,CAAA;AACpC,QAAM,WAAW,UAAU,QAAQ,QAAQ,SAAS,EAAE,EAAE,QAAQ,GAAG,IAAI,QAAQ,QAAQ,GAAG;AAC1F,QAAI,QAAQ,aAAa,KAAK,IAAI,WAAW,CAAC,KAAK;AACnD,QAAM,WACJ,OAAO,WAAW,WACd,SAAC,GAAM;AAAK,aAAA;IAAA,IACZ,SAAC,GAAM;AAEL,UAAI,+BAA+B,OAAO,CAAC,aAAa,gBAAgB;AACtE,eAAO,OAAO,CAAC,EAAE;;AAEnB,aAAO,OAAO,CAAC;IACjB;AACN,QAAI,aAAa;kDAERE,IAAC;AACR,UAAI,YAAY;AAChB,UAAM,iBAAiB,gCAAC,OAAa;AACnC,qBAAa,QAAQ,MAAK;MAC5B,GAFuB;AAIvB,UAAI,eAAY;AAChB,UAAM,IAAI,WAAWA,EAAC;AACtB,cAAQ,GAAG;QACT,KAAK;AAEH,cAAI,CAAC,SAAS;AACZ,2BAAe,CAAC;;AAElB;QACF,KAAK;AACH,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,uBAAa;AACb,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,uBAAa;AACb,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,yBAAe;AACf,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,yBAAe,CAAC;AAChB;QACF,KAAK;AACH,yBAAe,kBAAkB,cAAc,OAAO;AACtD,yBAAe,CAAC;AAChB;QACF;AAEE,cAAI,WAAW,EAAE,MAAM,SAAS,GAAG;AAGjC,gBAAIA,OAAM,KAAK,WAAWA,KAAI,CAAC,MAAM,KAAK;AACxC,kBAAM,SAAS,WAAW,MAAMA,EAAC,EAAE,KAAK,EAAE;AAC1C,kBAAM,QAAQ,OAAO,MAAM,iCAAiC;AAC5D,kBAAI,OAAO;AACT,gBAAAA,MAAK,MAAM,CAAC,EAAE,SAAS;AACvB,oBAAM,WAAW,WAAW,MAAM,CAAC,CAAC;AACpC,oBAAM,OAAO,MAAM,CAAC;AACpB,oBAAI,eAAY;AAEhB,wBAAQ,MAAM;kBACZ,KAAK;AACH,mCAAe;AACf;kBACF,KAAK;AACH,mCAAe,WAAW;AAC1B;kBACF,KAAK;AACH,mCAAe,WAAW,MAAO;AACjC;kBACF;AACE;;AAGJ,+BAAe,eAAgB,OAAK,eAAe;AACnD;;;;AAKN,yBAAe,iBAAiB,SAAS,CAAC,CAAC;AAC3C,yBAAe,CAAC;AAChB;;AAGJ,UAAI,cAAc;AAChB,qBAAa,KAAK,EAAE,OAAO,aAAa,KAAK,aAAa,OAAO,aAAY,CAAE;;AAGjF,cAAQ;gBAhFDA;;;AAAT,aAAS,IAAI,GAAG,IAAI,KAAK,KAAG;cAAnB,CAAC;AAAD,UAAC;;AAkFV,WAAO;EACT;AAEQ,EAAAF,eAAA,UAAA,iBAAR,WAAA;AAAA,QAAA,QAAA;AACE,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM,yCAAyC;;AAY3D,QAAI,aAAa;AACjB,QAAIG;AAEJ,QAAM,WAAW;MACf,uBAAA,gCAAsB,UAA8B;AAClD,YAAI,CAACA,MAAK;AACR,gBAAM,IAAI,MAAM,uCAAuC;;AAEzD,YAAM,SAAS,EAAE;AACjB,QAAAA,KAAI,IAAI,QAAQ,QAAQ;AACxB,eAAO;MACT,GAPA;MAQA,sBAAA,gCAAqB,QAAc;AACjC,YAAI,CAACA,MAAK;AACR,gBAAM,IAAI,MAAM,uCAAuC;;AAEzD,QAAAA,KAAI,OAAO,MAAM;MACnB,GALA;;AAQF,QAAM,UAAU,gCAAC,SAAe;;AAC9B,UAAIA,MAAK;AACP,cAAM,IAAI,MAAM,0DAA0D;;AAE5E,UAAI,OAAO,KAAK,OAAO,GAAG;AACxB,cAAM,IAAI,MAAM,sCAAsC;;AAExD,MAAAA,OAAM,oBAAI,IAAG;AACb,UAAM,WAAWH,eAAc,aAAa,SAAS,QAAW,QAAW,QAAW,IAAI;;AAC1F,iBAAsB,aAAA,SAAA,QAAQ,GAAA,eAAA,WAAA,KAAA,GAAA,CAAA,aAAA,MAAA,eAAA,WAAA,KAAA,GAAE;AAA3B,cAAM,UAAO,aAAA;AAChB,gBAAK,SAAS,WAAA;;AACZ,gBAAM,MAAM,MAAK,IAAG;AAMpB,gBAAM,YAAY,MAAM,KAAKG,KAAK,OAAM,CAAE;AAC1C,YAAAA,KAAK,MAAK;;AACV,uBAAuB,eAAA,MAAA,QAAA,SAAA,SAAS,IAAA,gBAAA,YAAA,KAAA,GAAA,CAAA,cAAA,MAAA,gBAAA,YAAA,KAAA,GAAE;AAA7B,oBAAM,WAAQ,cAAA;AACjB,yBAAS,GAAG;;;;;;;;;;;UAEhB,GAAG,QAAQ,KAAK;;;;;;;;;;;IAEpB,GAxBgB;AA0BhB,WAAO,EAAE,SAAS,SAAQ;EAC5B;AAEQ,EAAAH,eAAA,UAAA,kBAAR,WAAA;AAAA,QAAA,QAAA;AAYE,QAAI,aAAa;AACjB,QAAM,iBAAiB,oBAAI,IAAG;AAY9B,QAAM,MAAM,kCAAA;AAIV,UAAM,MAAM,MAAK,IAAG;AACpB,UAAM,mBAAmB,MAAM,KAAK,eAAe,OAAM,CAAE;AAC3D,UAAM,sBAAsB,iBAAiB,OAAO,SAACI,KAAO;YAAL,MAAGA,IAAA;AAAO,eAAA,OAAO;MAAP,CAAU;AAC3E,UAAM,gBAAgB,oBAAoB,OAAO,SAACA,KAAQ;YAAN,OAAIA,IAAA;AAAO,eAAA,SAAS;MAAT,CAAoB;AACnF,UAAI,cAAc,SAAS,GAAG;AACtB,YAAA,KAAsB,cAAc,CAAC,GAAnC,SAAM,GAAA,QAAE,UAAO,GAAA;AACvB,uBAAe,OAAO,MAAM;AAC5B,gBAAO;AACP;;AAEF,UAAM,eAAe,oBAAoB,OAAO,SAACA,KAAQ;YAAN,OAAIA,IAAA;AAAO,eAAA,SAAS;MAAT,CAAmB;AACjF,UAAI,aAAa,SAAS,GAAG;AAC3B,YAAM,mBAAmB,aAAa,CAAC;AAC/B,YAAA,WAAsB,iBAAgB,UAA5B,UAAY,iBAAgB;AAC9C,yBAAiB,MAAM,MAAM;AAI7B,yBAAiB,eAAe,MAAK,SAAS,KAAK,QAAQ;AAC3D,gBAAO;AACP;;AAEF,UAAM,cAAc,oBAAoB,OAAO,SAACA,KAAQ;YAAN,OAAIA,IAAA;AAAO,eAAA,SAAS;MAAT,CAAkB;AAC/E,UAAI,YAAY,SAAS,GAAG;AACpB,YAAA,KAAsB,YAAY,CAAC,GAAjC,SAAM,GAAA,QAAE,UAAO,GAAA;AACvB,uBAAe,OAAO,MAAM;AAC5B,gBAAO;AACP;;AAEF,YAAM,IAAI,MAAM,sCAAsC;IACxD,GAlCY;AAgDZ,QAAM,YAAY;MAChB,cAAc,gCAAC,SAAmB;AAChC,YAAM,SAAS,EAAE;AACjB,uBAAe,IAAI,QAAQ;UACzB,KAAK,MAAK,IAAG;UACb,UAAU;UACV;UACA;UACA,cAAc,MAAK,SAAS,KAAK,CAAC;UAClC,MAAM;SACP;AACD,eAAO;MACT,GAXc;MAYd,gBAAgB,gCAAC,QAAmB;AAClC,YAAM,QAAQ,eAAe,IAAI,MAAM;AACvC,YAAI,OAAO;AACT,gBAAM,aAAa,YAAW;AAC9B,yBAAe,OAAO,MAAM;;MAEhC,GANgB;;AASlB,QAAM,WAAW;MACf,aAAa,gCAAC,SAAqB,UAAY;AAAZ,YAAA,aAAA,QAAA;AAAA,qBAAA;QAAY;AAC7C,YAAM,SAAS,EAAE;AACjB,uBAAe,IAAI,QAAQ;UACzB,KAAK,MAAK,IAAG,IAAK;UAClB;UACA;UACA;UACA,cAAc,MAAK,SAAS,KAAK,QAAQ;UACzC,MAAM;SACP;AACD,eAAO;MACT,GAXa;MAYb,eAAe,gCAAC,QAAmB;AACjC,YAAM,QAAQ,eAAe,IAAI,MAAM;AACvC,YAAI,OAAO;AACT,gBAAM,aAAa,YAAW;AAC9B,yBAAe,OAAO,MAAM;;MAEhC,GANe;;AASjB,QAAM,UAAU;MACd,YAAY,gCAAC,SAAqB,UAAY;AAAZ,YAAA,aAAA,QAAA;AAAA,qBAAA;QAAY;AAC5C,YAAM,SAAS,EAAE;AACjB,uBAAe,IAAI,QAAQ;UACzB,KAAK,MAAK,IAAG,IAAK;UAClB;UACA;UACA;UACA,cAAc,MAAK,SAAS,KAAK,QAAQ;UACzC,MAAM;SACP;AACD,eAAO;MACT,GAXY;MAYZ,cAAc,gCAAC,QAAmB;AAChC,YAAM,QAAQ,eAAe,IAAI,MAAM;AACvC,YAAI,OAAO;AACT,gBAAM,aAAa,YAAW;AAC9B,yBAAe,OAAO,MAAM;;MAEhC,GANc;;AAShB,WAAO,EAAE,WAAW,UAAU,QAAO;EACvC;AAUA,EAAAJ,eAAA,UAAA,MAAA,SAAO,UAAoC;AACzC,QAAM,sBAAsBA,eAAc;AAC1C,QAAM,gBAAgB,KAAK;AAE3B,IAAAA,eAAc,kBAAkB;AAChC,SAAK,YAAY;AACjB,SAAK,UAAU;AAEf,QAAM,WAAW,KAAK,eAAc;AACpC,QAAM,YAAY,KAAK,gBAAe;AAEtC,2BAAuB,WAAW,SAAS;AAC3C,0BAAsB,WAAW;AACjC,sBAAkB,WAAW,UAAU;AACvC,qBAAiB,WAAW,UAAU;AACtC,oBAAgB,WAAW,UAAU;AACrC,iCAA6B,WAAW;AAExC,QAAM,UAAsB;MAC1B,MAAM,KAAK,qBAAqB,KAAK,IAAI;MACzC,KAAK,KAAK,oBAAoB,KAAK,IAAI;MACvC,OAAO,KAAK,MAAM,KAAK,IAAI;MAC3B,MAAM,KAAK,WAAW,KAAK,IAAI;MAC/B,kBAAkB,KAAK,iBAAiB,KAAK,IAAI;MACjD,qBAAqB,KAAK,oBAAoB,KAAK,IAAI;MACvD,SAAS,SAAS;;AAEpB,QAAI;AACF,UAAM,MAAM,SAAS,OAAO;AAC5B,WAAK,MAAK;AACV,aAAO;;AAEP,MAAAA,eAAc,kBAAkB;AAChC,WAAK,YAAY;AACjB,WAAK,UAAU;AACf,6BAAuB,WAAW;AAClC,4BAAsB,WAAW;AACjC,wBAAkB,WAAW;AAC7B,uBAAiB,WAAW;AAC5B,sBAAgB,WAAW;AAC3B,mCAA6B,WAAW;;EAE5C;AApoBO,EAAAA,eAAA,kBAAkB;AAqoB3B,SAAAA;EA3oBmC,oBAAoB;;;AC3BhD,SAAS,eACd,WACA,OACe;AACf,MAAI,iBAAiB;AACrB,MAAI,iBAAsC,CAAC;AAE3C,YAAU,IAAI,CAAC,YAAY;AACzB,UAAMK,cAAa,MAAM,OAAO;AAGhC,UAAM,WAAkB,CAAC;AACzB,QAAI;AAEJ,cAAU,SAAS,MAAM;AACvB,qBAAeA,YAAW,UAAU;AAAA,QAClC,MAAM,wBAAC,UAAU;AACf,mBAAS,KAAK;AAAA,YACZ,OAAO,UAAU;AAAA,YACjB,cAAc,EAAE,MAAM,KAAK,OAAO,UAAU,KAAK;AAAA,UACnD,CAAC;AAAA,QACH,GALM;AAAA,QAMN,OAAO,wBAAC,UAAU;AAChB,mBAAS,KAAK;AAAA,YACZ,OAAO,UAAU;AAAA,YACjB,cAAc;AAAA,cACZ,MAAM;AAAA,cACN,OAAO;AAAA,cACP;AAAA,cACA,UAAU;AAAA,YACZ;AAAA,UACF,CAAC;AAAA,QACH,GAVO;AAAA,QAWP,UAAU,6BAAM;AACd,mBAAS,KAAK;AAAA,YACZ,OAAO,UAAU;AAAA,YACjB,cAAc,EAAE,MAAM,KAAK,OAAO,QAAW,UAAU,MAAM;AAAA,UAC/D,CAAC;AAAA,QACH,GALU;AAAA,MAMZ,CAAC;AAAA,IACH,GAAG,CAAC;AAGJ,cAAU,MAAM;AAGhB,UAAM,SAAS,kBAAkB,QAAQ;AACzC,qBAAiB,OAAO;AACxB,qBAAiB,OAAO;AAAA,EAC1B,CAAC;AAED,SAAO,EAAE,QAAQ,gBAAgB,QAAQ,eAAe;AAC1D;AApDgB;AAsDhB,SAAS,kBAAkB,UAAgC;AACzD,MAAI,SAAS,WAAW,GAAG;AACzB,WAAO,EAAE,QAAQ,IAAI,QAAQ,CAAC,EAAE;AAAA,EAClC;AAEA,MAAI,SAAS;AACb,QAAM,SAA8B,CAAC;AACrC,MAAI,eAAe;AACnB,QAAM,WAAW;AACjB,QAAM,cAAc,oBAAI,IAAoB;AAC5C,QAAM,YAAY,oBAAI,IAAY;AAClC,MAAI,YAAY;AAGhB,WAAS,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AAEzC,aAAW,WAAW,UAAU;AAE9B,WAAO,eAAe,QAAQ,OAAO;AACnC,gBAAU;AACV;AAAA,IACF;AAEA,UAAM,EAAE,aAAa,IAAI;AAEzB,QAAI,aAAa,SAAS,KAAK;AAE7B,YAAM,QAAQ,aAAa;AAC3B,YAAM,WAAW,KAAK,UAAU,KAAK;AACrC,UAAI,OAAO,YAAY,IAAI,QAAQ;AAEnC,UAAI,CAAC,MAAM;AAET,YAAI,OAAO,UAAU,YAAY,MAAM,WAAW,KAAK,gBAAgB,KAAK,KAAK,GAAG;AAClF,iBAAO;AAEP,cAAI,UAAU,IAAI,IAAI,KAAK,CAAC,YAAY,IAAI,QAAQ,GAAG;AACrD,mBAAO,qBAAqB,UAAU,WAAW,SAAS;AAC1D;AAAA,UACF;AAAA,QACF,OAAO;AAEL,iBAAO,qBAAqB,UAAU,WAAW,SAAS;AAC1D;AAAA,QACF;AAEA,oBAAY,IAAI,UAAU,IAAI;AAC9B,kBAAU,IAAI,IAAI;AAClB,eAAO,IAAI,IAAI;AAAA,MACjB;AAEA,gBAAU;AAAA,IACZ,WAAW,aAAa,SAAS,KAAK;AAEpC,gBAAU;AAAA,IACZ,WAAW,aAAa,SAAS,KAAK;AAEpC,gBAAU;AAAA,IACZ;AAEA;AAAA,EACF;AAEA,SAAO,EAAE,QAAQ,OAAO;AAC1B;AAhES;AAkET,SAAS,qBAAqB,UAAkB,YAAoB,WAAgC;AAClG,MAAI,QAAQ;AACZ,MAAI,OAAO;AAEX,KAAG;AACD,QAAI,QAAQ,SAAS,QAAQ;AAC3B,aAAO,SAAS,KAAK;AAAA,IACvB,OAAO;AAEL,YAAM,cAAc,QAAQ,SAAS;AACrC,YAAM,SAAS,KAAK,MAAM,QAAQ,SAAS,MAAM;AACjD,aAAO,SAAS,WAAW,IAAI;AAAA,IACjC;AACA;AAAA,EACF,SAAS,UAAU,IAAI,IAAI;AAE3B,SAAO;AACT;AAjBS;AAsBF,SAAS,gBAAgB,OAAgJ;AAC9K,QAAM,YAAY,IAAI,cAAc,MAAM,IAAI;AAC9C,SAAO,eAAe,WAAW,KAAK;AACxC;AAHgB;;;AC3IT,SAAS,OAAO,SAAiC,UAA8B,CAAC,GAAW;AAChG,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,OAAO,YAAY,UAAU;AAC/B,mBAAe;AACf,gBAAY,QAAQ,aAAa;AAAA,EACnC,OAAO;AACL,mBAAe,QAAQ;AACvB,WAAO,QAAQ;AACf,gBAAY,QAAQ,aAAa,QAAQ,aAAa;AAAA,EACxD;AAEA,QAAM,SAAS,mBAAmB,cAAc,SAAS;AAEzD,SAAO,yBAAyB,QAAQ;AAAA,IACtC,OAAO,QAAQ;AAAA,IACf;AAAA,EACF,CAAC;AACH;AApBgB;;;ACVT,SAAS,UAAU;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,SAAO,IAAI,OAAO,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,YAAY,MAAM,EAAE,CAAC,CAAC;AACxE;AAVgB;;;ACHhB,IAAI,eAAe,OAAO,UAAU;AACpC,IAAI,oBAAoB,OAAO,eAAe;AAC9C,IAAI,YAAY,OAAO,OAAO;AAC9B,IAAI,mBAAmB,OAAO,UAAU;AACxC,IAAI,WAAW,OAAO,MAAM;AAC5B,IAAI,YAAY,OAAO,WAAW;;;ACJlC,IAAI,qBAAqB,wBAAC,OAAO;AAC/B;AACA,KAAG,gBAAgB,IAAI;AACvB,SAAO;AACT,GAJyB;;;ACEzB,IAAI,gCAAgC,wBAAC,WAAW,CAAC,EAAE,OAAO,SAAS,MAAM;AACvE,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AACA,QAAM,QAAQ;AAAA,IACZ,UAAU;AAAA,MACR;AAAA,QACE,KAAK,mBAAmB,MAAM;AAC5B,iBAAO,KAAK,KAAK;AAAA,QACnB,CAAC;AAAA,QACD,OAAO,CAAC;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACA,MAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,UAAM,SAAS,KAAK,GAAG,SAAS,KAAK,CAAC;AAAA,EACxC,OAAO;AACL,UAAM,SAAS,KAAK,QAAQ;AAAA,EAC9B;AACA,QAAM,SAAS,KAAK;AAAA,IAClB,KAAK,mBAAmB,MAAM;AAC5B,aAAO,IAAI;AAAA,IACb,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,EACV,CAAC;AACD,QAAM,MAAM,EAAE,KAAK,IAAI,OAAO,MAAM,GAAG;AACvC,MAAI,iBAAiB,IAAI,CAAC,QAAQ;AAChC,WAAO,IAAI;AACX,UAAM;AAAA,EACR;AACA,SAAO;AACT,GA/BoC;AAgCpC,IAAI,gBAAgB,wBAAC,iBAAiB;AACpC,QAAM,SAAS,CAAC,YAAY;AAC5B,QAAMC,WAAU,8BAA8B,MAAM;AACpD,EAAAA,SAAQ,SAAS;AACjB,EAAAA,SAAQ,WAAWA;AACnB,iBAAe,KAAKA,QAAO;AAC3B,SAAOA;AACT,GAPoB;;;AC/BpB,IAAI,iBAAiB,CAAC;AACtB,IAAIC,iBAAgB,wBAAC,iBAAiB;AACpC,QAAM,SAAS,CAAC,YAAY;AAC5B,QAAMC,WAAU,wBAAC,UAAU;AACzB,WAAO,KAAK,MAAM,KAAK;AACvB,QAAI;AACJ,QAAI;AACF,eAAS,MAAM,YAAY,MAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI,gBAAgB,IAAI,CAAC,GAAG,MAAM,QAAQ,IAAI,MAAM,UAAU,SAAS,IAAI;AAAA,IACxI,UAAE;AACA,aAAO,IAAI;AAAA,IACb;AACA,QAAI,kBAAkB,SAAS;AAC7B,aAAO,OAAO,KAAK,CAAC,cAAc,IAAI,WAAW,UAAU,SAAS,CAAC;AAAA,IACvE,OAAO;AACL,aAAO,IAAI,MAAM;AAAA,IACnB;AAAA,EACF,GAbgB;AAchB,EAAAA,SAAQ,SAAS;AACjB,EAAAA,SAAQ,WAAWA;AACnB,EAAAA,SAAQ,YAAY,IAAI,8BAA8B,MAAM;AAC5D,iBAAe,KAAKA,QAAO;AAC3B,SAAOA;AACT,GArBoB;AAsBpB,IAAI,aAAa,wBAACA,aAAY;AAC5B,SAAOA,SAAQ,OAAO,GAAG,EAAE;AAC7B,GAFiB;;;AC3BjB,IAAI,eAAe;AAAA,EACjB,OAAO,CAAC;AAAA,EACR,QAAQ,CAAC,KAAK;AAAA,EACd,OAAO,CAAC,WAAW;AAAA,EACnB,MAAM,CAAC,MAAM;AAAA,EACb,MAAM,CAAC,QAAQ,aAAa,WAAW,UAAU;AACnD;AACA,IAAI,eAAe,CAAC;AACpB,IAAI,qBAAqB;;;ACTzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,IAAI,UAAU,wBAAC,aAAa,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ,GAA5D;;;ADMd,IAAI,aAA6B,oBAAI,QAAQ;AAC7C,IAAI,iBAAiB,wBAAC,SAAS,KAAK,OAAO,eAAe,CAAC,EAAE,QAAQ,SAAAC,SAAQ,MAAM;AACjF,MAAI,CAAC,QAAQ;AACX;AAAA,EACF;AACA,QAAMC,OAAM,WAAW,IAAID,QAAO,KAAK,CAAC;AACxC,aAAW,IAAIA,UAASC,IAAG;AAC3B,QAAM,OAAOA,KAAI,OAAO,MAAM,CAAC;AAC/B,MAAI,QAAQ;AACZ,QAAM,aAAa,aAAa,OAAO;AACvC,MAAI,WAAW,SAAS,GAAG;AACzB;AACE,iBAAW,CAAC,EAAE,QAAQ,KAAK,MAAM;AAC/B,mBAAW,OAAO,YAAY;AAC5B,eAAK,WAAW,GAAG,KAAK,UAAU,QAAQ,GAAG,GAAG;AAC9C,oBAAQ;AACR,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA,EACJ;AACA,MAAI,OAAO;AACT,WAAO,CAAC,IAAI,OAAO,CAAC,EAAE,WAAW,KAAK,EAAE;AAAA,EAC1C,WAAW,WAAW,SAAS,GAAG;AAChC,SAAK,KAAK,CAAC,KAAK,OAAO,UAAU,CAAC;AAAA,EACpC,OAAO;AACL,SAAK,QAAQ,CAAC,KAAK,OAAO,UAAU,CAAC;AAAA,EACvC;AACA,MAAI,OAAO,CAAC,EAAE,QAAQ,SAAS,MAAM,IAAI;AACvC,QAAI;AACJ,QAAI,eAAe,QAAQ;AACzB,mBAAa,KAAK,IAAI,CAAC,CAAC,IAAI,MAAM,IAAI;AAAA,IACxC,OAAO;AACL,YAAM,cAAc,CAAC;AACrB,mBAAa,KAAK,IAAI,CAAC,CAAC,MAAM,EAAE,WAAW,MAAM;AAC/C,YAAI,QAAQ,YAAY,QAAQ,WAAW;AAC3C,YAAI,UAAU,IAAI;AAChB,sBAAY,KAAK,WAAW;AAC5B,kBAAQ,YAAY,SAAS;AAAA,QAC/B;AACA,eAAO,CAAC,MAAM,KAAK;AAAA,MACrB,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,MAAM,IAAI;AAAA,IACrD;AACA,eAAW,QAAQ,CAAC,SAAS;AAC3B,aAAO,CAAC,IAAI,OAAO,CAAC,EAAE,WAAW,MAAM,EAAE;AAAA,IAC3C,CAAC;AACD,WAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,gBAAgB,WAAW,KAAK,EAAE,CAAC;AAAA,EACnE;AACF,GA/CqB;AAgDrB,IAAI,+BAA+B,wBAAC,KAAK,UAAU,UAAU,IAAI,IAAI,QAAQ,KAAK,OAAO,QAAQ,YAAY,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAzF;AACnC,IAAI,sBAAsB,wBAAC,KAAK,UAAU,OAAO,SAAS;AACxD,MAAI,cAAc,OAAO;AACvB,WAAO,6BAA6B,KAAK,UAAU,KAAK;AAAA,EAC1D;AACA,MAAI,EAAE,YAAY,UAAU,GAAG,UAAU,IAAI;AAC7C,eAAa,OAAO,cAAc,KAAK;AACvC,MAAI,MAAM;AACR,cAAU,kBAAkB,IAAI;AAAA,EAClC;AACA,QAAM,SAAS,IAAI,QAAQ,KAAK,WAAW,QAAQ,YAAY,CAAC,CAAC,CAAC,EAAE,SAAS;AAC7E,MAAI,kBAAkB,SAAS;AAC7B,WAAO,OAAO;AAAA,MACZ,CAAC,cAAc,IAAI,QAAQ;AAAA,QACzB,GAAG,UAAU,aAAa,CAAC;AAAA,QAC3B,eAAe,KAAK,WAAW,WAAW,UAAU;AAAA,MACtD,CAAC;AAAA,IACH;AAAA,EACF,OAAO;AACL,WAAO,IAAI,QAAQ,CAAC,eAAe,KAAK,QAAQ,WAAW,UAAU,CAAC,CAAC;AAAA,EACzE;AACF,GApB0B;AAqB1B,IAAI,QAAQ,wBAAC,EAAE,UAAU,GAAG,MAAM,MAAM;AACtC,QAAMC,oBAAmB,oBAAoB;AAC7C,MAAIA,mBAAkB;AACpB,UAAMF,WAAU,WAAWE,iBAAgB;AAC3C,QAAIF,aAAY,SAASA,aAAY,QAAQ;AAC3C,aAAO,IAAI;AAAA,QACT;AAAA,QACA;AAAA,QACA,QAAQ,YAAY,CAAC,CAAC;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AACA,SAAO,oBAAoB,SAAS,UAAU,OAAO,KAAK;AAC5D,GAbY;AAcZ,IAAI,SAAS,wBAAC;AAAA,EACZ;AAAA,EACA,GAAG;AACL,MAAM;AACJ,QAAME,oBAAmB,oBAAoB;AAC7C,MAAI,CAAC,OAAO,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAKA,qBAAoB,WAAWA,iBAAgB,MAAM,QAAQ;AAC1G,WAAO,6BAA6B,UAAU,UAAU,KAAK;AAAA,EAC/D;AACA,SAAO,oBAAoB,UAAU,UAAU,OAAO,KAAK;AAC7D,GATa;AAUb,IAAI,QAAQ,wBAAC;AAAA,EACX;AAAA,EACA,GAAG;AACL,MAAM;AACJ,MAAI,CAAC,CAAC,QAAQ,YAAY,EAAE,MAAM,CAAC,MAAM,KAAK,KAAK,GAAG;AACpD,WAAO,6BAA6B,SAAS,UAAU,KAAK;AAAA,EAC9D;AACA,QAAM,WAAW,IAAI,MAAM;AAC3B,SAAO,MAAM;AACb,SAAO,oBAAoB,SAAS,UAAU,OAAO,IAAI;AAC3D,GAVY;AAWZ,IAAI,OAAO,wBAAC,EAAE,UAAU,GAAG,MAAM,MAAM;AACrC,MAAI,CAAC,UAAU,SAAS,EAAE,KAAK,CAAC,MAAM,KAAK,KAAK,KAAK,MAAM,QAAQ,iBAAiB,EAAE,gBAAgB,UAAU,cAAc,QAAQ;AACpI,WAAO,6BAA6B,QAAQ,UAAU,KAAK;AAAA,EAC7D;AACA,SAAO,oBAAoB,QAAQ,UAAU,OAAO,gBAAgB,KAAK;AAC3E,GALW;AAMX,IAAI,OAAO,wBAAC,EAAE,UAAU,GAAG,MAAM,MAAM;AACrC,QAAMA,oBAAmB,oBAAoB;AAC7C,MAAIA,qBAAoB,WAAWA,iBAAgB,MAAM,QAAQ;AAC/D,WAAO,6BAA6B,QAAQ,UAAU,KAAK;AAAA,EAC7D;AACA,SAAO,oBAAoB,QAAQ,UAAU,OAAO,KAAK;AAC3D,GANW;AAOX,IAAI,aAAa,wBAAC,KAAK,EAAE,UAAU,GAAG,MAAM,MAAM,IAAI,QAAQ,KAAK,OAAO,QAAQ,YAAY,CAAC,CAAC,CAAC,GAAhF;AACjB,IAAI,OAAO,wBAAC,UAAU;AACpB,MAAI,OAAO,MAAM,WAAW,YAAY;AACtC,UAAM,SAAS,aAAa,MAAM,SAAS,MAAM,OAAO,SAAS,IAAI;AAAA,EACvE;AACA,SAAO,WAAW,QAAQ,KAAK;AACjC,GALW;AAMX,IAAI,wBAAwB,wBAAC,KAAK,UAAU;AAC1C,MAAI,OAAO,MAAM,eAAe,YAAY;AAC1C,UAAM,aAAa,aAAa,MAAM,aAAa,MAAM,WAAW,SAAS,IAAI;AAAA,EACnF;AACA,SAAO,WAAW,KAAK,KAAK;AAC9B,GAL4B;AAM5B,IAAI,QAAQ,wBAAC,UAAU,sBAAsB,SAAS,KAAK,GAA/C;AACZ,IAAI,SAAS,wBAAC,UAAU,sBAAsB,UAAU,KAAK,GAAhD;;;AE3Ib,IAAI,yBAAyC,oBAAI,IAAI;AAAA,EACnD,CAAC,aAAa,OAAO;AAAA,EACrB,CAAC,WAAW,KAAK;AAAA,EACjB,CAAC,eAAe,aAAa;AAAA,EAC7B,CAAC,aAAa,YAAY;AAAA,EAC1B,CAAC,YAAY,UAAU;AAAA,EACvB,CAAC,iBAAiB,eAAe;AAAA,EACjC,CAAC,YAAY,UAAU;AAAA,EACvB,CAAC,cAAc,YAAY;AAC7B,CAAC;AACD,IAAI,+BAA+B,wBAAC,QAAQ,uBAAuB,IAAI,GAAG,KAAK,KAA5C;AACnC,IAAI,qBAAqB,wBAACC,QAAO,OAAO;AACtC,aAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQA,MAAK,GAAG;AAC1C,UAAM,MAAM,EAAE,CAAC,MAAM,OAAO,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,EAAE,QAAQ,UAAU,CAAC,MAAM,IAAI,EAAE,YAAY,CAAC,EAAE;AACnG;AAAA,MACE;AAAA,MACA,KAAK,OAAO,OAAO,OAAO,MAAM,WAAW,CAAC,IAAI;AAAA,QAC9C;AAAA,MACF,IAAI,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK;AAAA,IAC1B;AAAA,EACF;AACF,GAVyB;;;ACJzB,IAAI,mBAAmB;AACvB,IAAI,sBAAsB,6BAAM,kBAAN;AAC1B,IAAI,qBAAqB,wBAAC,QAAQ,QAAQ,KAAK,GAAG,KAAK,IAAI;AAAA,EACzD;AACF,IAAI,IAAI,QAAQ,YAAY,KAAK,EAAE,YAAY,IAAI,KAF1B;AAGzB,IAAI,YAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,oBAAoB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,2BAA2B,wBAAC,UAAU,WAAW;AACnD,WAAS,IAAI,GAAG,MAAM,SAAS,QAAQ,IAAI,KAAK,KAAK;AACnD,UAAM,QAAQ,SAAS,CAAC;AACxB,QAAI,OAAO,UAAU,UAAU;AAC7B,qBAAe,OAAO,MAAM;AAAA,IAC9B,WAAW,OAAO,UAAU,aAAa,UAAU,QAAQ,UAAU,QAAQ;AAC3E;AAAA,IACF,WAAW,iBAAiB,SAAS;AACnC,YAAM,iBAAiB,MAAM;AAAA,IAC/B,WAAW,OAAO,UAAU,YAAY,MAAM,WAAW;AACvD;AACA,aAAO,CAAC,KAAK;AAAA,IACf,WAAW,iBAAiB,SAAS;AACnC,aAAO,QAAQ,IAAI,KAAK;AAAA,IAC1B,OAAO;AACL,+BAAyB,OAAO,MAAM;AAAA,IACxC;AAAA,EACF;AACF,GAlB+B;AAmB/B,IAAI,UAAU,MAAM;AAAA,EA7EpB,OA6EoB;AAAA;AAAA;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA,YAAY,KAAK,OAAO,UAAU;AAChC,SAAK,MAAM;AACX,SAAK,QAAQ;AACb,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM;AACR,WAAO,KAAK,MAAM,OAAO;AAAA,EAC3B;AAAA,EACA,WAAW;AACT,UAAM,SAAS,CAAC,EAAE;AAClB,SAAK,eAAe,QAAQ,CAAC,CAACC,UAAS,KAAK,MAAM;AAChD,MAAAA,SAAQ,OAAO,KAAK,KAAK;AAAA,IAC3B,CAAC;AACD,QAAI;AACF,WAAK,iBAAiB,MAAM;AAAA,IAC9B,UAAE;AACA,WAAK,eAAe,QAAQ,CAAC,CAACA,QAAO,MAAM;AACzC,QAAAA,SAAQ,OAAO,IAAI;AAAA,MACrB,CAAC;AAAA,IACH;AACA,WAAO,OAAO,WAAW,IAAI,eAAe,SAAS,oBAAoB,IAAI,OAAO,CAAC,GAAG,OAAO,SAAS,CAAC,EAAE,SAAS,IAAI,OAAO,CAAC,IAAI,qBAAqB,QAAQ,OAAO,SAAS;AAAA,EACnL;AAAA,EACA,iBAAiB,QAAQ;AACvB,UAAM,MAAM,KAAK;AACjB,UAAM,QAAQ,KAAK;AACnB,QAAI,EAAE,SAAS,IAAI;AACnB,WAAO,CAAC,KAAK,IAAI,GAAG;AACpB,UAAM,eAAe,oBAAoB,WAAW,gBAAgB,MAAM,QAAQ,CAAC,QAAQ,mBAAmB,6BAA6B,GAAG,CAAC,IAAI,CAAC,QAAQ,6BAA6B,GAAG;AAC5L,aAAS,CAAC,KAAK,CAAC,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC1C,YAAM,aAAa,GAAG;AACtB,UAAI,QAAQ,YAAY;AAAA,MACxB,WAAW,QAAQ,WAAW,OAAO,MAAM,UAAU;AACnD,YAAI,WAAW;AACf,2BAAmB,GAAG,CAAC,UAAU,UAAU;AACzC,cAAI,SAAS,MAAM;AACjB,wBAAY,GAAG,WAAW,MAAM,EAAE,GAAG,QAAQ,IAAI,KAAK;AAAA,UACxD;AAAA,QACF,CAAC;AACD,eAAO,CAAC,KAAK;AACb,uBAAe,UAAU,MAAM;AAC/B,eAAO,CAAC,KAAK;AAAA,MACf,WAAW,OAAO,MAAM,UAAU;AAChC,eAAO,CAAC,KAAK,IAAI,GAAG;AACpB,uBAAe,GAAG,MAAM;AACxB,eAAO,CAAC,KAAK;AAAA,MACf,WAAW,MAAM,QAAQ,MAAM,QAAQ;AAAA,MACvC,WAAW,OAAO,MAAM,YAAY,EAAE,WAAW;AAC/C,eAAO,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC;AAAA,MAC5B,WAAW,OAAO,MAAM,aAAa,kBAAkB,SAAS,GAAG,GAAG;AACpE,YAAI,GAAG;AACL,iBAAO,CAAC,KAAK,IAAI,GAAG;AAAA,QACtB;AAAA,MACF,WAAW,QAAQ,2BAA2B;AAC5C,YAAI,SAAS,SAAS,GAAG;AACvB,gBAAM,IAAI,MAAM,oEAAoE;AAAA,QACtF;AACA,mBAAW,CAAC,IAAI,EAAE,MAAM,CAAC;AAAA,MAC3B,WAAW,aAAa,SAAS;AAC/B,eAAO,CAAC,KAAK,IAAI,GAAG;AACpB,eAAO,QAAQ,KAAK,CAAC;AAAA,MACvB,WAAW,OAAO,MAAM,YAAY;AAClC,YAAI,CAAC,IAAI,WAAW,IAAI,KAAK,QAAQ,OAAO;AAC1C,gBAAM,IAAI,MAAM,iBAAiB,GAAG,qCAAqC,GAAG,IAAI;AAAA,QAClF;AAAA,MACF,OAAO;AACL,eAAO,CAAC,KAAK,IAAI,GAAG;AACpB,uBAAe,EAAE,SAAS,GAAG,MAAM;AACnC,eAAO,CAAC,KAAK;AAAA,MACf;AAAA,IACF;AACA,QAAI,UAAU,SAAS,GAAG,KAAK,SAAS,WAAW,GAAG;AACpD,aAAO,CAAC,KAAK;AACb;AAAA,IACF;AACA,WAAO,CAAC,KAAK;AACb,6BAAyB,UAAU,MAAM;AACzC,WAAO,CAAC,KAAK,KAAK,GAAG;AAAA,EACvB;AACF;AACA,IAAI,kBAAkB,cAAc,QAAQ;AAAA,EAtK5C,OAsK4C;AAAA;AAAA;AAAA,EAC1C,iBAAiB,QAAQ;AACvB,UAAM,EAAE,SAAS,IAAI;AACrB,UAAM,MAAM,KAAK,IAAI,KAAK,MAAM;AAAA,MAC9B,GAAG,KAAK;AAAA,MACR,UAAU,SAAS,UAAU,IAAI,SAAS,CAAC,IAAI;AAAA,IACjD,CAAC;AACD,QAAI,OAAO,QAAQ,aAAa,OAAO,MAAM;AAC3C;AAAA,IACF,WAAW,eAAe,SAAS;AACjC,UAAI,eAAe,WAAW,GAAG;AAC/B,eAAO,QAAQ,IAAI,GAAG;AAAA,MACxB,OAAO;AACL,cAAM,kBAAkB,eAAe,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC;AACtE,eAAO;AAAA,UACL;AAAA,UACA,IAAI,KAAK,CAAC,aAAa;AACrB,gBAAI,oBAAoB,SAAS;AAC/B,uBAAS,gBAAgB;AAAA,YAC3B;AACA,mBAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF,WAAW,eAAe,SAAS;AACjC,UAAI,iBAAiB,MAAM;AAAA,IAC7B,WAAW,OAAO,QAAQ,YAAY,IAAI,WAAW;AACnD,aAAO,CAAC,KAAK;AACb,UAAI,IAAI,WAAW;AACjB,eAAO,cAAc,CAAC;AACtB,eAAO,UAAU,KAAK,GAAG,IAAI,SAAS;AAAA,MACxC;AAAA,IACF,OAAO;AACL,qBAAe,KAAK,MAAM;AAAA,IAC5B;AAAA,EACF;AACF;AACA,IAAI,kBAAkB,cAAc,QAAQ;AAAA,EA3M5C,OA2M4C;AAAA;AAAA;AAAA,EAC1C,iBAAiB,QAAQ;AACvB,6BAAyB,KAAK,UAAU,MAAM;AAAA,EAChD;AACF;AACA,IAAI,MAAM,wBAAC,KAAK,UAAU,aAAa;AACrC,YAAU,CAAC;AACX,MAAI,SAAS,QAAQ;AACnB,UAAM,WAAW,SAAS,WAAW,IAAI,SAAS,CAAC,IAAI;AAAA,EACzD;AACA,QAAM,MAAM,MAAM;AAClB,SAAO,MAAM,KAAK;AAClB,QAAM,OAAO,MAAM,KAAK,OAAO,QAAQ;AACvC,OAAK,MAAM;AACX,SAAO;AACT,GAVU;AAWV,IAAI,kBAAkB;AACtB,IAAI,QAAQ,wBAAC,KAAK,OAAO,aAAa;AACpC,MAAI,CAAC,iBAAiB;AACpB,eAAW,KAAK,cAAc;AAC5B;AACA,yBAAqB,CAAC,EAAE,YAAY,IAAI,aAAa,CAAC;AAAA,IACxD;AACA,sBAAkB;AAAA,EACpB;AACA,MAAI,OAAO,QAAQ,YAAY;AAC7B,WAAO,IAAI,gBAAgB,KAAK,OAAO,QAAQ;AAAA,EACjD,WAAW,mBAAqB,GAAG,GAAG;AACpC,WAAO,IAAI;AAAA,MACT,mBAAqB,GAAG;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AAAA,EACF,WAAW,QAAQ,SAAS,QAAQ,QAAQ;AAC1C,yBAAqBC,eAAc,EAAE;AACrC,WAAO,IAAI,QAAQ,KAAK,OAAO;AAAA,MAC7B,IAAI;AAAA,QACF;AAAA,QACA;AAAA,UACE,OAAO;AAAA,QACT;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,WAAO,IAAI,QAAQ,KAAK,OAAO,QAAQ;AAAA,EACzC;AACF,GA9BY;AA+DZ,IAAI,WAAW,wBAAC;AAAA,EACd;AACF,MAAM;AACJ,SAAO,IAAI;AAAA,IACT;AAAA,IACA;AAAA,MACE;AAAA,IACF;AAAA,IACA,MAAM,QAAQ,QAAQ,IAAI,WAAW,WAAW,CAAC,QAAQ,IAAI,CAAC;AAAA,EAChE;AACF,GAVe;;;ACxRf,SAAS,OAAO,KAAK,OAAO,KAAK;AAC/B,MAAI;AACJ,MAAI,CAAC,SAAS,EAAE,cAAc,QAAQ;AACpC,WAAO,MAAM,KAAK,OAAO,CAAC,CAAC;AAAA,EAC7B,OAAO;AACL,UAAM,WAAW,MAAM;AACvB,WAAO,MAAM,QAAQ,QAAQ,IAAI,MAAM,KAAK,OAAO,QAAQ,IAAI,MAAM,KAAK,OAAO,CAAC,QAAQ,CAAC;AAAA,EAC7F;AACA,OAAK,MAAM;AACX,SAAO;AACT;AAVS;;;ACGT,IAAM,YAA+B;AAAA,EACnC,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,cAAc;AAAA,EACd,SAAS;AACX;AAEO,IAAM,eAAe,wBAAC,MAAe;AAE1C,QAAM,cAAc;AAGpB,QAAM,eAAe,gBAAgB,CAAC,EAAE,KAAK,MAAM,KAAK,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;AAGxH,QAAM,iBAAiB,gBAAgB,CAAC,EAAE,KAAK,MAAM,KAAK,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,KAAK,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;AAGnI,QAAM,gBAAgB,gBAAgB,CAAC,EAAE,KAAK,MAAM,KAAK,aAAa,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;AAGhH,QAAM,UAAU;AAChB,QAAM,UAAU;AAEhB,QAAM,eAAe,gBAAgB,CAAC,EAAE,KAAK,MAAM,MAAM,KAAK,SAAS,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,KAAK,SAAS,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;AAGtH,QAAM,cAAc,gBAAgB,CAAC,EAAE,KAAK,MAAM,KAAK,QAAQ,EAAE,GAAG,EAAE,GAAG,IAAI,MAAM,sBAAsB,CAAC,CAAC;AAE3G,SAAO,EAAE;AAAA,IACP,uBAAC,SAAI,OAAM,yCACT,iCAAC,SAAI,OAAM,uBACT,iCAAC,SAAI,OAAM,oCACT;AAAA,6BAAC,QAAG,OAAM,sCAAqC,kCAAoB;AAAA,MACnE,uBAAC,OAAE,OAAM,sBAAqB,iFAAmE;AAAA,MAEjG,uBAAC,SAAI,OAAM,0BACT;AAAA,+BAAC,SAAI,OAAM,iBACT;AAAA,iCAAC,QAAG,OAAM,qCAAoC,0BAAY;AAAA,UAC1D,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,oCAAsB;AAAA,YAC/C,uBAAC,aAAU,SAAS,aAAa,OAAO,WAAW,OAAM,WAAU;AAAA,aACrE;AAAA,WACF;AAAA,QAEA,uBAAC,SAAI,OAAM,uBACT;AAAA,iCAAC,QAAG,OAAM,qCAAoC,6BAAe;AAAA,UAC7D,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,uCAAsB;AAAA,YAC/C,uBAAC,aAAU,SAAS,aAAa,QAAQ,OAAO,WAAW,OAAM,WAAU;AAAA,aAC7E;AAAA,UACA,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,wCAA0B;AAAA,YACnD,uBAAC,aAAU,SAAS,eAAe,QAAQ,OAAO,WAAW,OAAM,WAAU;AAAA,aAC/E;AAAA,UACA,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,8BAAgB;AAAA,YACzC,uBAAC,aAAU,SAAS,cAAc,QAAQ,OAAO,WAAW,OAAM,WAAU;AAAA,aAC9E;AAAA,WACF;AAAA,QAEA,uBAAC,SAAI,OAAM,uBACT;AAAA,iCAAC,QAAG,OAAM,qCAAoC,yBAAW;AAAA,UACzD,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,8BAAgB;AAAA,YACzC,uBAAC,aAAU,SAAS,SAAS,OAAO,WAAW,OAAM,WAAU;AAAA,aACjE;AAAA,UACA,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,8BAAgB;AAAA,YACzC,uBAAC,aAAU,SAAS,SAAS,OAAO,WAAW,OAAM,WAAU;AAAA,aACjE;AAAA,UACA,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,kCAAoB;AAAA,YAC7C,uBAAC,aAAU,SAAS,aAAa,QAAQ,OAAO,WAAW,OAAM,WAAU;AAAA,aAC7E;AAAA,WACF;AAAA,QAEA,uBAAC,SAAI,OAAM,uBACT;AAAA,iCAAC,QAAG,OAAM,qCAAoC,4BAAc;AAAA,UAC5D,uBAAC,SAAI,OAAM,iBACT;AAAA,mCAAC,UAAK,OAAM,cAAa,0BAAY;AAAA,YACrC,uBAAC,aAAU,SAAS,YAAY,QAAQ,OAAO,WAAW,OAAM,WAAU;AAAA,aAC5E;AAAA,WACF;AAAA,SACF;AAAA,OACF,GACF,GACF;AAAA,EACF;AACF,GAlF4B;;;ACjB5B,IAAAC,sBAAA;AAAA,SAAAA,qBAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,YAAAC;AAAA,EAAA,cAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,aAAAC;AAAA;;;ACaA,IAAI,sBAAsB;AAC1B,IAAI,gBAAgB;AAAA,EAClB,QAAQ;AAAA,EACR,aAAa;AACf;AACA,IAAI,eAAe;AAAA,EACjB,KAAK;AAAA,EACL,MAAM;AACR;AACA,IAAI,iBAAiB,CAAC;AACtB,IAAI,gBAAgC,oBAAI,QAAQ;AAChD,IAAIC,oBAAmB;AACvB,IAAIC,uBAAsB,6BAAMD,mBAAN;AAC1B,IAAI,eAAe,wBAAC,SAAS,OAAO,MAAjB;AACnB,IAAI,aAAa;AAAA,EACf,SAAS,CAAC,SAAS,KAAK;AAC1B;AACA,IAAI,eAAe,wBAAC,QAAQ;AAC1B,MAAI,CAAC,IAAI,WAAW,IAAI,GAAG;AACzB,WAAO;AAAA,EACT;AACA,MAAI,WAAW,GAAG,GAAG;AACnB,WAAO,WAAW,GAAG;AAAA,EACvB;AACA,QAAM,QAAQ,IAAI,MAAM,oDAAoD;AAC5E,MAAI,OAAO;AACT,UAAM,CAAC,EAAE,WAAW,OAAO,IAAI;AAC/B,WAAO,WAAW,GAAG,IAAI,EAAE,cAAc,SAAS,KAAK,WAAW,YAAY,GAAG,CAAC,CAAC,OAAO;AAAA,EAC5F;AACA,SAAO;AACT,GAbmB;AAcnB,IAAI,kBAAkB,wBAAC,SAAS,QAAQA,qBAAoB,mBAAmB,cAAc,QAAQ,KAAK,GAAG,MAAM,OAAO,QAAQ,SAAS,IAAI,MAAM,qBAAqB,KAAK,IAAI,QAAQ,YAAY,KAAK,EAAE,YAAY,IAAI,KAAxM;AACtB,IAAI,aAAa,wBAAC,WAAW,YAAY,kBAAkB;AACzD,iBAAe,CAAC;AAChB,WAAS,OAAO,YAAY;AAC1B,UAAM,QAAQ,WAAW,GAAG;AAC5B,QAAI,QAAQ,eAAe,CAAC,iBAAiB,cAAc,GAAG,MAAM,QAAQ;AAC1E,YAAM,6BAA6B,GAAG;AACtC,YAAM,YAAY,aAAa,GAAG;AAClC,UAAI,WAAW;AACb,YAAI,gBAAgB,GAAG,MAAM,OAAO;AAClC,cAAI,eAAe;AACjB,sBAAU,oBAAoB,UAAU,CAAC,GAAG,cAAc,GAAG,GAAG,UAAU,CAAC,CAAC;AAAA,UAC9E;AACA,cAAI,SAAS,MAAM;AACjB,gBAAI,OAAO,UAAU,YAAY;AAC/B,oBAAM,IAAI,MAAM,sBAAsB,GAAG,qBAAqB;AAAA,YAChE;AACA,sBAAU,iBAAiB,UAAU,CAAC,GAAG,OAAO,UAAU,CAAC,CAAC;AAAA,UAC9D;AAAA,QACF;AAAA,MACF,WAAW,QAAQ,6BAA6B,OAAO;AACrD,kBAAU,YAAY,MAAM;AAAA,MAC9B,WAAW,QAAQ,OAAO;AACxB,YAAI;AACJ,YAAI,OAAO,UAAU,YAAY;AAC/B,oBAAU,MAAM,SAAS,MAAM,MAAM,MAAM,IAAI;AAAA,QACjD,WAAW,SAAS,aAAa,OAAO;AACtC,gBAAM,UAAU;AAChB,oBAAU,6BAAM,MAAM,UAAU,MAAtB;AAAA,QACZ;AACA,sBAAc,IAAI,WAAW,OAAO;AAAA,MACtC,WAAW,QAAQ,SAAS;AAC1B,cAAME,SAAQ,UAAU;AACxB,YAAI,OAAO,UAAU,UAAU;AAC7B,UAAAA,OAAM,UAAU;AAAA,QAClB,OAAO;AACL,UAAAA,OAAM,UAAU;AAChB,cAAI,SAAS,MAAM;AACjB,+BAAmB,OAAOA,OAAM,YAAY,KAAKA,MAAK,CAAC;AAAA,UACzD;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,QAAQ,SAAS;AACnB,gBAAM,WAAW,UAAU;AAC3B,cAAI,aAAa,WAAW,aAAa,cAAc,aAAa,UAAU;AAC5E;AACA,sBAAU,QAAQ,UAAU,QAAQ,UAAU,UAAU,UAAU,QAAQ,OAAO;AACjF,gBAAI,aAAa,YAAY;AAC3B,wBAAU,cAAc;AACxB;AAAA,YACF,WAAW,aAAa,UAAU;AAChC,kBAAI,UAAU,kBAAkB,IAAI;AAClC;AACA,0BAAU,gBAAgB;AAAA,cAC5B;AACA;AAAA,YACF;AAAA,UACF;AAAA,QACF,WAAW,QAAQ,aAAa,UAAU,aAAa,WAAW,QAAQ,cAAc,UAAU,aAAa,UAAU;AACvH;AACA,oBAAU,GAAG,IAAI;AAAA,QACnB;AACA,cAAM,IAAI,gBAAgB,WAAW,GAAG;AACxC,YAAI,UAAU,QAAQ,UAAU,UAAU,UAAU,OAAO;AACzD,oBAAU,gBAAgB,CAAC;AAAA,QAC7B,WAAW,UAAU,MAAM;AACzB,oBAAU,aAAa,GAAG,EAAE;AAAA,QAC9B,WAAW,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AACjE,oBAAU,aAAa,GAAG,KAAK;AAAA,QACjC,OAAO;AACL,oBAAU,aAAa,GAAG,MAAM,SAAS,CAAC;AAAA,QAC5C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,MAAI,eAAe;AACjB,aAAS,OAAO,eAAe;AAC7B,YAAM,QAAQ,cAAc,GAAG;AAC/B,UAAI,QAAQ,cAAc,EAAE,OAAO,aAAa;AAC9C,cAAM,6BAA6B,GAAG;AACtC,cAAM,YAAY,aAAa,GAAG;AAClC,YAAI,WAAW;AACb,oBAAU,oBAAoB,UAAU,CAAC,GAAG,OAAO,UAAU,CAAC,CAAC;AAAA,QACjE,WAAW,QAAQ,OAAO;AACxB,wBAAc,IAAI,SAAS,IAAI;AAAA,QACjC,OAAO;AACL,oBAAU,gBAAgB,gBAAgB,WAAW,GAAG,CAAC;AAAA,QAC3D;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GA1FiB;AA2FjB,IAAI,YAAY,wBAACC,UAAS,SAAS;AACjC,OAAK,SAAS,EAAE,CAAC,IAAI;AACrB,iBAAe,KAAK,CAACA,UAAS,IAAI,CAAC;AACnC,QAAM,OAAO,KAAK,IAAI,YAAY,KAAK,KAAK;AAC5C,QAAM,QAAQ,KAAK,eAAe;AAAA,IAChC,GAAG,KAAK;AAAA,IACR,GAAG,KAAK;AAAA,EACV,IAAI,KAAK;AACT,MAAI;AACF,WAAO,CAAC,KAAK,KAAK,MAAM,KAAK,CAAC;AAAA,EAChC,UAAE;AACA,mBAAe,IAAI;AAAA,EACrB;AACF,GAbgB;AAchB,IAAI,kBAAkB,wBAAC,MAAM,WAAW,cAAc,kBAAkB,cAAc;AACpF,MAAI,KAAK,IAAI,QAAQ;AACnB,qBAAiB,KAAK,GAAG,KAAK,EAAE;AAChC,WAAO,KAAK;AAAA,EACd;AACA,MAAI,OAAO,KAAK,QAAQ,YAAY;AAClC,SAAK,SAAS,EAAE,CAAC,EAAE,YAAY,GAAG,QAAQ,CAAC,SAAS,UAAU,KAAK,IAAI,CAAC;AAAA,EAC1E;AACA,OAAK,GAAG,QAAQ,CAAC,UAAU;AACzB,QAAI,aAAa,KAAK,GAAG;AACvB,mBAAa,KAAK,KAAK;AAAA,IACzB,OAAO;AACL,UAAI,OAAO,MAAM,QAAQ,cAAc,MAAM,QAAQ,IAAI;AACvD,cAAM,IAAI;AACV,cAAM,2BAA2B,aAAa;AAC9C,wBAAgB,OAAO,WAAW,cAAc,kBAAkB,SAAS;AAC3E,YAAI,MAAM,GAAG;AACX,mBAAS,IAAI,0BAA0B,IAAI,aAAa,QAAQ,KAAK;AACnE,yBAAa,CAAC,EAAE,IAAI;AAAA,UACtB;AACA,gBAAM,IAAI;AAAA,QACZ;AAAA,MACF,OAAO;AACL,qBAAa,KAAK,KAAK;AACvB,YAAI,MAAM,IAAI,QAAQ;AACpB,2BAAiB,KAAK,GAAG,MAAM,EAAE;AACjC,iBAAO,MAAM;AAAA,QACf;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACH,GA/BsB;AAgCtB,IAAI,mBAAmB,wBAAC,SAAS;AAC/B,WAAS,OAAO,KAAK,QAAQ,uBAAuB,CAAC,KAAK,MAAM,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC,GAAG;AAC/F,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AACA,QAAI,KAAK,QAAQ,uBAAuB,KAAK,GAAG;AAC9C,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AACF,GATuB;AAUvB,IAAI,aAAa,wBAAC,SAAS;AACzB,MAAI,CAAC,aAAa,IAAI,GAAG;AACvB,SAAK,SAAS,IAAI,CAAC,EAAE,YAAY,GAAG,QAAQ,CAAC,SAAS,KAAK,CAAC,IAAI,CAAC;AACjE,kBAAc,IAAI,KAAK,CAAC,IAAI;AAC5B,QAAI,KAAK,MAAM,GAAG;AAChB,WAAK,IAAI,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;AAAA,IACjC;AACA,SAAK,IAAI,QAAQ,UAAU;AAAA,EAC7B;AACA,MAAI,CAAC,KAAK,GAAG;AACX,SAAK,GAAG,OAAO;AACf,WAAO,KAAK;AAAA,EACd;AACA,MAAI,OAAO,KAAK,QAAQ,YAAY;AAClC,cAAU,OAAO,IAAI;AACrB,6BAAyB,OAAO,IAAI;AACpC,WAAO,KAAK,SAAS,EAAE,CAAC;AACxB,SAAK,IAAI;AAAA,EACX;AACF,GAnBiB;AAoBjB,IAAI,QAAQ,wBAAC,MAAM,WAAW,UAAU;AACtC,OAAK,IAAI;AACT,kBAAgB,MAAM,WAAW,KAAK;AACxC,GAHY;AAIZ,IAAI,qBAAqB,wBAAC,YAAY,UAAU;AAC9C,MAAI,CAAC,OAAO;AACV;AAAA,EACF;AACA,WAAS,IAAI,GAAG,MAAM,WAAW,QAAQ,IAAI,KAAK,KAAK;AACrD,QAAI,WAAW,CAAC,MAAM,OAAO;AAC3B,aAAO;AAAA,IACT;AAAA,EACF;AACA;AACF,GAVyB;AAWzB,IAAI,cAAc,OAAO;AACzB,IAAI,kBAAkB,wBAAC,MAAM,WAAW,UAAU;AAChD,QAAM,OAAO,CAAC;AACd,QAAM,SAAS,CAAC;AAChB,QAAM,YAAY,CAAC;AACnB,kBAAgB,MAAM,WAAW,MAAM,QAAQ,SAAS;AACxD,SAAO,QAAQ,UAAU;AACzB,QAAM,aAAa,QAAQ,SAAS,UAAU;AAC9C,MAAI;AACJ,MAAI,mBAAmB;AACvB,MAAI,OAAO;AACT,aAAS;AAAA,EACX,WAAW,CAAC,WAAW,QAAQ;AAC7B,aAAS;AAAA,EACX,OAAO;AACL,UAAM,mBAAmB,mBAAmB,YAAY,iBAAiB,KAAK,EAAE,CAAC;AACjF,QAAI,qBAAqB,QAAQ;AAC/B,yBAAmB,WAAW,gBAAgB;AAC9C,eAAS;AAAA,IACX,OAAO;AACL,eAAS,mBAAmB,YAAY,KAAK,KAAK,CAAC,MAAM,EAAE,QAAQ,uBAAuB,EAAE,CAAC,GAAG,CAAC,KAAK;AAAA,IACxG;AACA,QAAI,WAAW,IAAI;AACjB,cAAQ;AAAA,IACV;AAAA,EACF;AACA,WAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,KAAK,UAAU;AACzD,UAAM,QAAQ,KAAK,CAAC;AACpB,QAAI;AACJ,QAAI,MAAM,KAAK,MAAM,GAAG;AACtB,WAAK,MAAM;AACX,YAAM,IAAI;AAAA,IACZ,OAAO;AACL,YAAM,aAAa,SAAS,CAAC,MAAM;AACnC,UAAI,aAAa,KAAK,GAAG;AACvB,YAAI,MAAM,KAAK,MAAM,GAAG;AACtB,gBAAM,EAAE,cAAc,MAAM;AAAA,QAC9B;AACA,cAAM,IAAI;AACV,aAAK,MAAM,MAAM,SAAS,eAAe,MAAM,CAAC;AAAA,MAClD,OAAO;AACL,aAAK,MAAM,MAAM,MAAM,IAAI,SAAS,gBAAgB,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,cAAc,MAAM,GAAG;AAC1G,mBAAW,IAAI,MAAM,OAAO,MAAM,EAAE;AACpC,wBAAgB,OAAO,IAAI,UAAU;AAAA,MACvC;AAAA,IACF;AACA,QAAI,MAAM,QAAQ,qBAAqB;AACrC;AAAA,IACF,WAAW,OAAO;AAChB,UAAI,CAAC,GAAG,YAAY;AAClB,kBAAU,YAAY,EAAE;AAAA,MAC1B;AAAA,IACF,WAAW,WAAW,MAAM,MAAM,MAAM,WAAW,SAAS,CAAC,MAAM,IAAI;AACrE,UAAI,WAAW,SAAS,CAAC,MAAM,IAAI;AACjC,kBAAU,YAAY,WAAW,MAAM,CAAC;AAAA,MAC1C,OAAO;AACL,kBAAU,aAAa,IAAI,oBAAoB,WAAW,MAAM,KAAK,IAAI;AAAA,MAC3E;AAAA,IACF;AAAA,EACF;AACA,MAAI,KAAK,IAAI;AACX,WAAO,KAAK;AAAA,EACd;AACA,MAAI,UAAU,QAAQ;AACpB,UAAM,qBAAqB,CAAC;AAC5B,UAAM,eAAe,CAAC;AACtB,cAAU,QAAQ,CAAC,CAAC,EAAE,mBAAmB,EAAE,aAAa,oBAAoB,MAAM;AAChF,UAAI,mBAAmB;AACrB,2BAAmB,KAAK,iBAAiB;AAAA,MAC3C;AACA,UAAI,aAAa;AACf,qBAAa,KAAK,WAAW;AAAA,MAC/B;AACA,6BAAuB;AAAA,IACzB,CAAC;AACD,uBAAmB,QAAQ,CAAC,OAAO,GAAG,CAAC;AACvC,QAAI,aAAa,QAAQ;AACvB,4BAAsB,MAAM;AAC1B,qBAAa,QAAQ,CAAC,OAAO,GAAG,CAAC;AAAA,MACnC,CAAC;AAAA,IACH;AAAA,EACF;AACF,GAjFsB;AAkFtB,IAAI,gBAAgB,wBAAC,aAAa,gBAAgB,CAAC,EAAE,eAAe,YAAY,WAAW,YAAY,UAAU,YAAY,MAAM,CAAC,KAAK,MAAM,IAAI,CAAC,MAAM,YAAY,CAAC,EAAE,CAAC,CAAC,IAAvJ;AACpB,IAAI,2BAA2C,oBAAI,QAAQ;AAC3D,IAAI,QAAQ,wBAACA,UAAS,MAAM,aAAa;AACvC,QAAM,4BAA4B,CAAC,YAAY,KAAK;AACpD,MAAI,UAAU;AACZ,SAAK,OAAO,KAAK;AAAA,EACnB;AACA,MAAI;AACJ,MAAI;AACF,iBAAa,OAAO,KAAK,OAAO,aAAa,UAAUA,UAAS,IAAI,IAAI,QAAQ,KAAK,MAAM,QAAQ;AACnG,QAAI,SAAS,CAAC,GAAG,QAAQ,MAAM,SAAS,CAAC,EAAE,iBAAiB,GAAG;AAC7D,0BAAoB,SAAS,CAAC,EAAE,iBAAiB;AACjD,MAAAA,SAAQ,CAAC,EAAE,KAAK,CAACA,UAAS,mBAAmB,IAAI,CAAC;AAAA,IACpD;AACA,UAAM,eAAe,4BAA4B,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI;AACzF,UAAM,YAAY,CAAC;AACnB,QAAI;AACJ,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,UAAI,MAAM,QAAQ,SAAS,CAAC,CAAC,GAAG;AAC9B,iBAAS,OAAO,GAAG,GAAG,GAAG,SAAS,CAAC,EAAE,KAAK,CAAC;AAAA,MAC7C;AACA,UAAI,QAAQ,UAAU,SAAS,CAAC,CAAC;AACjC,UAAI,OAAO;AACT,YAAI,OAAO,MAAM,QAAQ,cAAc,CAAC,MAAM,IAAI,gBAAgB,GAAG;AACnE,cAAI,eAAkB,SAAS,GAAG;AAChC,kBAAM,SAAS,EAAE,CAAC,IAAI,eAAkB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,GAAG,EAAE,CAAC,CAAC;AAAA,UACzE;AACA,cAAIA,SAAQ,CAAC,GAAG,QAAQ;AACtB,kBAAM,SAAS,EAAE,CAAC,IAAIA,SAAQ,CAAC,EAAE,GAAG,EAAE;AAAA,UACxC;AAAA,QACF;AACA,YAAI;AACJ,YAAI,gBAAgB,aAAa,QAAQ;AACvC,gBAAM,KAAK,aAAa;AAAA,YACtB,aAAa,KAAK,IAAI,CAAC,MAAM,aAAa,CAAC,IAAI,MAAM,QAAQ,SAAS,CAAC,MAAM,EAAE,QAAQ,MAAM,OAAO,EAAE,QAAQ,MAAM,MAAM,CAAC,MAAM,EAAE,QAAQ,MAAM;AAAA,UACnJ;AACA,cAAI,OAAO,IAAI;AACb,uBAAW,aAAa,EAAE;AAC1B,yBAAa,OAAO,IAAI,CAAC;AAAA,UAC3B;AAAA,QACF;AACA,YAAI,UAAU;AACZ,cAAI,aAAa,KAAK,GAAG;AACvB,gBAAI,SAAS,MAAM,MAAM,GAAG;AAC1B;AACA,uBAAS,IAAI,MAAM;AACnB,uBAAS,IAAI;AAAA,YACf;AACA,oBAAQ;AAAA,UACV,OAAO;AACL,kBAAM,KAAK,SAAS,KAAK,SAAS;AAClC,qBAAS,QAAQ,MAAM;AACvB,qBAAS,MAAM,MAAM,KAAK,KAAK;AAC/B,gBAAI,OAAO,MAAM,QAAQ,YAAY;AACnC,oBAAM,cAAc,SAAS,SAAS,EAAE,CAAC;AACzC,uBAAS,SAAS,EAAE,CAAC,IAAI,MAAM,SAAS,EAAE,CAAC,KAAK,CAAC;AACjD,uBAAS,SAAS,EAAE,CAAC,IAAI,MAAM,SAAS,EAAE,CAAC;AAC3C,kBAAI,CAAC,SAAS,OAAO,SAAS,KAAK,cAAc,MAAM,KAAK,SAAS,IAAI,QAAQ,IAAI,IAAI,SAAS,KAAK,MAAM,cAAc,aAAa,SAAS,SAAS,EAAE,CAAC,CAAC,GAAG;AAC/J,yBAAS,IAAI;AAAA,cACf;AAAA,YACF;AACA,oBAAQ;AAAA,UACV;AAAA,QACF,WAAW,CAAC,aAAa,KAAK,KAAKH,mBAAkB;AACnD,gBAAM,KAAK,WAAWA,iBAAgB;AACtC,cAAI,IAAI;AACN,kBAAM,IAAI;AAAA,UACZ;AAAA,QACF;AACA,YAAI,CAAC,aAAa,KAAK,KAAK,CAAC,MAAM,GAAG;AACpC,gBAAMG,UAAS,KAAK;AACpB,iBAAO,MAAM;AAAA,QACf;AACA,kBAAU,KAAK,KAAK;AACpB,YAAI,YAAY,CAAC,SAAS,KAAK,CAAC,MAAM,GAAG;AACvC,mBAAS,IAAI,UAAU,KAAK,CAAC,aAAa,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE,GAAG;AAC9D,cAAE,KAAK;AAAA,UACT;AAAA,QACF;AACA,mBAAW;AAAA,MACb;AAAA,IACF;AACA,SAAK,KAAK,4BAA4B,CAAC,GAAG,KAAK,IAAI,GAAG,gBAAgB,CAAC,CAAC,IAAI,gBAAgB,CAAC;AAC7F,SAAK,KAAK;AACV,QAAI,2BAA2B;AAC7B,aAAO,KAAK;AAAA,IACd;AAAA,EACF,SAAS,GAAG;AACV,SAAK,IAAI;AACT,QAAI,MAAM,aAAa;AACrB,UAAI,mBAAmB;AACrB;AAAA,MACF,OAAO;AACL,cAAM;AAAA,MACR;AAAA,IACF;AACA,UAAM,CAAC,qBAAqBC,eAAc,gBAAgB,IAAI,KAAK,SAAS,IAAI,CAAC,KAAK,CAAC;AACvF,QAAIA,eAAc;AAChB,YAAM,mBAAmB,6BAAM,OAAO,CAAC,GAAG,OAAOD,SAAQ,CAAC,CAAC,GAAG,gBAAgB,GAArD;AACzB,YAAM,wBAAwB,yBAAyB,IAAI,gBAAgB,KAAK,CAAC;AACjF,4BAAsB,KAAK,gBAAgB;AAC3C,+BAAyB,IAAI,kBAAkB,qBAAqB;AACpE,YAAM,WAAWC,cAAa,GAAG,MAAM;AACrC,cAAM,UAAU,yBAAyB,IAAI,gBAAgB;AAC7D,YAAI,SAAS;AACX,gBAAM,IAAI,QAAQ,QAAQ,gBAAgB;AAC1C,cAAI,MAAM,IAAI;AACZ,oBAAQ,OAAO,GAAG,CAAC;AACnB,mBAAO,iBAAiB;AAAA,UAC1B;AAAA,QACF;AAAA,MACF,CAAC;AACD,UAAI,UAAU;AACZ,YAAID,SAAQ,CAAC,MAAM,GAAG;AACpB,UAAAA,SAAQ,CAAC,IAAI;AAAA,QACf,OAAO;AACL,gBAAMA,UAAS,kBAAkB,CAAC,QAAQ,CAAC;AAC3C,eAAKC,cAAa,WAAW,KAAKD,aAAY,wBAAwB,iBAAiB,GAAG;AACxF,kBAAM,kBAAkB,iBAAiB,GAAG,KAAK;AACjD;AAAA,UACF;AAAA,QACF;AACA,cAAM;AAAA,MACR;AAAA,IACF;AACA,UAAM;AAAA,EACR,UAAE;AACA,QAAI,mBAAmB;AACrB,MAAAA,SAAQ,CAAC,EAAE,IAAI;AAAA,IACjB;AAAA,EACF;AACF,GAjIY;AAkIZ,IAAI,YAAY,wBAAC,SAAS;AACxB,MAAI,SAAS,UAAU,SAAS,QAAQ,OAAO,SAAS,WAAW;AACjE,WAAO;AAAA,EACT,WAAW,OAAO,SAAS,YAAY,OAAO,SAAS,UAAU;AAC/D,WAAO,EAAE,GAAG,KAAK,SAAS,GAAG,GAAG,KAAK;AAAA,EACvC,OAAO;AACL,QAAI,QAAQ,MAAM;AAChB,aAAO;AAAA,QACL,KAAK,KAAK;AAAA,QACV,OAAO,KAAK;AAAA,QACZ,KAAK,KAAK;AAAA,QACV,GAAG,KAAK;AAAA,QACR,MAAM,KAAK;AAAA,QACX,KAAK,KAAK,MAAM;AAAA,QAChB,GAAG,KAAK,KAAK;AAAA,MACf;AAAA,IACF;AACA,QAAI,OAAO,KAAK,QAAQ,YAAY;AAClC;AACA,WAAK,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC;AAAA,IAC1B,OAAO;AACL,YAAM,KAAK,aAAa,KAAK,GAAG;AAChC,UAAI,IAAI;AACN,QAAAH,sBAAqB,cAAc,EAAE;AACrC,aAAK,MAAM,WAAW;AAAA,UACpB;AAAA,YACE,KAAKA;AAAA,YACL,OAAO;AAAA,cACL,OAAO,KAAK,IAAI,qBAAqB,EAAE;AAAA,cACvC,UAAU,KAAK,MAAM;AAAA,YACvB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF,GArCgB;AA4ChB,IAAI,aAAa,wBAACK,UAAS,SAAS;AAClC,OAAK,SAAS,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM;AACtC,MAAE,OAAO,KAAK,CAAC;AAAA,EACjB,CAAC;AACD,MAAI;AACF,UAAMA,UAAS,MAAM,MAAM;AAAA,EAC7B,QAAQ;AACN;AAAA,EACF;AACA,MAAI,KAAK,GAAG;AACV,WAAO,KAAK;AACZ;AAAA,EACF;AACA,OAAK,SAAS,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM;AACnC,MAAE,OAAO,IAAI;AAAA,EACf,CAAC;AACD,MAAIA,SAAQ,CAAC,MAAM,KAAK,CAACA,SAAQ,CAAC,GAAG;AACnC,UAAM,MAAM,KAAK,GAAG,KAAK;AAAA,EAC3B;AACF,GAnBiB;AAoBjB,IAAI,YAA4B,oBAAI,QAAQ;AAC5C,IAAI,oBAAoB,CAAC;AACzB,IAAI,SAAS,8BAAOA,UAAS,SAAS;AACpC,EAAAA,SAAQ,CAAC,MAAM,CAAC;AAChB,QAAM,WAAW,UAAU,IAAI,IAAI;AACnC,MAAI,UAAU;AACZ,aAAS,CAAC,EAAE,MAAM;AAAA,EACpB;AACA,MAAI;AACJ,QAAM,UAAU,IAAI,QAAQ,CAAC,MAAM,UAAU,CAAC;AAC9C,YAAU,IAAI,MAAM;AAAA,IAClB;AAAA,IACA,MAAM;AACJ,UAAIA,SAAQ,CAAC,GAAG;AACd,QAAAA,SAAQ,CAAC,EAAEA,UAAS,MAAM,CAACC,cAAa;AACtC,qBAAWA,WAAU,IAAI;AAAA,QAC3B,CAAC,EAAE,KAAK,MAAM,QAAQ,IAAI,CAAC;AAAA,MAC7B,OAAO;AACL,mBAAWD,UAAS,IAAI;AACxB,gBAAQ,IAAI;AAAA,MACd;AAAA,IACF;AAAA,EACF,CAAC;AACD,MAAI,kBAAkB,QAAQ;AAC5B;AACA,sBAAkB,GAAG,EAAE,EAAE,IAAI,IAAI;AAAA,EACnC,OAAO;AACL,UAAM,QAAQ,QAAQ;AACtB,UAAM,SAAS,UAAU,IAAI,IAAI;AACjC,QAAI,QAAQ;AACV,gBAAU,OAAO,IAAI;AACrB,aAAO,CAAC,EAAE;AAAA,IACZ;AAAA,EACF;AACA,SAAO;AACT,GAjCa;AA6Db,IAAI,eAAe,wBAAC,UAAU,WAAW,SAAS;AAAA,EAChD,KAAK;AAAA,EACL,OAAO;AAAA,IACL;AAAA,EACF;AAAA,EACA;AAAA,EACA,GAAG;AAAA,EACH,GAAG;AACL,IARmB;;;ACtjBnB,IAAI,aAAa;AACjB,IAAI,eAAe;AACnB,IAAI,iBAAiB;AACrB,IAAI,aAAa;AAEjB,IAAI,0BAA0C,oBAAI,QAAQ;AAC1D,IAAI,gBAAgB,wBAAC,UAAU,SAAS,CAAC,YAAY,CAAC,QAAQ,SAAS,WAAW,KAAK,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,QAAQ,SAAS,CAAC,CAAC,GAAtH;AAUpB,IAAI,aAAa;AAuCjB,IAAI,eAAe,CAAC;AAoEpB,IAAI,WAAW,wBAAC,iBAAiB;AAC/B,QAAM,sBAAsB,6BAAM,OAAO,iBAAiB,aAAa,aAAa,IAAI,cAA5D;AAC5B,QAAM,YAAY,eAAe,GAAG,EAAE;AACtC,MAAI,CAAC,WAAW;AACd,WAAO,CAAC,oBAAoB,GAAG,MAAM;AAAA,IACrC,CAAC;AAAA,EACH;AACA,QAAM,CAAC,EAAE,IAAI,IAAI;AACjB,QAAM,aAAa,KAAK,SAAS,EAAE,CAAC,EAAE,UAAU,MAAM,CAAC;AACvD,QAAM,YAAY,KAAK,SAAS,EAAE,CAAC;AACnC,SAAO,WAAW,SAAS,MAAM;AAAA,IAC/B,oBAAoB;AAAA,IACpB,CAAC,aAAa;AACZ,YAAM,kBAAkB;AACxB,YAAM,YAAY,WAAW,SAAS;AACtC,UAAI,OAAO,aAAa,YAAY;AAClC,mBAAW,SAAS,UAAU,CAAC,CAAC;AAAA,MAClC;AACA,UAAI,CAAC,OAAO,GAAG,UAAU,UAAU,CAAC,CAAC,GAAG;AACtC,kBAAU,CAAC,IAAI;AACf,YAAI,aAAa,QAAQ;AACvB,gBAAM,CAAC,aAAa,cAAc,IAAI,aAAa,GAAG,EAAE;AACxD,kBAAQ,IAAI;AAAA,YACV,gBAAgB,IAAI,OAAO,OAAO,CAAC,aAAa,OAAO,eAAe,GAAG,IAAI;AAAA,YAC7E;AAAA,UACF,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,MAAM;AACnB,gBAAI,CAAC,SAAS,EAAE,gBAAgB,KAAK,gBAAgB,IAAI;AACvD;AAAA,YACF;AACA,kBAAM,SAAS,MAAM;AACrB,kBAAM,gBAAgB,6BAAM;AAC1B,yBAAW,MAAM;AACf,oBAAI,WAAW,MAAM,IAAI;AACvB;AAAA,gBACF;AACA,uBAAO,CAAC,gBAAgB,IAAI,IAAI,GAAG,OAAO,eAAe,GAAG,KAAK;AAAA,cACnE,CAAC;AAAA,YACH,GAPsB;AAQtB,kCAAsB,aAAa;AAAA,UACrC,CAAC;AAAA,QACH,OAAO;AACL,iBAAO,CAAC,GAAG,OAAO,eAAe,GAAG,IAAI;AAAA,QAC1C;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GA9Ce;AAkFf,IAAI,cAAc,wBAAC,UAAU,SAAS;AACpC,QAAM,YAAY,eAAe,GAAG,EAAE;AACtC,MAAI,CAAC,WAAW;AACd,WAAO;AAAA,EACT;AACA,QAAM,CAAC,EAAE,IAAI,IAAI;AACjB,QAAM,gBAAgB,KAAK,SAAS,EAAE,CAAC,EAAE,cAAc,MAAM,CAAC;AAC9D,QAAM,YAAY,KAAK,SAAS,EAAE,CAAC;AACnC,QAAM,WAAW,cAAc,SAAS;AACxC,MAAI,cAAc,WAAW,CAAC,GAAG,IAAI,GAAG;AACtC,kBAAc,SAAS,IAAI,CAAC,UAAU,IAAI;AAAA,EAC5C,OAAO;AACL,eAAW,cAAc,SAAS,EAAE,CAAC;AAAA,EACvC;AACA,SAAO;AACT,GAfkB;AA0BlB,IAAI,MAAM,wBAAC,YAAY;AACrB,QAAM,YAAY,wBAAwB,IAAI,OAAO;AACrD,MAAI,WAAW;AACb,QAAI,UAAU,WAAW,GAAG;AAC1B,YAAM,UAAU,CAAC;AAAA,IACnB;AACA,WAAO,UAAU,CAAC;AAAA,EACpB;AACA,UAAQ;AAAA,IACN,CAAC,QAAQ,wBAAwB,IAAI,SAAS,CAAC,GAAG,CAAC;AAAA,IACnD,CAAC,MAAM,wBAAwB,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC;AAAA,EACzD;AACA,QAAM;AACR,GAbU;AAcV,IAAI,UAAU,wBAAC,SAAS,SAAS;AAC/B,QAAM,YAAY,eAAe,GAAG,EAAE;AACtC,MAAI,CAAC,WAAW;AACd,WAAO,QAAQ;AAAA,EACjB;AACA,QAAM,CAAC,EAAE,IAAI,IAAI;AACjB,QAAM,YAAY,KAAK,SAAS,EAAE,CAAC,EAAE,UAAU,MAAM,CAAC;AACtD,QAAM,YAAY,KAAK,SAAS,EAAE,CAAC;AACnC,QAAM,WAAW,UAAU,SAAS;AACpC,MAAI,cAAc,WAAW,CAAC,GAAG,IAAI,GAAG;AACtC,cAAU,SAAS,IAAI,CAAC,QAAQ,GAAG,IAAI;AAAA,EACzC;AACA,SAAO,UAAU,SAAS,EAAE,CAAC;AAC/B,GAbc;;;ACnPd,IAAI,cAAc,cAAc;AAAA,EAC9B,SAAS;AAAA,EACT,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AACV,CAAC;AACD,IAAI,UAA0B,oBAAI,IAAI;AACtC,IAAI,iBAAiB,wBAAC,WAAW;AAC/B,UAAQ,IAAI,MAAM;AAClB,SAAO,QAAQ,MAAM,QAAQ,OAAO,MAAM,CAAC;AAC7C,GAHqB;;;AHNrB,IAAI,aAAa,6BAAM;AACrB,uBAAqC,uBAAO,OAAO,IAAI;AACvD,oBAAkC,uBAAO,OAAO,IAAI;AACtD,GAHiB;AAIjB,IAAI,aAAa,wBAAC,KAAK,OAAO;AAC5B,SAAO;AAAA,IACL,MAAM,CAAC,MAAM;AACX,UAAI;AACJ,UAAI,KAAK;AACP,YAAI,OAAO,QAAQ,YAAY;AAC7B,uBAAa,IAAI,CAAC,MAAM,MAAM;AAC5B,gBAAI,IAAI;AAAA,UACV;AAAA,QACF,WAAW,OAAO,aAAa,KAAK;AAClC,cAAI,UAAU;AACd,uBAAa,6BAAM;AACjB,gBAAI,UAAU;AAAA,UAChB,GAFa;AAAA,QAGf;AAAA,MACF;AACA,YAAM,YAAY,GAAG,CAAC;AACtB,aAAO,MAAM;AACX,oBAAY;AACZ,qBAAa;AAAA,MACf;AAAA,IACF;AAAA,IACA,CAAC,GAAG;AAAA,EACN;AACF,GAxBiB;AAyBjB,IAAI,qBAAqC,uBAAO,OAAO,IAAI;AAC3D,IAAI,kBAAkC,uBAAO,OAAO,IAAI;AACxD,IAAIE,uBAAsB,wBAAC,KAAK,OAAO,kBAAkB,aAAa,oBAAoB;AACxF,MAAI,OAAO,UAAU;AACnB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,KAAK,MAAM;AAAA,IACb;AAAA,EACF;AACA,QAAM,OAAO,SAAS;AACtB,MAAI,EAAE,QAAQ,SAAS,YAAY,UAAU,GAAG,UAAU,IAAI;AAC9D,MAAI,UAAU;AACd,MAAI,UAAU;AACd,QAAM,aAAa,aAAa,GAAG;AACnC,MAAI,mBAAmB;AACvB,MAAI,WAAW,SAAS,GAAG;AACzB,UAAM,OAAO,KAAK,iBAAiB,GAAG;AACtC;AACE,iBAAW,KAAK,MAAM;AACpB,mBAAW,OAAO,aAAa,GAAG,GAAG;AACnC,cAAI,EAAE,aAAa,GAAG,MAAM,MAAM,GAAG,GAAG;AACtC,sBAAU;AACV,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF;AACF,QAAI,CAAC,SAAS;AACZ,YAAM,WAAW,WAAW;AAAA,QAC1B,CAAC,KAAK,QAAQ,MAAM,GAAG,MAAM,SAAS,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,MAAM,GAAG,CAAC;AAAA,QACvE;AAAA,MACF;AACA,gBAAU,CAAC,gBAAgB,QAAQ;AACnC,gBAAU,gBAAgB,QAAQ,OAAO,MAAM;AAC7C,cAAM,IAAI,SAAS,cAAc,GAAG;AACpC,mBAAW,OAAO,YAAY;AAC5B,cAAI,MAAM,GAAG,MAAM,QAAQ;AACzB,cAAE,aAAa,KAAK,MAAM,GAAG,CAAC;AAAA,UAChC;AACA,cAAI,MAAM,KAAK;AACb,cAAE,aAAa,OAAO,MAAM,GAAG;AAAA,UACjC;AAAA,QACF;AACA,eAAO;AAAA,MACT,GAAG;AAAA,IACL;AAAA,EACF,OAAO;AACL,uBAAmB,KAAK,iBAAiB,GAAG;AAAA,EAC9C;AACA,eAAa,cAAc,cAAc,KAAK;AAC9C,MAAI,aAAa;AACf,cAAU,kBAAkB,IAAI;AAAA,EAClC;AACA,QAAM,SAAS;AAAA,IACb,CAAC,MAAM;AACL,UAAI,WAAW,SAAS,GAAG;AACzB,YAAI,QAAQ;AACZ,mBAAW,mBAAmB,KAAK,iBAAiB,GAAG,GAAG;AACxD,cAAI,SAAS,gBAAgB,aAAa,kBAAkB,MAAM,YAAY;AAC5E,iBAAK,aAAa,GAAG,eAAe;AACpC;AAAA,UACF;AACA,cAAI,gBAAgB,aAAa,kBAAkB,MAAM,YAAY;AACnE,oBAAQ;AAAA,UACV;AAAA,QACF;AACA,aAAK,YAAY,CAAC;AAAA,MACpB,WAAW,kBAAkB;AAC3B,YAAI,QAAQ;AACZ,mBAAW,mBAAmB,kBAAkB;AAC9C,cAAI,oBAAoB,GAAG;AACzB,oBAAQ;AACR;AAAA,UACF;AAAA,QACF;AACA,YAAI,CAAC,OAAO;AACV,eAAK;AAAA,YACH;AAAA,YACA,KAAK,SAAS,iBAAiB,CAAC,CAAC,IAAI,iBAAiB,CAAC,IAAI,KAAK,cAAc,GAAG;AAAA,UACnF;AAAA,QACF;AACA,2BAAmB;AAAA,MACrB;AAAA,IACF;AAAA,IACA,CAAC,UAAU;AAAA,EACb;AACA,QAAM,MAAM,WAAW,MAAM,KAAK,CAAC,MAAM;AACvC,UAAM,MAAM,WAAW,CAAC;AACxB,QAAI,qBAAqB,GAAG;AAC1B,QAAE,YAAY;AAAA,IAChB;AACA,QAAI,WAAW,kBAAkB;AAC/B,aAAO,CAAC;AAAA,IACV;AACA,QAAI,CAAC,WAAW,CAAC,QAAQ;AACvB;AAAA,IACF;AACA,QAAI,UAAU,mBAAmB,EAAE,aAAa,GAAG,CAAC,MAAM,IAAI;AAAA,MAC5D,CAAC,SAAS,WAAW;AACnB,UAAE,iBAAiB,QAAQ,OAAO;AAClC,UAAE,iBAAiB,SAAS,MAAM;AAAA,MACpC;AAAA,IACF;AACA,QAAI,QAAQ;AACV,gBAAU,QAAQ,KAAK,MAAM;AAAA,IAC/B;AACA,QAAI,SAAS;AACX,gBAAU,QAAQ,MAAM,OAAO;AAAA,IACjC;AACA,YAAQ,MAAM,MAAM;AAAA,IACpB,CAAC;AAAA,EACH,CAAC;AACD,MAAI,mBAAmB,aAAa,UAAU;AAC5C,UAAM,MAAM,aAAa,GAAG,EAAE,CAAC;AAC/B,QAAI,MAAM,GAAG,GAAG;AACd,YAAM,QAAQ,MAAM,GAAG;AACvB,YAAM,UAAU,mBAAmB,KAAK,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC7E,eAAO,OAAO;AACd,gBAAQ,iBAAiB,QAAQ,OAAO;AACxC,gBAAQ,iBAAiB,SAAS,MAAM;AAAA,MAC1C,CAAC;AACD,UAAI,OAAO;AAAA,IACb;AAAA,EACF;AACA,QAAM,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,IACN,OAAO;AAAA,MACL,GAAG;AAAA,MACH;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACA,UAAQ,IAAI;AACZ,MAAI,SAAS;AACX,YAAQ,IAAI;AAAA,EACd;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF,GA5I0B;AA6I1B,IAAIC,SAAQ,wBAAC,UAAU;AACrB,QAAMC,oBAAmBC,qBAAoB;AAC7C,QAAM,KAAKD,qBAAoB,WAAWA,iBAAgB;AAC1D,MAAI,IAAI,SAAS,KAAK,GAAG;AACvB,WAAO;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,MAAM;AAAA,MACN,KAAK,MAAM;AAAA,IACb;AAAA,EACF;AACA,SAAOF,qBAAoB,SAAS,OAAO,QAAQ,OAAO,KAAK;AACjE,GAZY;AAaZ,IAAII,UAAS,wBAAC,UAAU;AACtB,MAAI,CAAC,SAAS,CAAC,OAAO,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;AACrD,WAAO;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,MAAM;AAAA,MACN,KAAK,MAAM;AAAA,IACb;AAAA,EACF;AACA,SAAOJ,qBAAoB,UAAU,OAAO,GAAG,OAAO,IAAI;AAC5D,GAVa;AAWb,IAAIK,SAAQ,wBAAC,UAAU;AACrB,MAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,YAAY,EAAE,MAAM,CAAC,MAAM,KAAK,KAAK,GAAG;AAC9D,WAAO;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,MAAM;AAAA,MACN,KAAK,MAAM;AAAA,IACb;AAAA,EACF;AACA,QAAM,WAAW,IAAI,MAAM;AAC3B,SAAO,MAAM;AACb,SAAOL,qBAAoB,SAAS,OAAO,GAAG,MAAM,IAAI;AAC1D,GAZY;AAaZ,IAAIM,QAAO,wBAAC,UAAU;AACpB,MAAI,CAAC,SAAS,CAAC,UAAU,SAAS,EAAE,KAAK,CAAC,MAAM,KAAK,KAAK,KAAK,MAAM,QAAQ,iBAAiB,EAAE,gBAAgB,UAAU,cAAc,QAAQ;AAC9I,WAAO;AAAA,MACL,KAAK;AAAA,MACL;AAAA,MACA,MAAM;AAAA,MACN,KAAK,MAAM;AAAA,IACb;AAAA,EACF;AACA,SAAON,qBAAoB,QAAQ,OAAO,GAAG,gBAAgB,OAAO,IAAI;AAC1E,GAVW;AAWX,IAAIO,QAAO,wBAAC,UAAU;AACpB,SAAOP,qBAAoB,QAAQ,OAAO,QAAQ,OAAO,KAAK;AAChE,GAFW;AAGX,IAAI,wBAAwB,OAAO;AACnC,IAAIQ,QAAO,wBAAC,UAAU;AACpB,QAAM,EAAE,QAAQ,GAAG,UAAU,IAAI;AACjC,MAAI,OAAO,WAAW,YAAY;AAChC;AACA,cAAU,SAAS;AAAA,EACrB;AACA,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;AAChD,QAAM,WAAW;AAAA,IACf,OAAO,OAAO;AACZ,YAAM,gBAAgB,GAAG,YAAY,SAAS,GAAG,OAAO,qBAAqB;AAC7E,UAAI,OAAO,kBAAkB,YAAY;AACvC;AAAA,MACF;AACA,SAAG,eAAe;AAClB,YAAM,WAAW,IAAI,SAAS,GAAG,MAAM;AACvC,eAAS,CAAC,UAAU,IAAI,CAAC;AACzB,YAAM,YAAY,cAAc,QAAQ;AACxC,UAAI,qBAAqB,SAAS;AAChC,uBAAe,SAAS;AACxB,cAAM;AAAA,MACR;AACA,eAAS,CAAC,MAAM,IAAI,CAAC;AAAA,IACvB;AAAA,IACA,CAAC;AAAA,EACH;AACA,QAAM,MAAM,WAAW,MAAM,KAAK,CAAC,OAAO;AACxC,OAAG,iBAAiB,UAAU,QAAQ;AACtC,WAAO,MAAM;AACX,SAAG,oBAAoB,UAAU,QAAQ;AAAA,IAC3C;AAAA,EACF,CAAC;AACD,QAAM,CAAC,MAAM,OAAO,IAAI;AACxB,QAAM,CAAC,IAAI;AACX,SAAO;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,MACL,OAAO;AAAA,QACL,SAAS,SAAS;AAAA,QAClB;AAAA,QACA,QAAQ,OAAO,SAAS;AAAA,QACxB,QAAQ,OAAO,SAAS;AAAA,MAC1B;AAAA,MACA,UAAU;AAAA,QACR,KAAK;AAAA,QACL,OAAO;AAAA,UACL,GAAG;AAAA,UACH;AAAA,QACF;AAAA,QACA,MAAM;AAAA,QACN;AAAA,MACF;AAAA,IACF;AAAA,IACA,GAAG;AAAA,EACL;AACF,GAtDW;AAuDX,IAAIC,yBAAwB,wBAAC,KAAK;AAAA,EAChC;AAAA,EACA,GAAG;AACL,MAAM;AACJ,MAAI,OAAO,eAAe,YAAY;AACpC,UAAM,UAAU,YAAY,CAAC,OAAO;AAClC,SAAG,eAAe;AAClB,SAAG,cAAc,KAAK;AAAA,QACpB,IAAI,YAAY,UAAU,EAAE,QAAQ,EAAE,CAAC,qBAAqB,GAAG,WAAW,EAAE,CAAC;AAAA,MAC/E;AAAA,IACF,GAAG,CAAC,CAAC;AACL,UAAM,MAAM,WAAW,MAAM,KAAK,CAAC,OAAO;AACxC,SAAG,iBAAiB,SAAS,OAAO;AACpC,aAAO,MAAM;AACX,WAAG,oBAAoB,SAAS,OAAO;AAAA,MACzC;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,MAAM;AAAA,IACN,KAAK,MAAM;AAAA,EACb;AACF,GAxB4B;AAyB5B,IAAIC,SAAQ,wBAAC,UAAUD,uBAAsB,SAAS,KAAK,GAA/C;AACZ,IAAIE,UAAS,wBAAC,UAAUF,uBAAsB,UAAU,KAAK,GAAhD;AACb,OAAO,OAAO,cAAc;AAAA,EAC1B,OAAAR;AAAA,EACA,QAAAG;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AAAA,EACA,MAAAC;AAAA,EACA,MAAAC;AAAA,EACA,OAAAE;AAAA,EACA,QAAAC;AACF,CAAC;;;AI/TD,IAAIC,UAAS,wBAAC,KAAK,OAAO,QAAQ;AAChC,MAAI,OAAO,QAAQ,YAAYC,oBAAqB,GAAG,GAAG;AACxD,UAAMA,oBAAqB,GAAG;AAAA,EAChC;AACA,SAAO;AAAA,IACL;AAAA,IACA,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA,KAAK,MAAM;AAAA,EACb;AACF,GAXa;AAYb,IAAIC,YAAW,wBAAC,UAAUF,QAAO,IAAI,OAAO,MAAM,GAAnC;;;ACXf,IAAI,gBAAgB,wBAAC,EAAE,UAAU,UAAU,gBAAgB,QAAQ,MAAM;AACvE,QAAM,MAAMG,UAAS,EAAE,SAAS,CAAC;AACjC,MAAI,iBAAiB,IAAI,CAAC,QAAQ;AAChC,QAAI,eAAe,SAAS;AAC1B,YAAM;AAAA,IACR;AACA,cAAU,GAAG;AACb,WAAO,iBAAiB,GAAG,KAAK;AAAA,EAClC;AACA,SAAO;AACT,GAVoB;AAWpB,IAAI,WAAW,wBAAC;AAAA,EACd;AAAA,EACA;AACF,MAAM;AACJ,QAAM,MAAMA,UAAS,EAAE,SAAS,CAAC;AACjC,MAAI,iBAAiB,IAAI,CAAC,KAAK,UAAU;AACvC,QAAI,EAAE,eAAe,UAAU;AAC7B,YAAM;AAAA,IACR;AACA,QAAI,QAAQ,KAAK;AACjB,WAAO;AAAA,EACT;AACA,SAAO;AACT,GAbe;;;ACLf,IAAI,mBAAmBC,eAAc,IAAI;AACzC,IAAI,kBAAkB;AACtB,IAAIC,YAAW,8BAAO;AAAA,EACpB;AAAA,EACA;AACF,MAAM;AACJ,MAAI,CAAC,UAAU;AACb,WAAO,SAAS,SAAS;AAAA,EAC3B;AACA,MAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,eAAW,CAAC,QAAQ;AAAA,EACtB;AACA,QAAM,QAAQ,WAAW,gBAAgB,GAAG;AAC5C,MAAI,WAAW,CAAC;AAChB,QAAM,YAAY,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AACzC,QAAM,eAAe,wBAAC,UAAU;AAC9B,mBAAe,IAAI;AACnB,WAAO;AAAA,EACT,GAHqB;AAIrB,MAAI;AACF,cAAU,SAAS,EAAE,CAAC,IAAI;AAC1B,mBAAe,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;AACnC,eAAW,SAAS;AAAA,MAClB,CAAC,MAAM,KAAK,QAAQ,OAAO,MAAM,YAAY,KAAK,EAAE,SAAS;AAAA,IAC/D;AAAA,EACF,SAAS,GAAG;AACV,QAAI,aAAa,SAAS;AACxB,iBAAW;AAAA,QACT,EAAE,KAAK,MAAM;AACX,oBAAU,SAAS,EAAE,CAAC,IAAI;AAC1B,yBAAe,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC;AACnC,iBAAO,iBAAiB,QAAQ,EAAE,KAAK,YAAY;AAAA,QACrD,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF,UAAE;AACA,iBAAa;AAAA,EACf;AACA,MAAI,SAAS,KAAK,CAAC,QAAQ,eAAe,OAAO,GAAG;AAClD,UAAM,QAAQ;AACd,UAAM,cAAc,MAAM,SAAS,SAAS;AAC5C,WAAO,IAAI,mBAAmB,KAAK,gBAAgB,WAAW,aAAa;AAAA,MACzE,GAAG,YAAY,aAAa,CAAC;AAAA,MAC7B,CAAC,EAAE,OAAO,QAAQ,SAAAC,SAAQ,MAAM;AAC9B,YAAI,UAAU,yBAAyB,cAAc;AACnD;AAAA,QACF;AACA,eAAO,QAAQ,IAAI,QAAQ,EAAE,KAAK,OAAO,cAAc;AACrD,sBAAY,UAAU,KAAK;AAC3B,gBAAM,UAAU,UAAU,KAAK,EAAE;AACjC,cAAI,QAAQ;AACV,mBAAO,CAAC,IAAI,OAAO,CAAC,EAAE;AAAA,cACpB,IAAI,OAAO,mBAAmB,KAAK,6BAA6B;AAAA,cAChE;AAAA,YACF;AAAA,UACF;AACA,cAAIC,QAAO,SAAS,KAAK,iCAAiC,KAAK,KAAK,OAAO,qBAAqB,QAAQ,WAAW,KAAK,MAAM,EAAE;AAAA;AAAA;AAAA,wBAGlH,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnB,gBAAM,YAAY,UAAU,IAAI,CAACC,WAAUA,OAAM,aAAa,CAAC,CAAC,EAAE,KAAK;AACvE,cAAI,CAAC,UAAU,QAAQ;AACrB,mBAAOD;AAAA,UACT;AACA,cAAI,UAAU,yBAAyB,QAAQ;AAC7C,YAAAA,QAAO,MAAM,gBAAgBA,OAAM,yBAAyB,cAAc,MAAMD,QAAO;AAAA,UACzF;AACA,iBAAO,IAAIC,OAAM,SAAS;AAAA,QAC5B,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,WAAO,IAAI,SAAS,KAAK,EAAE,CAAC;AAAA,EAC9B;AACF,GA/Ee;AAgFfF,UAAS,YAAY,IAAI;AACzB,IAAI,cAAc,IAAI,YAAY;AAClC,IAAI,yBAAyB,wBAAC,SAAS,UAAU,QAAQ,UAAU;AACjE,QAAM,SAAS,IAAI,eAAe;AAAA,IAChC,MAAM,MAAM,YAAY;AACtB,UAAI;AACF,YAAI,mBAAmB,SAAS;AAC9B,oBAAU,QAAQ,SAAS;AAAA,QAC7B;AACA,cAAMC,WAAU,OAAO,YAAY,WAAW,UAAU,CAAC;AACzD,cAAMG,YAAW,MAAM;AAAA,UACrB;AAAA,UACA,yBAAyB;AAAA,UACzB;AAAA,UACAH;AAAA,QACF;AACA,mBAAW,QAAQ,YAAY,OAAOG,SAAQ,CAAC;AAC/C,YAAI,gBAAgB;AACpB,cAAM,YAAY,CAAC;AACnB,cAAM,OAAO,wBAAC,YAAY;AACxB,oBAAU;AAAA,YACR,QAAQ,MAAM,CAAC,QAAQ;AACrB,sBAAQ,IAAI,GAAG;AACf,sBAAQ,GAAG;AACX,qBAAO;AAAA,YACT,CAAC,EAAE,KAAK,OAAO,QAAQ;AACrB,oBAAM,MAAM;AAAA,gBACV;AAAA,gBACA,yBAAyB;AAAA,gBACzB;AAAA,gBACAH;AAAA,cACF;AACA,kBAAI,WAAW,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,yBAAyB,QAAQ,SAAAA,SAAQ,CAAC,CAAC,EAAE,OAAO,OAAO,EAAE,QAAQ,IAAI;AAC9G;AACA,yBAAW,QAAQ,YAAY,OAAO,GAAG,CAAC;AAAA,YAC5C,CAAC;AAAA,UACH;AAAA,QACF,GAlBa;AAmBb,QAAAG,UAAS,WAAW,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,yBAAyB,QAAQ,SAAAH,SAAQ,CAAC,CAAC,EAAE,OAAO,OAAO,EAAE,QAAQ,IAAI;AACnH,eAAO,kBAAkB,UAAU,QAAQ;AACzC,gBAAM,QAAQ,IAAI,SAAS;AAAA,QAC7B;AAAA,MACF,SAAS,GAAG;AACV,gBAAQ,CAAC;AAAA,MACX;AACA,iBAAW,MAAM;AAAA,IACnB;AAAA,EACF,CAAC;AACD,SAAO;AACT,GA/C6B;;;ACtF7B,IAAI,uBAAuB;AAC3B,IAAI,mBAAmB,8BAAO,aAAa;AACzC,MAAI;AACF,WAAO,SAAS,KAAK,EAAE,IAAI,CAAC,MAAM,KAAK,QAAQ,OAAO,MAAM,YAAY,KAAK,EAAE,SAAS,CAAC;AAAA,EAC3F,SAAS,GAAG;AACV,QAAI,aAAa,SAAS;AACxB,YAAM;AACN,aAAO,iBAAiB,QAAQ;AAAA,IAClC,OAAO;AACL,YAAM;AAAA,IACR;AAAA,EACF;AACF,GAXuB;AAYvB,IAAII,iBAAgB,8BAAO,EAAE,UAAU,UAAU,gBAAgB,QAAQ,MAAM;AAC7E,MAAI,CAAC,UAAU;AACb,WAAO,IAAI,EAAE;AAAA,EACf;AACA,MAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,eAAW,CAAC,QAAQ;AAAA,EACtB;AACA,QAAM,QAAQ,WAAW,gBAAgB,GAAG;AAC5C,MAAI;AACJ,QAAM,cAAc,wBAAC,UAAU;AAC7B,cAAU,KAAK;AACf,YAAQ,eAAe,iBAAiB,KAAK,KAAK,IAAI,SAAS;AAAA,EACjE,GAHoB;AAIpB,MAAI,WAAW,CAAC;AAChB,MAAI;AACF,eAAW,SAAS;AAAA,MAClB,CAAC,MAAM,KAAK,QAAQ,OAAO,MAAM,YAAY,KAAK,EAAE,SAAS;AAAA,IAC/D;AAAA,EACF,SAAS,GAAG;AACV,kBAAc,MAAM,UAAU,SAAS;AACvC,QAAI,aAAa,SAAS;AACxB,iBAAW;AAAA,QACT,EAAE,KAAK,MAAM,iBAAiB,QAAQ,CAAC,EAAE,MAAM,CAAC,OAAO,YAAY,EAAE,CAAC;AAAA,MACxE;AAAA,IACF,OAAO;AACL,iBAAW,CAAC,YAAY,CAAC,CAAC;AAAA,IAC5B;AAAA,EACF;AACA,MAAI,SAAS,KAAK,CAAC,QAAQ,eAAe,OAAO,GAAG;AAClD,oBAAgB,MAAM,UAAU,SAAS;AACzC,UAAM,QAAQ;AACd,UAAM,YAAY,OAAO,oBAAoB,KAAK,gCAAgC,KAAK,MAAM;AAC7F,UAAM,SAAS;AACf,UAAM,gBAAgB,wBAAC,EAAE,OAAO,QAAQ,OAAO,MAAM;AACnD,UAAI,QAAQ;AACV,eAAO;AAAA,MACT;AACA,YAAM,oBAAoB,YAAY,MAAM;AAC5C,UAAI,QAAQ;AACV,eAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,WAAW,iBAAiB;AAAA,MAC5D;AACA,aAAO,SAAS,KAAK,iCAAiC,KAAK,KAAK,iBAAiB;AAAA;AAAA;AAAA,wBAG/D,KAAK;AAAA;AAAA,qEAEwC,KAAK;AAAA;AAAA;AAAA;AAAA,IAItE,GAjBsB;AAkBtB,QAAI;AACJ,UAAM,aAAa,QAAQ,IAAI,QAAQ,EAAE,MAAM,CAAC,MAAM,QAAQ,CAAC;AAC/D,WAAO,IAAI,mBAAmB,KAAK,sBAAsB,KAAK,OAAO;AAAA,MACnE,CAAC,EAAE,OAAO,QAAQ,SAAAC,SAAQ,MAAM;AAC9B,YAAI,UAAU,yBAAyB,cAAc;AACnD;AAAA,QACF;AACA,eAAO,WAAW,KAAK,OAAO,cAAc;AAC1C,cAAI,OAAO;AACT,kBAAM;AAAA,UACR;AACA,sBAAY,UAAU,KAAK;AAC3B,gBAAM,UAAU,UAAU,KAAK,EAAE;AACjC,cAAIC,QAAO,SAAS,KAAK,iCAAiC,KAAK,KAAK,OAAO,qBAAqB,QAAQ,WAAW,KAAK,MAAM,EAAE;AAAA;AAAA;AAAA,wBAGlH,KAAK;AAAA;AAAA;AAAA;AAAA;AAKnB,cAAI,UAAU,MAAM,CAACC,WAAU,CAACA,OAAM,WAAW,MAAM,GAAG;AACxD,gBAAI,QAAQ;AACV,qBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,WAAW,OAAO;AAAA,YAClD;AACA,mBAAOD;AAAA,UACT;AACA,cAAI,QAAQ;AACV,mBAAO,CAAC,IAAI,OAAO,CAAC,EAAE;AAAA,cACpB;AAAA,cACA,CAAC,MAAM,KAAK,GAAG,SAAS,GAAG,GAAG,GAAG,OAAO,GAAG,IAAI;AAAA,YACjD;AAAA,UACF;AACA,gBAAM,YAAY,UAAU,IAAI,CAACC,WAAUA,OAAM,aAAa,CAAC,CAAC,EAAE,KAAK;AACvE,cAAI,UAAU,yBAAyB,QAAQ;AAC7C,YAAAD,QAAO,MAAM;AAAA,cACXA;AAAA,cACA,yBAAyB;AAAA,cACzB;AAAA,cACAD;AAAA,YACF;AAAA,UACF;AACA,cAAI,gBAAgB;AACpB,gBAAM,WAAW,UAAU;AAAA,YACzB,CAAC,MAAM,IAAI,SAAS,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC,aAAa;AACjD;AACA,kBAAI,QAAQ;AACV,oBAAI,kBAAkB,UAAU,QAAQ;AACtC,yBAAO,CAAC,IAAI,OAAO,CAAC,EAAE,QAAQ,WAAW,CAAC,MAAM,MAAM,aAAa,QAAQ;AAAA,gBAC7E;AACA,uBAAO,CAAC,KAAK;AACb,uBAAO,IAAI,IAAI,SAAS,SAAS;AAAA,cACnC;AACA,qBAAO;AAAA,gBACL,YAAY,kBAAkB,UAAU,SAAS,KAAK;AAAA;AAAA,wBAE9C,KAAK;AAAA;AAAA;AAAA,uCAGU,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,gBAK5B,SAAS;AAAA,cACX;AAAA,YACF,CAAC,EAAE,MAAM,CAAC,WAAW,cAAc,EAAE,OAAO,QAAQ,OAAO,CAAC,CAAC;AAAA,UAC/D;AACA,iBAAO,IAAIC,OAAM,QAAQ;AAAA,QAC3B,CAAC,EAAE,MAAM,CAAC,WAAW,cAAc,EAAE,OAAO,QAAQ,OAAO,CAAC,CAAC;AAAA,MAC/D;AAAA,IACF,CAAC;AAAA,EACH,OAAO;AACL,WAAO,IAAI,SAAS,KAAK,EAAE,CAAC;AAAA,EAC9B;AACF,GA9HoB;AA+HpBF,eAAc,YAAY,IAAI;;;AC/I9B,IAAI,iBAAiBI,eAAc,IAAI;AACvC,IAAI,iBAAiB,wBAAC,GAAG,QAAQ,WAAW,YAAY,CAAC,UAAU,UAAU;AAC3E,QAAM,UAAU,OAAO,SAAS,YAAY,WAAW,QAAQ,UAAU,SAAS,YAAY,QAAQ,KAAK;AAC3G,QAAM,gBAAgB,YAAY;AAAA,IAChC,CAAC,WAAW,UAAU,QAAQ,CAAC;AAAA,IAC/B;AAAA,MACE;AAAA,MACA,GAAG;AAAA,IACL;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,OAAO,OAAO,IAAI,OAAO,CAAC,GAAG;AAAA,IACjC,eAAe;AAAA,IACf,EAAE,OAAO,EAAE;AAAA,IACX;AAAA,EACF,CAAC;AACD,MAAI,SAAS,QAAQ;AACnB,QAAI,QAAQ,WAAW,MAAM;AAC3B,QAAE,OAAO,qBAAqB,SAAS;AACvC,QAAE,OAAO,gBAAgB,0BAA0B;AACnD,QAAE,OAAO,oBAAoB,UAAU;AAAA,IACzC,OAAO;AACL,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,MAAM,GAAG;AACzD,UAAE,OAAO,KAAK,KAAK;AAAA,MACrB;AAAA,IACF;AACA,WAAO,EAAE,KAAK,uBAAuB,IAAI,CAAC;AAAA,EAC5C,OAAO;AACL,WAAO,EAAE,KAAK,IAAI;AAAA,EACpB;AACF,GA7BqB;AA8BrB,IAAI,cAAc,wBAAC,WAAW,YAAY,gCAAS,aAAa,GAAG,MAAM;AACvE,QAAM,SAAS,EAAE,UAAU,KAAK;AAChC,MAAI,WAAW;AACb,MAAE,UAAU,CAAC,UAAU;AACrB,aAAO,UAAU,EAAE,GAAG,OAAO,OAAO,GAAG,CAAC;AAAA,IAC1C,CAAC;AAAA,EACH;AACA,IAAE,YAAY,eAAe,GAAG,QAAQ,WAAW,OAAO,CAAC;AAC3D,SAAO,KAAK;AACd,GAT0C,iBAAxB;;;ACjClB,IAAO,iBAAQ,YAAY,CAAC,EAAE,SAAS,MACrC,uBAAC,UACC;AAAA,yBAAC,UACC;AAAA,2BAAC,WAAM,gDAAkC;AAAA,IACzC,uBAAC,UAAK,KAAI,cAAa,MAAK,eAAc;AAAA,KAC5C;AAAA,EACA,uBAAC,UAAK,WAAU,0BAA0B,UAAS;AAAA,GACrD,CACD;;;ACND,IAAM,MAAM,IAAIC,MAAK;AAErB,IAAI,IAAI,KAAK,cAAU;AACvB,IAAI,IAAI,KAAK,YAAY;AAEzB,IAAO,cAAQ;;;ACPf,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["context", "form", "raw", "context", "html", "html2", "app", "resolved", "context", "input", "context", "map", "Node", "Node", "Hono", "d", "b", "from", "v", "Subscription", "Subscriber", "ConsumerObserver", "SafeSubscriber", "input", "Observable", "observable", "OperatorSubscriber", "err", "Subject", "observable", "AnonymousSubject", "Action", "delay", "AsyncAction", "delay", "actions", "Scheduler", "delay", "AsyncScheduler", "actions", "VirtualTimeScheduler", "actions", "VirtualAction", "delay", "actions", "input", "input", "input", "input", "delay", "delay", "delay", "input", "input", "input", "input", "iterator", "input", "iterator", "input", "input", "input", "NotificationKind", "Notification", "errorHandler", "strokeWidth", "SubscriptionLog", "SubscriptionLoggable", "ColdObservable", "observable", "HotObservable", "i", "TestScheduler", "observable", "i", "map", "_a", "observable", "context", "createContext", "context", "context", "map", "nameSpaceContext", "style", "context", "createContext", "components_exports", "button", "form", "input", "link", "meta", "script", "style", "title", "nameSpaceContext", "getNameSpaceContext", "style", "context", "errorHandler", "context", "context2", "documentMetadataTag", "title", "nameSpaceContext", "getNameSpaceContext", "script", "style", "link", "meta", "form", "formActionableElement", "input", "button", "jsxDEV", "components_exports", "Fragment", "Fragment", "createContext", "Suspense", "context", "html", "html2", "resolved", "ErrorBoundary", "context", "html", "html2", "createContext", "Hono"]
}
